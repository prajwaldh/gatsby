'use strict';

var _npmPackageArg = require('npm-package-arg');

var _npmPackageArg2 = _interopRequireDefault(_npmPackageArg);

var _ghGot = require('gh-got');

var _ghGot2 = _interopRequireDefault(_ghGot);

var _asyncCachePromise = require('async-cache-promise');

var _asyncCachePromise2 = _interopRequireDefault(_asyncCachePromise);

var _immutableObjectMethods = require('immutable-object-methods');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const getDirect = directUrl => (0, _ghGot2.default)(directUrl, { json: true }).then(_ref => {
  let body = _ref.body;
  return body;
});
const setup = get => arg => {
  const _requested = typeof arg === 'object' ? arg : (0, _npmPackageArg2.default)(arg);
  if (!_requested || _requested.type !== 'hosted' || _requested.hosted.type !== 'github') {
    throw new Error('arg is not a valid github reference');
  }

  return getDirect(_requested.hosted.directUrl).then(pkg => (0, _immutableObjectMethods.set)(pkg, '_requested', _requested));
};

module.exports = setup(getDirect);
module.exports.cached = () => {
  const cache = new _asyncCachePromise2.default({
    load: getDirect
  });

  return setup(directUrl => cache.get(directUrl));
};