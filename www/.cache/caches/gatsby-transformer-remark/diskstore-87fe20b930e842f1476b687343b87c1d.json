{"expireTime":9007200804686335000,"key":"transformer-remark-markdown-html-e494718ebdb6e82a9111043a8c93779b-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>Errors while building static HTML files generally happen for one of the following reasons:</p>\n<ol>\n<li>\n<p>Some of your code references “browser globals” like <code class=\"language-text\">window</code> or <code class=\"language-text\">document</code>. If\nthis is your problem you should see an error above like “window is not\ndefined”. To fix this, find the offending code and either a) check before\ncalling the code if window is defined so the code doesn’t run while Gatsby is\nbuilding (see code sample below) or b) if the code is in the render function\nof a React.js component, move that code into <code class=\"language-text\">componentDidMount</code> which\nensures the code doesn’t run unless it’s in the browser.</p>\n</li>\n<li>\n<p>Check that each of your JS files listed in your <code class=\"language-text\">pages</code> directory (and any\nsub-directories) are exporting either a React component or string. Gatsby\ntreats any JS file listed under the <code class=\"language-text\">pages</code> dir as a page component, so it must\nhave a default export that’s a component or string.</p>\n</li>\n<li>\n<p>You mix up <code class=\"language-text\">import</code> and <code class=\"language-text\">require</code> calls in the same file. This might lead to\n“WebpackError: Invariant Violation: Minified React error #130” <a href=\"/docs/migrating-from-v1-to-v2/#convert-to-either-pure-commonjs-or-pure-es6\">since Webpack 4\nis stricter than v3</a>.\nThe solution is to only use <code class=\"language-text\">import</code>.</p>\n</li>\n<li>\n<p>Some other reason :-) #1 is the most common reason building static files\nfail. If it’s another reason, you have to be a bit more creative in figuring\nout the problem.</p>\n</li>\n</ol>\n<h2 id=\"how-to-check-if-window-is-defined\"><a href=\"#how-to-check-if-window-is-defined\" aria-label=\"how to check if window is defined permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to check if <code class=\"language-text\">window</code> is defined</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Requiring function causes error during builds</span>\n<span class=\"token comment\">// as the code tries to reference window</span>\n<span class=\"token keyword\">const</span> module <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"module\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token comment\">// Wrap the require in check for window</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token string\">`undefined`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> module <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"module\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"fixing-third-party-modules\"><a href=\"#fixing-third-party-modules\" aria-label=\"fixing third party modules permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixing third-party modules</h2>\n<p>So, the worst has happened and you’re using an NPM module that expects <code class=\"language-text\">window</code>\nto be defined. You may be able to file an issue and get the module patched, but\nwhat to do in the mean time?</p>\n<p>One solution is to <a href=\"/docs/add-custom-webpack-config\">customize</a> your webpack\nconfiguration to replace the offending module with a dummy module during server\nrendering.</p>\n<p><code class=\"language-text\">gatsby-node.js</code> in the project root:</p>\n<div class=\"gatsby-code-title\">gatsby-node.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateWebpackConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> stage<span class=\"token punctuation\">,</span> loaders<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stage <span class=\"token operator\">===</span> <span class=\"token string\">\"build-html\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">setWebpackConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/bad-module/</span><span class=\"token punctuation\">,</span>\n            use<span class=\"token punctuation\">:</span> loaders<span class=\"token punctuation\">.</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}