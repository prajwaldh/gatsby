{"expireTime":9007200804686247000,"key":"transformer-remark-markdown-html-6210b04df134054fabdce2901b909384-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h1 id=\"gatsby-source-graphql-universal\"><a href=\"#gatsby-source-graphql-universal\" aria-label=\"gatsby source graphql universal permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-graphql-universal</h1>\n<blockquote>\n<p>NOTE: This is an universal version of the official <code class=\"language-text\">gatsby-source-graphql</code> source plugin. It modifies the babel plugins to skip the removal of graphql queries so they can be re-used.</p>\n</blockquote>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>The plugin provides higher order component as well as direct manipulation tools for custom operations</p>\n<p><a href=\"/index.d.ts\">See TypeScript definitions for more details</a></p>\n<h3 id=\"higher-order-component\"><a href=\"#higher-order-component\" aria-label=\"higher order component permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Higher-Order Component</h3>\n<p>There is a higher order component to wrap components to get access to graphql queries in the browser.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withGraphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-source-graphql-universal'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> fooFragment <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  fragment Planet on ...SWAPI_Planet {\n    id\n    title\n  }\n`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n{\n  swapi {\n    ...\n  }\n}\n`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Demo <span class=\"token operator\">=</span> <span class=\"token function\">withGraphql</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token string\">'swapi'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      query<span class=\"token punctuation\">,</span>\n      fragments<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>fooFragment<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      fetchPolicy<span class=\"token punctuation\">:</span> <span class=\"token string\">'network-only'</span><span class=\"token punctuation\">,</span>\n      variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Reload</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"props\"><a href=\"#props\" aria-label=\"props permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props</h4>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">data</code></strong>: Same as data from gatsby, but when <code class=\"language-text\">graphql()</code> (below) is called, it will be overwritten with new data when <code class=\"language-text\">composeData</code> prop is set to true.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">graphql(fieldName, options): Promise</code></strong></p>\n<ul>\n<li><strong><code class=\"language-text\">fieldName</code></strong>: the same fieldName as provided in gatsby-config.js</li>\n<li><strong><code class=\"language-text\">options.query</code></strong>: the query variable defined above the component</li>\n<li><strong><code class=\"language-text\">options.fragments</code></strong>: list of fragments to inject into the query</li>\n<li><strong><code class=\"language-text\">options.composeData</code></strong>: <em>(default: true)</em>  will overwrite component gatsby data with composed data from the browser when true</li>\n<li><strong><code class=\"language-text\">...options</code></strong> optional parameters to pass to <code class=\"language-text\">ApolloClient.query</code> (sets fetchPolicy to ‘network-only’ by default)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"getisolatedquery\"><a href=\"#getisolatedquery\" aria-label=\"getisolatedquery permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getIsolatedQuery</h3>\n<p>The following code will now result in an object that has the original graphql query source accessible where you are free to do anything with it.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql\\`<span class=\"token operator\">...</span>\\`<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1234567\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{ \\\"swapi\\\": { ... } }\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can get isolated query to your graphql endpoint by re-using the composing function:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getIsolatedQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-source-graphql-universal'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> gatsby<span class=\"token template-string\"><span class=\"token string\">`\nquery {\n  siteMetadata {\n    title\n  }\n  swapi {\n    allPersons {\n      ... on SWAPI_Person {\n        id\n      }\n    }\n  }\n}\n`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> onlySwapi <span class=\"token operator\">=</span> <span class=\"token function\">getIsolatedQuery</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">'swapi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SWAPI'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Output:</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// query {</span>\n<span class=\"token comment\">//   allPersons {</span>\n<span class=\"token comment\">//     ... on Person {</span>\n<span class=\"token comment\">//       id</span>\n<span class=\"token comment\">//     }</span>\n<span class=\"token comment\">//   }</span>\n<span class=\"token comment\">// }</span></code></pre></div>\n<hr>\n<hr>\n<h3 id=\"gatsby-source-graphql-previous-documentation\"><a href=\"#gatsby-source-graphql-previous-documentation\" aria-label=\"gatsby source graphql previous documentation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-graphql (previous documentation)</h3>\n<p>Plugin for connecting arbitrary GraphQL APIs to Gatsby GraphQL. Remote schemas are stitched together by adding a type that wraps the remote schema\nQuery type and putting it under field of Gatsby GraphQL Query.</p>\n<ul>\n<li><a href=\"https://using-gatsby-source-graphql.netlify.com/\">Example website</a></li>\n<li><a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-gatsby-source-graphql\">Example website source</a></li>\n</ul>\n<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-source-graphql-universal</code></p>\n<h2 id=\"how-to-use-1\"><a href=\"#how-to-use-1\" aria-label=\"how to use 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>First, you need a way to pass environment variables to the build process, so secrets and other secured data aren’t committed to source control. We\nrecommend using <a href=\"https://github.com/motdotla/dotenv\"><code class=\"language-text\">dotenv</code></a> which will then expose environment variables. <a href=\"https://gatsby.app/env-vars\">Read more about dotenv and using environment variables\nhere</a>. Then we can <em>use</em> these environment variables and configure our plugin.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Simple config, passing URL</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// This type will contain remote schema Query type</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"SWAPI\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// This is field under which it's accessible</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"swapi\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Url to query from</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://api.graphcms.com/simple/v1/swapi\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Passing paramaters (passed to apollo-link)</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"GitHub\"</span><span class=\"token punctuation\">,</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"github\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Url to query from</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://api.github.com/graphql\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// HTTP headers</span>\n        headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Learn about environment variables: https://gatsby.app/env-vars</span>\n          Authorization<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GITHUB_TOKEN</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Additional options to pass to node-fetch</span>\n        fetchOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Creating arbitrary Apollo Link (for advanced situations)</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"GitHub\"</span><span class=\"token punctuation\">,</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"github\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Create Apollo Link manually. Can return a Promise.</span>\n        createLink<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>pluginOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">createHttpLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            uri<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://api.github.com/graphql'</span><span class=\"token punctuation\">,</span>\n            headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GITHUB_TOKEN</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            fetch<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"how-to-query\"><a href=\"#how-to-query\" aria-label=\"how to query permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to Query</h2>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># Field name parameter defines how you can access third party api</span>\n  swapi <span class=\"token punctuation\">{</span>\n    allSpecies <span class=\"token punctuation\">{</span>\n      name\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  github <span class=\"token punctuation\">{</span>\n    viewer <span class=\"token punctuation\">{</span>\n      email\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"schema-definitions\"><a href=\"#schema-definitions\" aria-label=\"schema definitions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Schema definitions</h2>\n<p>By default schema is introspected from the remote schema. Schema is cached in <code class=\"language-text\">.cache</code> in this case and refreshing the schema requires deleting the\ncache.</p>\n<p>To control schema consumption, you can alternatively construct schema definition by passing <code class=\"language-text\">createSchema</code> callback. This way you could, for\nexample, read schema SDL or introspection JSON. When <code class=\"language-text\">createSchema</code> callback is used, schema isn’t cached. <code class=\"language-text\">createSchema</code> can return a Promise to\nGraphQLSchema instance or GraphQLSchema instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> buildSchema<span class=\"token punctuation\">,</span> buildClientSchema <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"graphql\"</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"SWAPI\"</span><span class=\"token punctuation\">,</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"swapi\"</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://api.graphcms.com/simple/v1/swapi\"</span><span class=\"token punctuation\">,</span>\n\n        createSchema<span class=\"token punctuation\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>\n            fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/introspection.json`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">buildClientSchema</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"SWAPI\"</span><span class=\"token punctuation\">,</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"swapi\"</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://api.graphcms.com/simple/v1/swapi\"</span><span class=\"token punctuation\">,</span>\n\n        createSchema<span class=\"token punctuation\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> sdl <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/schema.sdl`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">buildSchema</span><span class=\"token punctuation\">(</span>sdl<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"refetching-data\"><a href=\"#refetching-data\" aria-label=\"refetching data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refetching data</h1>\n<p>By default, <code class=\"language-text\">gatsby-source-graphql-universal</code> will only refetch the data once the server is restarted. It’s also possible to configure the plugin to\nperiodically refetch the data. The option is called <code class=\"language-text\">refetchInterval</code> and specifies the timeout in seconds.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Simple config, passing URL</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-graphql-universal\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// This type will contain remote schema Query type</span>\n        typeName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"SWAPI\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// This is field under which it's accessible</span>\n        fieldName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"swapi\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Url to query from</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://api.graphcms.com/simple/v1/swapi\"</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// refetch interval in seconds</span>\n        refetchInterval<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}