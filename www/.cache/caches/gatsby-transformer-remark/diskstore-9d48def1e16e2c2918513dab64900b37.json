{"expireTime":9007200804686345000,"key":"transformer-remark-markdown-html-ast-f8e6cf408fd76184ba6ef212cfe36248-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{"id":"query-execution"},"children":[{"type":"element","tagName":"a","properties":{"href":"#query-execution","aria-label":"query execution permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Query Execution","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":20,"offset":20}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Query Execution is kicked off by bootstrap by calling ","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":55,"offset":76}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L29"},"children":[{"type":"text","value":"page-query-runner.js runInitialQuerys()","position":{"start":{"line":4,"column":56,"offset":77},"end":{"line":4,"column":95,"offset":116}}}],"position":{"start":{"line":4,"column":55,"offset":76},"end":{"line":4,"column":219,"offset":240}}},{"type":"text","value":". The main files involved in this step are:","position":{"start":{"line":4,"column":219,"offset":240},"end":{"line":4,"column":262,"offset":283}}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":262,"offset":283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby/src/internal-plugins/query-runner/query-queue.js"},"children":[{"type":"text","value":"page-query-runner.js","position":{"start":{"line":6,"column":4,"offset":288},"end":{"line":6,"column":24,"offset":308}}}],"position":{"start":{"line":6,"column":3,"offset":287},"end":{"line":6,"column":138,"offset":422}}}],"position":{"start":{"line":6,"column":1,"offset":285},"end":{"line":6,"column":138,"offset":422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby/src/internal-plugins/query-runner/query-queue.js"},"children":[{"type":"text","value":"query-queue.js","position":{"start":{"line":7,"column":4,"offset":426},"end":{"line":7,"column":18,"offset":440}}}],"position":{"start":{"line":7,"column":3,"offset":425},"end":{"line":7,"column":132,"offset":554}}}],"position":{"start":{"line":7,"column":1,"offset":423},"end":{"line":7,"column":132,"offset":554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby/src/internal-plugins/query-runner/query-runner.js"},"children":[{"type":"text","value":"query-runner.js","position":{"start":{"line":8,"column":4,"offset":558},"end":{"line":8,"column":19,"offset":573}}}],"position":{"start":{"line":8,"column":3,"offset":557},"end":{"line":8,"column":134,"offset":688}}}],"position":{"start":{"line":8,"column":1,"offset":555},"end":{"line":8,"column":134,"offset":688}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":285},"end":{"line":8,"column":134,"offset":688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hereâ€™s an overview of how it all relates:","position":{"start":{"line":10,"column":1,"offset":690},"end":{"line":10,"column":42,"offset":731}}}],"position":{"start":{"line":10,"column":1,"offset":690},"end":{"line":10,"column":42,"offset":731}}},{"type":"text","value":"\n"},{"type":"raw","value":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: %0 Pages: 1 -->\n<svg width=\"632pt\" height=\"645pt\"\n viewBox=\"0.00 0.00 632.00 644.80\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 640.8)\">\n<title>%0</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-640.8 628,-640.8 628,4 -4,4\"/>\n<g id=\"clust1\" class=\"cluster\">\n<title>cluster_other</title>\n</g>\n<g id=\"clust2\" class=\"cluster\">\n<title>cluster_pageQueryRunner</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"8,-326.8 8,-547.6 564,-547.6 564,-326.8 8,-326.8\"/>\n<text text-anchor=\"middle\" x=\"286\" y=\"-531\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">page&#45;query&#45;runner.js</text>\n</g>\n<g id=\"clust3\" class=\"cluster\">\n<title>cluster_queryQueue</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"259,-242 259,-318.8 361,-318.8 361,-242 259,-242\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-302.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">query&#45;queue.js</text>\n</g>\n<g id=\"clust4\" class=\"cluster\">\n<title>cluster_queryRunner</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"146,-85.2 146,-234 474,-234 474,-85.2 146,-85.2\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-217.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">query&#45;runner.js</text>\n</g>\n<!-- extractQueries -->\n<g id=\"node1\" class=\"node\">\n<title>extractQueries</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"133.6731,-610.2 24.3269,-610.2 24.3269,-574.2 133.6731,-574.2 133.6731,-610.2\"/>\n<text text-anchor=\"middle\" x=\"79\" y=\"-588\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">query&#45;watcher.js</text>\n</g>\n<!-- extractedQueryQ -->\n<g id=\"node6\" class=\"node\">\n<title>extractedQueryQ</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"184.3834,-442.8 15.6166,-442.8 15.6166,-406.8 184.3834,-406.8 184.3834,-442.8\"/>\n<text text-anchor=\"middle\" x=\"100\" y=\"-420.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">queueQueryForPathname()</text>\n</g>\n<!-- extractQueries&#45;&gt;extractedQueryQ -->\n<g id=\"edge8\" class=\"edge\">\n<title>extractQueries&#45;&gt;extractedQueryQ</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M81.2873,-573.9666C84.9324,-544.9104 92.088,-487.8699 96.4172,-453.3598\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"99.9434,-453.3688 97.7155,-443.0109 92.9979,-452.4975 99.9434,-453.3688\"/>\n</g>\n<!-- componentsDD -->\n<g id=\"node2\" class=\"node\">\n<title>componentsDD</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M334.6517,-615.6821C334.6517,-618.5614 293.5719,-620.9004 243,-620.9004 192.4281,-620.9004 151.3483,-618.5614 151.3483,-615.6821 151.3483,-615.6821 151.3483,-568.7179 151.3483,-568.7179 151.3483,-565.8386 192.4281,-563.4996 243,-563.4996 293.5719,-563.4996 334.6517,-565.8386 334.6517,-568.7179 334.6517,-568.7179 334.6517,-615.6821 334.6517,-615.6821\"/>\n<path fill=\"none\" stroke=\"#000000\" d=\"M334.6517,-615.6821C334.6517,-612.8028 293.5719,-610.4639 243,-610.4639 192.4281,-610.4639 151.3483,-612.8028 151.3483,-615.6821\"/>\n<text text-anchor=\"start\" x=\"159.4242\" y=\"-596.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">componentDataDependencies</text>\n<text text-anchor=\"middle\" x=\"243\" y=\"-579.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">(redux)</text>\n</g>\n<!-- findIdsWithoutDD -->\n<g id=\"node7\" class=\"node\">\n<title>findIdsWithoutDD</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"417.8053,-442.8 202.1947,-442.8 202.1947,-406.8 417.8053,-406.8 417.8053,-442.8\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-420.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">findIdsWithoutDataDependencies()</text>\n</g>\n<!-- componentsDD&#45;&gt;findIdsWithoutDD -->\n<g id=\"edge9\" class=\"edge\">\n<title>componentsDD&#45;&gt;findIdsWithoutDD</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M254.5177,-563.4229C266.9552,-532.3479 286.6303,-483.1893 298.902,-452.5285\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"302.2922,-453.477 302.7587,-442.8925 295.7934,-450.8759 302.2922,-453.477\"/>\n</g>\n<!-- components -->\n<g id=\"node3\" class=\"node\">\n<title>components</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M435.6557,-615.6821C435.6557,-618.5614 416.985,-620.9004 394,-620.9004 371.015,-620.9004 352.3443,-618.5614 352.3443,-615.6821 352.3443,-615.6821 352.3443,-568.7179 352.3443,-568.7179 352.3443,-565.8386 371.015,-563.4996 394,-563.4996 416.985,-563.4996 435.6557,-565.8386 435.6557,-568.7179 435.6557,-568.7179 435.6557,-615.6821 435.6557,-615.6821\"/>\n<path fill=\"none\" stroke=\"#000000\" d=\"M435.6557,-615.6821C435.6557,-612.8028 416.985,-610.4639 394,-610.4639 371.015,-610.4639 352.3443,-612.8028 352.3443,-615.6821\"/>\n<text text-anchor=\"start\" x=\"360.1725\" y=\"-596.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">components</text>\n<text text-anchor=\"middle\" x=\"394\" y=\"-579.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> (redux)</text>\n</g>\n<!-- components&#45;&gt;findIdsWithoutDD -->\n<g id=\"edge10\" class=\"edge\">\n<title>components&#45;&gt;findIdsWithoutDD</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M379.5599,-563.4229C363.8989,-532.2128 339.0846,-482.7615 323.7138,-452.1296\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"326.6919,-450.2606 319.0787,-442.8925 320.4354,-453.4001 326.6919,-450.2606\"/>\n</g>\n<!-- createNode -->\n<g id=\"node4\" class=\"node\">\n<title>createNode</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"608.0204,-610.2 453.9796,-610.2 453.9796,-574.2 608.0204,-574.2 608.0204,-610.2\"/>\n<text text-anchor=\"middle\" x=\"531\" y=\"-588\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">CREATE_NODE action</text>\n</g>\n<!-- dirtyActions -->\n<g id=\"node5\" class=\"node\">\n<title>dirtyActions</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M538.9888,-511.5273C538.9888,-513.3331 519.7205,-514.8 496,-514.8 472.2795,-514.8 453.0112,-513.3331 453.0112,-511.5273 453.0112,-511.5273 453.0112,-482.0727 453.0112,-482.0727 453.0112,-480.2669 472.2795,-478.8 496,-478.8 519.7205,-478.8 538.9888,-480.2669 538.9888,-482.0727 538.9888,-482.0727 538.9888,-511.5273 538.9888,-511.5273\"/>\n<path fill=\"none\" stroke=\"#000000\" d=\"M538.9888,-511.5273C538.9888,-509.7214 519.7205,-508.2545 496,-508.2545 472.2795,-508.2545 453.0112,-509.7214 453.0112,-511.5273\"/>\n<text text-anchor=\"middle\" x=\"496\" y=\"-492.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">dirtyActions</text>\n</g>\n<!-- createNode&#45;&gt;dirtyActions -->\n<g id=\"edge11\" class=\"edge\">\n<title>createNode&#45;&gt;dirtyActions</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M524.2516,-573.8059C519.135,-559.8594 512.0163,-540.4558 506.2049,-524.6156\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"509.3391,-522.9967 502.6089,-514.8141 502.7674,-525.4077 509.3391,-522.9967\"/>\n</g>\n<!-- findDirtyActions -->\n<g id=\"node8\" class=\"node\">\n<title>findDirtyActions</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"556.4678,-442.8 435.5322,-442.8 435.5322,-406.8 556.4678,-406.8 556.4678,-442.8\"/>\n<text text-anchor=\"middle\" x=\"496\" y=\"-420.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">findDirtyActions()</text>\n</g>\n<!-- dirtyActions&#45;&gt;findDirtyActions -->\n<g id=\"edge3\" class=\"edge\">\n<title>dirtyActions&#45;&gt;findDirtyActions</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M496,-478.6314C496,-470.931 496,-461.7743 496,-453.2166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"499.5001,-453.2132 496,-443.2133 492.5001,-453.2133 499.5001,-453.2132\"/>\n</g>\n<!-- queryJobs -->\n<g id=\"node9\" class=\"node\">\n<title>queryJobs</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"393.6093,-370.8 226.3907,-370.8 226.3907,-334.8 393.6093,-334.8 393.6093,-370.8\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-348.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">runQueriesForPathnames()</text>\n</g>\n<!-- extractedQueryQ&#45;&gt;queryJobs -->\n<g id=\"edge1\" class=\"edge\">\n<title>extractedQueryQ&#45;&gt;queryJobs</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M152.7208,-406.7243C181.5538,-396.8387 217.4481,-384.5321 247.6631,-374.1726\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"248.9332,-377.4373 257.2575,-370.8831 246.6629,-370.8156 248.9332,-377.4373\"/>\n</g>\n<!-- findIdsWithoutDD&#45;&gt;queryJobs -->\n<g id=\"edge2\" class=\"edge\">\n<title>findIdsWithoutDD&#45;&gt;queryJobs</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M310,-406.6314C310,-398.931 310,-389.7743 310,-381.2166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"313.5001,-381.2132 310,-371.2133 306.5001,-381.2133 313.5001,-381.2132\"/>\n</g>\n<!-- findDirtyActions&#45;&gt;queryJobs -->\n<g id=\"edge4\" class=\"edge\">\n<title>findDirtyActions&#45;&gt;queryJobs</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M449.0643,-406.6314C423.8563,-396.8734 392.6074,-384.777 366.1209,-374.5242\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"367.1873,-371.184 356.5981,-370.838 364.6603,-377.712 367.1873,-371.184\"/>\n</g>\n<!-- queryQ -->\n<g id=\"node10\" class=\"node\">\n<title>queryQ</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"352.9608,-286 267.0392,-286 267.0392,-250 352.9608,-250 352.9608,-286\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-263.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">better&#45;queue</text>\n</g>\n<!-- queryJobs&#45;&gt;queryQ -->\n<g id=\"edge12\" class=\"edge\">\n<title>queryJobs&#45;&gt;queryQ</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M310,-334.3997C310,-332.6235 310,-330.7635 310,-328.8407\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"313.5001,-328.7998 310,-318.7999 306.5001,-328.7999 313.5001,-328.7998\"/>\n</g>\n<!-- graphqlJs -->\n<g id=\"node11\" class=\"node\">\n<title>graphqlJs</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"310\" cy=\"-183.2\" rx=\"155.6479\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-179\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">graphqlJs(schema, query, context, ...)</text>\n</g>\n<!-- queryQ&#45;&gt;graphqlJs -->\n<g id=\"edge13\" class=\"edge\">\n<title>queryQ&#45;&gt;graphqlJs</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M310,-249.5997C310,-247.8235 310,-245.9635 310,-244.0407\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"313.5001,-243.9998 310,-233.9999 306.5001,-243.9999 313.5001,-243.9998\"/>\n</g>\n<!-- result -->\n<g id=\"node12\" class=\"node\">\n<title>result</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"310\" cy=\"-111.2\" rx=\"62.0187\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"310\" y=\"-107\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">Query Result</text>\n</g>\n<!-- graphqlJs&#45;&gt;result -->\n<g id=\"edge5\" class=\"edge\">\n<title>graphqlJs&#45;&gt;result</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M310,-165.0314C310,-157.331 310,-148.1743 310,-139.6166\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"313.5001,-139.6132 310,-129.6133 306.5001,-139.6133 313.5001,-139.6132\"/>\n</g>\n<!-- diskResult -->\n<g id=\"node13\" class=\"node\">\n<title>diskResult</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M319.7488,-43.3273C319.7488,-45.1331 281.3148,-46.6 234,-46.6 186.6852,-46.6 148.2512,-45.1331 148.2512,-43.3273 148.2512,-43.3273 148.2512,-13.8727 148.2512,-13.8727 148.2512,-12.0669 186.6852,-10.6 234,-10.6 281.3148,-10.6 319.7488,-12.0669 319.7488,-13.8727 319.7488,-13.8727 319.7488,-43.3273 319.7488,-43.3273\"/>\n<path fill=\"none\" stroke=\"#000000\" d=\"M319.7488,-43.3273C319.7488,-41.5214 281.3148,-40.0545 234,-40.0545 186.6852,-40.0545 148.2512,-41.5214 148.2512,-43.3273\"/>\n<text text-anchor=\"middle\" x=\"234\" y=\"-24.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">/public/static/d/${dataPath}</text>\n</g>\n<!-- result&#45;&gt;diskResult -->\n<g id=\"edge6\" class=\"edge\">\n<title>result&#45;&gt;diskResult</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M293.8824,-93.6827C283.346,-82.2313 269.4048,-67.0795 257.6252,-54.2769\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"259.9664,-51.6522 250.6198,-46.6631 254.8151,-56.3919 259.9664,-51.6522\"/>\n</g>\n<!-- jsonDataPaths -->\n<g id=\"node14\" class=\"node\">\n<title>jsonDataPaths</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M434.094,-52.0821C434.094,-54.9614 412.5375,-57.3004 386,-57.3004 359.4625,-57.3004 337.906,-54.9614 337.906,-52.0821 337.906,-52.0821 337.906,-5.1179 337.906,-5.1179 337.906,-2.2386 359.4625,.1004 386,.1004 412.5375,.1004 434.094,-2.2386 434.094,-5.1179 434.094,-5.1179 434.094,-52.0821 434.094,-52.0821\"/>\n<path fill=\"none\" stroke=\"#000000\" d=\"M434.094,-52.0821C434.094,-49.2028 412.5375,-46.8639 386,-46.8639 359.4625,-46.8639 337.906,-49.2028 337.906,-52.0821\"/>\n<text text-anchor=\"start\" x=\"345.953\" y=\"-32.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">jsonDataPaths</text>\n<text text-anchor=\"middle\" x=\"386\" y=\"-16\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">(redux)</text>\n</g>\n<!-- result&#45;&gt;jsonDataPaths -->\n<g id=\"edge7\" class=\"edge\">\n<title>result&#45;&gt;jsonDataPaths</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M326.1176,-93.6827C333.8259,-85.305 343.3564,-74.9468 352.5297,-64.9769\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"355.2436,-67.1965 359.4389,-57.4677 350.0923,-62.4569 355.2436,-67.1965\"/>\n</g>\n</g>\n</svg>\n","position":{"start":{"line":12,"column":1,"offset":733},"end":{"line":67,"column":4,"offset":2464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"figuring-out-which-queries-need-to-be-executed"},"children":[{"type":"element","tagName":"a","properties":{"href":"#figuring-out-which-queries-need-to-be-executed","aria-label":"figuring out which queries need to be executed permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Figuring out which queries need to be executed","position":{"start":{"line":69,"column":6,"offset":2471},"end":{"line":69,"column":52,"offset":2517}}}],"position":{"start":{"line":69,"column":1,"offset":2466},"end":{"line":69,"column":52,"offset":2517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first thing this query does is figure out what queries even need to be run. You would think this would simply be a matter of running the Queries that were enqueued in ","position":{"start":{"line":71,"column":1,"offset":2519},"end":{"line":71,"column":172,"offset":2690}}},{"type":"element","tagName":"a","properties":{"href":"/docs/query-extraction/"},"children":[{"type":"text","value":"Extract Queries","position":{"start":{"line":71,"column":173,"offset":2691},"end":{"line":71,"column":188,"offset":2706}}}],"position":{"start":{"line":71,"column":172,"offset":2690},"end":{"line":71,"column":214,"offset":2732}}},{"type":"text","value":", but matters are complicated by support for ","position":{"start":{"line":71,"column":214,"offset":2732},"end":{"line":71,"column":259,"offset":2777}}},{"type":"raw","value":"<code class=\"language-text\">develop</code>","position":{"start":{"line":71,"column":259,"offset":2777},"end":{"line":71,"column":268,"offset":2786}}},{"type":"text","value":". Below is the logic for figuring out which queries need to be executed (code is in ","position":{"start":{"line":71,"column":268,"offset":2786},"end":{"line":71,"column":352,"offset":2870}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L36"},"children":[{"type":"text","value":"runQueries()","position":{"start":{"line":71,"column":353,"offset":2871},"end":{"line":71,"column":365,"offset":2883}}}],"position":{"start":{"line":71,"column":352,"offset":2870},"end":{"line":71,"column":489,"offset":3007}}},{"type":"text","value":").","position":{"start":{"line":71,"column":489,"offset":3007},"end":{"line":71,"column":491,"offset":3009}}}],"position":{"start":{"line":71,"column":1,"offset":2519},"end":{"line":71,"column":491,"offset":3009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{"id":"already-queued-queries"},"children":[{"type":"element","tagName":"a","properties":{"href":"#already-queued-queries","aria-label":"already queued queries permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Already queued queries","position":{"start":{"line":73,"column":7,"offset":3017},"end":{"line":73,"column":29,"offset":3039}}}],"position":{"start":{"line":73,"column":1,"offset":3011},"end":{"line":73,"column":29,"offset":3039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All queries queued after being extracted (from ","position":{"start":{"line":75,"column":1,"offset":3041},"end":{"line":75,"column":48,"offset":3088}}},{"type":"raw","value":"<code class=\"language-text\">query-watcher.js</code>","position":{"start":{"line":75,"column":48,"offset":3088},"end":{"line":75,"column":66,"offset":3106}}},{"type":"text","value":").","position":{"start":{"line":75,"column":66,"offset":3106},"end":{"line":75,"column":68,"offset":3108}}}],"position":{"start":{"line":75,"column":1,"offset":3041},"end":{"line":75,"column":68,"offset":3108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{"id":"queries-without-node-dependencies"},"children":[{"type":"element","tagName":"a","properties":{"href":"#queries-without-node-dependencies","aria-label":"queries without node dependencies permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Queries without node dependencies","position":{"start":{"line":77,"column":7,"offset":3116},"end":{"line":77,"column":40,"offset":3149}}}],"position":{"start":{"line":77,"column":1,"offset":3110},"end":{"line":77,"column":40,"offset":3149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All queries whose component path isnâ€™t listed in ","position":{"start":{"line":79,"column":1,"offset":3151},"end":{"line":79,"column":50,"offset":3200}}},{"type":"raw","value":"<code class=\"language-text\">componentDataDependencies</code>","position":{"start":{"line":79,"column":50,"offset":3200},"end":{"line":79,"column":77,"offset":3227}}},{"type":"text","value":". As a recap, in ","position":{"start":{"line":79,"column":77,"offset":3227},"end":{"line":79,"column":94,"offset":3244}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-generation/"},"children":[{"type":"text","value":"Schema Generation","position":{"start":{"line":79,"column":95,"offset":3245},"end":{"line":79,"column":112,"offset":3262}}}],"position":{"start":{"line":79,"column":94,"offset":3244},"end":{"line":79,"column":139,"offset":3289}}},{"type":"text","value":", we showed that all Type resolvers record a dependency between the page whose query weâ€™re running and any nodes that were successfully resolved. So, If a component is declared in the ","position":{"start":{"line":79,"column":139,"offset":3289},"end":{"line":79,"column":323,"offset":3473}}},{"type":"raw","value":"<code class=\"language-text\">components</code>","position":{"start":{"line":79,"column":323,"offset":3473},"end":{"line":79,"column":335,"offset":3485}}},{"type":"text","value":" redux namespace (occurs during ","position":{"start":{"line":79,"column":335,"offset":3485},"end":{"line":79,"column":367,"offset":3517}}},{"type":"element","tagName":"a","properties":{"href":"/docs/page-creation/"},"children":[{"type":"text","value":"Page Creation","position":{"start":{"line":79,"column":368,"offset":3518},"end":{"line":79,"column":381,"offset":3531}}}],"position":{"start":{"line":79,"column":367,"offset":3517},"end":{"line":79,"column":404,"offset":3554}}},{"type":"text","value":"), but is ","position":{"start":{"line":79,"column":404,"offset":3554},"end":{"line":79,"column":414,"offset":3564}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":79,"column":415,"offset":3565},"end":{"line":79,"column":418,"offset":3568}}}],"position":{"start":{"line":79,"column":414,"offset":3564},"end":{"line":79,"column":419,"offset":3569}}},{"type":"text","value":" contained in ","position":{"start":{"line":79,"column":419,"offset":3569},"end":{"line":79,"column":433,"offset":3583}}},{"type":"raw","value":"<code class=\"language-text\">componentDataDependencies</code>","position":{"start":{"line":79,"column":433,"offset":3583},"end":{"line":79,"column":460,"offset":3610}}},{"type":"text","value":", then by definition, the query has not been run. Therefore we need to run it. Checkout ","position":{"start":{"line":79,"column":460,"offset":3610},"end":{"line":79,"column":548,"offset":3698}}},{"type":"element","tagName":"a","properties":{"href":"/docs/page-node-dependencies/"},"children":[{"type":"text","value":"Page -> Node Dependencies","position":{"start":{"line":79,"column":549,"offset":3699},"end":{"line":79,"column":574,"offset":3724}}}],"position":{"start":{"line":79,"column":548,"offset":3698},"end":{"line":79,"column":606,"offset":3756}}},{"type":"text","value":" for more info. The code for this step is in ","position":{"start":{"line":79,"column":606,"offset":3756},"end":{"line":79,"column":651,"offset":3801}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L89"},"children":[{"type":"text","value":"findIdsWithoutDataDependencies","position":{"start":{"line":79,"column":652,"offset":3802},"end":{"line":79,"column":682,"offset":3832}}}],"position":{"start":{"line":79,"column":651,"offset":3801},"end":{"line":79,"column":806,"offset":3956}}},{"type":"text","value":".","position":{"start":{"line":79,"column":806,"offset":3956},"end":{"line":79,"column":807,"offset":3957}}}],"position":{"start":{"line":79,"column":1,"offset":3151},"end":{"line":79,"column":807,"offset":3957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{"id":"pages-that-depend-on-dirty-nodes"},"children":[{"type":"element","tagName":"a","properties":{"href":"#pages-that-depend-on-dirty-nodes","aria-label":"pages that depend on dirty nodes permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Pages that depend on dirty nodes","position":{"start":{"line":81,"column":7,"offset":3965},"end":{"line":81,"column":39,"offset":3997}}}],"position":{"start":{"line":81,"column":1,"offset":3959},"end":{"line":81,"column":39,"offset":3997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ","position":{"start":{"line":83,"column":1,"offset":3999},"end":{"line":83,"column":4,"offset":4002}}},{"type":"raw","value":"<code class=\"language-text\">develop</code>","position":{"start":{"line":83,"column":4,"offset":4002},"end":{"line":83,"column":13,"offset":4011}}},{"type":"text","value":" mode, every time a node is created, or is updated (e.g via editing a markdown file), we add that node to the ","position":{"start":{"line":83,"column":13,"offset":4011},"end":{"line":83,"column":123,"offset":4121}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L61"},"children":[{"type":"text","value":"enqueuedDirtyActions","position":{"start":{"line":83,"column":124,"offset":4122},"end":{"line":83,"column":144,"offset":4142}}}],"position":{"start":{"line":83,"column":123,"offset":4121},"end":{"line":83,"column":268,"offset":4266}}},{"type":"text","value":" collection. When we execute our queries, we can lookup all nodes in this collection and map them to pages that depend on them (as described above). These pagesâ€™ queries must also be executed. In addition, this step also handles dirty ","position":{"start":{"line":83,"column":268,"offset":4266},"end":{"line":83,"column":503,"offset":4501}}},{"type":"raw","value":"<code class=\"language-text\">connections</code>","position":{"start":{"line":83,"column":503,"offset":4501},"end":{"line":83,"column":516,"offset":4514}}},{"type":"text","value":" (see ","position":{"start":{"line":83,"column":516,"offset":4514},"end":{"line":83,"column":522,"offset":4520}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-connections/"},"children":[{"type":"text","value":"Schema Connections","position":{"start":{"line":83,"column":523,"offset":4521},"end":{"line":83,"column":541,"offset":4539}}}],"position":{"start":{"line":83,"column":522,"offset":4520},"end":{"line":83,"column":569,"offset":4567}}},{"type":"text","value":"). Connections depend on a nodeâ€™s type. So if a node is dirty, we mark all connection nodes of that type dirty as well. The code for this step is in ","position":{"start":{"line":83,"column":569,"offset":4567},"end":{"line":83,"column":718,"offset":4716}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L171"},"children":[{"type":"text","value":"findDirtyIds","position":{"start":{"line":83,"column":719,"offset":4717},"end":{"line":83,"column":731,"offset":4729}}}],"position":{"start":{"line":83,"column":718,"offset":4716},"end":{"line":83,"column":856,"offset":4854}}},{"type":"text","value":". ","position":{"start":{"line":83,"column":856,"offset":4854},"end":{"line":83,"column":858,"offset":4856}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Note: dirty ids is really talking about dirty paths","position":{"start":{"line":83,"column":859,"offset":4857},"end":{"line":83,"column":910,"offset":4908}}}],"position":{"start":{"line":83,"column":858,"offset":4856},"end":{"line":83,"column":911,"offset":4909}}},{"type":"text","value":".","position":{"start":{"line":83,"column":911,"offset":4909},"end":{"line":83,"column":912,"offset":4910}}}],"position":{"start":{"line":83,"column":1,"offset":3999},"end":{"line":83,"column":912,"offset":4910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"queue-queries-for-execution"},"children":[{"type":"element","tagName":"a","properties":{"href":"#queue-queries-for-execution","aria-label":"queue queries for execution permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Queue Queries for Execution","position":{"start":{"line":85,"column":6,"offset":4917},"end":{"line":85,"column":33,"offset":4944}}}],"position":{"start":{"line":85,"column":1,"offset":4912},"end":{"line":85,"column":33,"offset":4944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have the list of all pages that need to be executed (linked to their Query information). Letâ€™s queue them for execution (for realz this time). A call to ","position":{"start":{"line":87,"column":1,"offset":4946},"end":{"line":87,"column":161,"offset":5106}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L21"},"children":[{"type":"text","value":"runQueriesForPathnames","position":{"start":{"line":87,"column":162,"offset":5107},"end":{"line":87,"column":184,"offset":5129}}}],"position":{"start":{"line":87,"column":161,"offset":5106},"end":{"line":87,"column":308,"offset":5253}}},{"type":"text","value":" kicks off this step. For each page or static query, we create a Query Job that looks something like:","position":{"start":{"line":87,"column":308,"offset":5253},"end":{"line":87,"column":409,"offset":5354}}}],"position":{"start":{"line":87,"column":1,"offset":4946},"end":{"line":87,"column":409,"offset":5354}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token comment\">// page path, or static query hash</span>\n  hash<span class=\"token punctuation\">:</span> <span class=\"token comment\">// only for static queries</span>\n  jsonName<span class=\"token punctuation\">:</span> <span class=\"token comment\">// jsonName of static query or page</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token comment\">// raw query text</span>\n  componentPath<span class=\"token punctuation\">:</span> <span class=\"token comment\">// path to file where query is declared</span>\n  isPage<span class=\"token punctuation\">:</span> <span class=\"token comment\">// true if not static query</span>\n  context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token comment\">// if staticQuery, is jsonName of component</span>\n    <span class=\"token operator\">...</span>page <span class=\"token comment\">// page object. Not for static queries</span>\n    <span class=\"token operator\">...</span>page<span class=\"token punctuation\">.</span>context <span class=\"token comment\">// not for static queries</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":89,"column":1,"offset":5356},"end":{"line":103,"column":4,"offset":5791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This Query Job contains everything we need to execute the query (and do things like recording dependencies between pages and nodes). So, we push it onto the queue in ","position":{"start":{"line":105,"column":1,"offset":5793},"end":{"line":105,"column":167,"offset":5959}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/query-queue.js"},"children":[{"type":"text","value":"query-queue.js","position":{"start":{"line":105,"column":168,"offset":5960},"end":{"line":105,"column":182,"offset":5974}}}],"position":{"start":{"line":105,"column":167,"offset":5959},"end":{"line":105,"column":296,"offset":6088}}},{"type":"text","value":" and then wait for the queue to empty. Letâ€™s see how ","position":{"start":{"line":105,"column":296,"offset":6088},"end":{"line":105,"column":349,"offset":6141}}},{"type":"raw","value":"<code class=\"language-text\">query-queue</code>","position":{"start":{"line":105,"column":349,"offset":6141},"end":{"line":105,"column":362,"offset":6154}}},{"type":"text","value":" works.","position":{"start":{"line":105,"column":362,"offset":6154},"end":{"line":105,"column":369,"offset":6161}}}],"position":{"start":{"line":105,"column":1,"offset":5793},"end":{"line":105,"column":369,"offset":6161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"query-queue-execution"},"children":[{"type":"element","tagName":"a","properties":{"href":"#query-queue-execution","aria-label":"query queue execution permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Query Queue Execution","position":{"start":{"line":107,"column":6,"offset":6168},"end":{"line":107,"column":27,"offset":6189}}}],"position":{"start":{"line":107,"column":1,"offset":6163},"end":{"line":107,"column":27,"offset":6189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/query-queue.js"},"children":[{"type":"text","value":"query-queue.js","position":{"start":{"line":109,"column":2,"offset":6192},"end":{"line":109,"column":16,"offset":6206}}}],"position":{"start":{"line":109,"column":1,"offset":6191},"end":{"line":109,"column":130,"offset":6320}}},{"type":"text","value":" creates a ","position":{"start":{"line":109,"column":130,"offset":6320},"end":{"line":109,"column":141,"offset":6331}}},{"type":"element","tagName":"a","properties":{"href":"https://www.npmjs.com/package/better-queue"},"children":[{"type":"text","value":"better-queue","position":{"start":{"line":109,"column":142,"offset":6332},"end":{"line":109,"column":154,"offset":6344}}}],"position":{"start":{"line":109,"column":141,"offset":6331},"end":{"line":109,"column":199,"offset":6389}}},{"type":"text","value":" queue that offers advanced features like parallel execution, which is handy since queries do not depend on each other so we can take advantage of this. Every time an item is consumed from the queue, we call ","position":{"start":{"line":109,"column":199,"offset":6389},"end":{"line":109,"column":407,"offset":6597}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/query-runner.js"},"children":[{"type":"text","value":"query-runner.js","position":{"start":{"line":109,"column":408,"offset":6598},"end":{"line":109,"column":423,"offset":6613}}}],"position":{"start":{"line":109,"column":407,"offset":6597},"end":{"line":109,"column":538,"offset":6728}}},{"type":"text","value":" where we finally actually execute the query!","position":{"start":{"line":109,"column":538,"offset":6728},"end":{"line":109,"column":583,"offset":6773}}}],"position":{"start":{"line":109,"column":1,"offset":6191},"end":{"line":109,"column":583,"offset":6773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Query execution involves calling the ","position":{"start":{"line":111,"column":1,"offset":6775},"end":{"line":111,"column":38,"offset":6812}}},{"type":"element","tagName":"a","properties":{"href":"https://graphql.org/graphql-js/"},"children":[{"type":"text","value":"graphql-js","position":{"start":{"line":111,"column":39,"offset":6813},"end":{"line":111,"column":49,"offset":6823}}}],"position":{"start":{"line":111,"column":38,"offset":6812},"end":{"line":111,"column":83,"offset":6857}}},{"type":"text","value":" library with 3 pieces of information:","position":{"start":{"line":111,"column":83,"offset":6857},"end":{"line":111,"column":121,"offset":6895}}}],"position":{"start":{"line":111,"column":1,"offset":6775},"end":{"line":111,"column":121,"offset":6895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The Gatsby schema that was inferred during ","position":{"start":{"line":113,"column":4,"offset":6900},"end":{"line":113,"column":47,"offset":6943}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-generation/"},"children":[{"type":"text","value":"Schema Generation","position":{"start":{"line":113,"column":48,"offset":6944},"end":{"line":113,"column":65,"offset":6961}}}],"position":{"start":{"line":113,"column":47,"offset":6943},"end":{"line":113,"column":92,"offset":6988}}},{"type":"text","value":".","position":{"start":{"line":113,"column":92,"offset":6988},"end":{"line":113,"column":93,"offset":6989}}}],"position":{"start":{"line":113,"column":1,"offset":6897},"end":{"line":113,"column":93,"offset":6989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The raw query text. Obtained from the Query Job.","position":{"start":{"line":114,"column":4,"offset":6993},"end":{"line":114,"column":52,"offset":7041}}}],"position":{"start":{"line":114,"column":1,"offset":6990},"end":{"line":114,"column":52,"offset":7041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The Context, also from the Query Job. Has the pageâ€™s ","position":{"start":{"line":115,"column":4,"offset":7045},"end":{"line":115,"column":57,"offset":7098}}},{"type":"raw","value":"<code class=\"language-text\">path</code>","position":{"start":{"line":115,"column":57,"offset":7098},"end":{"line":115,"column":63,"offset":7104}}},{"type":"text","value":" amongst other things so that we can record ","position":{"start":{"line":115,"column":63,"offset":7104},"end":{"line":115,"column":107,"offset":7148}}},{"type":"element","tagName":"a","properties":{"href":"/docs/page-node-dependencies/"},"children":[{"type":"text","value":"Page -> Node Dependencies","position":{"start":{"line":115,"column":108,"offset":7149},"end":{"line":115,"column":133,"offset":7174}}}],"position":{"start":{"line":115,"column":107,"offset":7148},"end":{"line":115,"column":165,"offset":7206}}},{"type":"text","value":".","position":{"start":{"line":115,"column":165,"offset":7206},"end":{"line":115,"column":166,"offset":7207}}}],"position":{"start":{"line":115,"column":1,"offset":7042},"end":{"line":115,"column":166,"offset":7207}}},{"type":"text","value":"\n"}],"position":{"start":{"line":113,"column":1,"offset":6897},"end":{"line":115,"column":166,"offset":7207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Graphql-js will parse the query, and executes the top level query. E.g ","position":{"start":{"line":117,"column":1,"offset":7209},"end":{"line":117,"column":72,"offset":7280}}},{"type":"raw","value":"<code class=\"language-text\">allMarkdownRemark( limit: 10 )</code>","position":{"start":{"line":117,"column":72,"offset":7280},"end":{"line":117,"column":104,"offset":7312}}},{"type":"text","value":" or ","position":{"start":{"line":117,"column":104,"offset":7312},"end":{"line":117,"column":108,"offset":7316}}},{"type":"raw","value":"<code class=\"language-text\">file( relativePath: { eq: &quot;blog/my-blog.md&quot; } )</code>","position":{"start":{"line":117,"column":108,"offset":7316},"end":{"line":117,"column":157,"offset":7365}}},{"type":"text","value":". These will invoke the resolvers defined in ","position":{"start":{"line":117,"column":157,"offset":7365},"end":{"line":117,"column":202,"offset":7410}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-connections/"},"children":[{"type":"text","value":"Schema Connections","position":{"start":{"line":117,"column":203,"offset":7411},"end":{"line":117,"column":221,"offset":7429}}}],"position":{"start":{"line":117,"column":202,"offset":7410},"end":{"line":117,"column":249,"offset":7457}}},{"type":"text","value":" or ","position":{"start":{"line":117,"column":249,"offset":7457},"end":{"line":117,"column":253,"offset":7461}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-gql-type/"},"children":[{"type":"text","value":"GQL Type","position":{"start":{"line":117,"column":254,"offset":7462},"end":{"line":117,"column":262,"offset":7470}}}],"position":{"start":{"line":117,"column":253,"offset":7461},"end":{"line":117,"column":287,"offset":7495}}},{"type":"text","value":", which both use sift to query over all nodes of the type in redux. The result will be passed through the inner part of the graphql query where each typeâ€™s resolver will be invoked. The vast majority of these will be ","position":{"start":{"line":117,"column":287,"offset":7495},"end":{"line":117,"column":504,"offset":7712}}},{"type":"raw","value":"<code class=\"language-text\">identity</code>","position":{"start":{"line":117,"column":504,"offset":7712},"end":{"line":117,"column":514,"offset":7722}}},{"type":"text","value":" functions that just return the field value. Some however could call a ","position":{"start":{"line":117,"column":514,"offset":7722},"end":{"line":117,"column":585,"offset":7793}}},{"type":"element","tagName":"a","properties":{"href":"/docs/schema-gql-type/#plugin-fields"},"children":[{"type":"text","value":"custom plugin field","position":{"start":{"line":117,"column":586,"offset":7794},"end":{"line":117,"column":605,"offset":7813}}}],"position":{"start":{"line":117,"column":585,"offset":7793},"end":{"line":117,"column":644,"offset":7852}}},{"type":"text","value":" resolver. These in turn might perform side effects such as generating images. This is why the query execution phase of bootstrap often takes the longest.","position":{"start":{"line":117,"column":644,"offset":7852},"end":{"line":117,"column":798,"offset":8006}}}],"position":{"start":{"line":117,"column":1,"offset":7209},"end":{"line":117,"column":798,"offset":8006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, a result is returned.","position":{"start":{"line":119,"column":1,"offset":8008},"end":{"line":119,"column":31,"offset":8038}}}],"position":{"start":{"line":119,"column":1,"offset":8008},"end":{"line":119,"column":31,"offset":8038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"save-query-results-to-redux-and-disk"},"children":[{"type":"element","tagName":"a","properties":{"href":"#save-query-results-to-redux-and-disk","aria-label":"save query results to redux and disk permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Save Query results to redux and disk","position":{"start":{"line":121,"column":6,"offset":8045},"end":{"line":121,"column":42,"offset":8081}}}],"position":{"start":{"line":121,"column":1,"offset":8040},"end":{"line":121,"column":42,"offset":8081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As queries are consumed from the queue and executed, their results are saved to redux and disk for consumption later on. This involves converting the result to pure JSON, and then saving it to its ","position":{"start":{"line":123,"column":1,"offset":8083},"end":{"line":123,"column":198,"offset":8280}}},{"type":"element","tagName":"a","properties":{"href":"/docs/behind-the-scenes-terminology/#datapath"},"children":[{"type":"text","value":"dataPath","position":{"start":{"line":123,"column":199,"offset":8281},"end":{"line":123,"column":207,"offset":8289}}}],"position":{"start":{"line":123,"column":198,"offset":8280},"end":{"line":123,"column":255,"offset":8337}}},{"type":"text","value":". Which is relative to ","position":{"start":{"line":123,"column":255,"offset":8337},"end":{"line":123,"column":278,"offset":8360}}},{"type":"raw","value":"<code class=\"language-text\">public/static/d</code>","position":{"start":{"line":123,"column":278,"offset":8360},"end":{"line":123,"column":295,"offset":8377}}},{"type":"text","value":". The data path includes the jsonName and hash. E.g: for the page ","position":{"start":{"line":123,"column":295,"offset":8377},"end":{"line":123,"column":361,"offset":8443}}},{"type":"raw","value":"<code class=\"language-text\">/blog/2018-07-17-announcing-gatsby-preview/</code>","position":{"start":{"line":123,"column":361,"offset":8443},"end":{"line":123,"column":406,"offset":8488}}},{"type":"text","value":", the queries results would be saved to disk as something like:","position":{"start":{"line":123,"column":406,"offset":8488},"end":{"line":123,"column":469,"offset":8551}}}],"position":{"start":{"line":123,"column":1,"offset":8083},"end":{"line":123,"column":469,"offset":8551}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/public/static/d/621/path---blog-2018-07-17-announcing-gatsby-preview-995-a74-dwfQIanOJGe2gi27a9CLKHjamc.json</code></pre></div>","position":{"start":{"line":125,"column":1,"offset":8553},"end":{"line":127,"column":4,"offset":8670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For static queries, instead of using the pageâ€™s jsonName, we just use a hash of the query.","position":{"start":{"line":129,"column":1,"offset":8672},"end":{"line":129,"column":91,"offset":8762}}}],"position":{"start":{"line":129,"column":1,"offset":8672},"end":{"line":129,"column":91,"offset":8762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we need to store the association of the page -> the query result in redux so we can recall it later. This is accomplished via the ","position":{"start":{"line":131,"column":1,"offset":8764},"end":{"line":131,"column":135,"offset":8898}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/reducers/json-data-paths.js"},"children":[{"type":"text","value":"json-data-paths","position":{"start":{"line":131,"column":136,"offset":8899},"end":{"line":131,"column":151,"offset":8914}}}],"position":{"start":{"line":131,"column":135,"offset":8898},"end":{"line":131,"column":254,"offset":9017}}},{"type":"text","value":" reducer which we invoke by creating a ","position":{"start":{"line":131,"column":254,"offset":9017},"end":{"line":131,"column":293,"offset":9056}}},{"type":"raw","value":"<code class=\"language-text\">SET_JSON_DATA_PATH</code>","position":{"start":{"line":131,"column":293,"offset":9056},"end":{"line":131,"column":313,"offset":9076}}},{"type":"text","value":" action with the pageâ€™s jsonName and the saved dataPath.","position":{"start":{"line":131,"column":313,"offset":9076},"end":{"line":131,"column":369,"offset":9132}}}],"position":{"start":{"line":131,"column":1,"offset":8764},"end":{"line":131,"column":369,"offset":9132}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":132,"column":1,"offset":9133}}}}