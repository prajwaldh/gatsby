{"expireTime":9007200804686342000,"key":"transformer-remark-markdown-html-150db0076c9a46af57c1b65d4036d16a-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h2 id=\"track-nodes\"><a href=\"#track-nodes\" aria-label=\"track nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Track Nodes</h2>\n<p>You may see calls to <code class=\"language-text\">trackInlineObjectsInRootNode()</code> and <code class=\"language-text\">findRootNodeAncestor()</code> in some parts of the code. These are both defined in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/db/node-tracking.js\">schema/node-tracking.js</a>. Node tracking is the tracking of relationships between a node’s object values (not children), and the node’s ID. E.g Take, the following node:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> nodeA <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`id2`</span></span><span class=\"token punctuation\">,</span>\n  internal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`footype`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  foo<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    myfile<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blog/my-blog.md\"</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n  parent<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`id1`</span></span><span class=\"token punctuation\">,</span>\n  baz<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Its sub objects are <code class=\"language-text\">foo</code> (value = <code class=\"language-text\">{ myfile: &quot;blog/my-blog.md&quot;, b: 2}</code>), and those in the <code class=\"language-text\">baz</code> array (<code class=\"language-text\">{ x: 8 }</code>). Node tracking will track those back to the top level node’s ID (<code class=\"language-text\">id2</code> in this case). The <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/db/node-tracking.js#L32\">trackInlineObjectsinRootNode()</a> function takes care of this and records those relationships in the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/db/node-tracking.js#L9\">rootNodeMap</a> WeakMap. E.g after calling <code class=\"language-text\">trackInlineObjectsInRootNode(nodeA)</code>, <code class=\"language-text\">rootNodeMap</code> would contain the following records:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// rootNodeMap:</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">{</span> blog<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blog/my-blog.md\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"id2\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// from `foo` field</span>\n  <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"id2\"</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// from `baz` array</span>\n  <span class=\"token punctuation\">{</span>                        <span class=\"token comment\">// top level object is tracked too</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`id2`</span></span><span class=\"token punctuation\">,</span>\n    internal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>            <span class=\"token comment\">// internal is not mapped</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`footype`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    foo<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      blog<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blog/my-blog.md\"</span><span class=\"token punctuation\">,</span>\n      b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    bar<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n    parent<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`id1`</span></span><span class=\"token punctuation\">,</span>\n    baz<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"id2\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"find-root-nodes\"><a href=\"#find-root-nodes\" aria-label=\"find root nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Find Root Nodes</h2>\n<p>To access this information, <code class=\"language-text\">node-tracking.js</code> provides the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/node-tracking.js#L52\">findRootNodeAncestor()</a> function. It takes an object, and looks up its parent’s nodeID in <code class=\"language-text\">rootNodeMap</code>. It then finds the actual node in redux. It then gets that node’s <code class=\"language-text\">parent</code> ID, and gets the parent node from redux. And continues in this way until the root node is found.</p>\n<p>In the above example, <code class=\"language-text\">nodeA</code> has parent <code class=\"language-text\">id1</code>. So <code class=\"language-text\">findRootNodeAncestor({ blog: &quot;blog/my-blog.md&quot;, b: 2 })</code> would return the node for <code class=\"language-text\">id1</code> (the parent).</p>\n<h2 id=\"whywhere\"><a href=\"#whywhere\" aria-label=\"whywhere permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why/Where?</h2>\n<p>Where is node-tracking used? First up, nodes are tracked in 2 places. Firstly, in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/actions.js#L539\">createNode</a>, every time a node is created, we link all its sub objects to the new NodeID. Nodes are also tracked whenever they are resolved in <a href=\"/docs/schema-sift/#3-resolve-inner-query-fields-on-all-nodes\">run-sift</a>. This is necessary because <a href=\"/docs/schema-input-gql/#inferring-input-filters-from-plugin-fields/\">custom plugin fields</a> might return new objects that weren’t created when the node was initially made.</p>\n<p>Now, where do we use this information? In 2 places.</p>\n<ol>\n<li>In the <code class=\"language-text\">File</code> type resolver. It is used to lookup the node’s root, which should be of type <code class=\"language-text\">File</code>. We can then use that root node’s base directory attribute to create the full path of the resolved field’s value, and therefore find the actual <code class=\"language-text\">File</code> node that the string value is describing. See <a href=\"/docs/schema-gql-type/#file-types\">File GqlType inference</a> for more info.</li>\n<li>To recursively look up node descriptions in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/type-conflict-reporter.js\">type-conflict-reporter.js</a></li>\n</ol>"}