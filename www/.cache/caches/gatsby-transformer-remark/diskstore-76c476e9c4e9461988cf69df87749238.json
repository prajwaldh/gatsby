{"expireTime":9007200804686247000,"key":"transformer-remark-markdown-ast-e05703e87846357ed14171c1eb08ebe1-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"link","url":"#gatsby-plugin-lunr-search","title":null,"data":{"hProperties":{"aria-label":"gatsby plugin lunr search permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"gatsby-plugin-lunr-search","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":28,"offset":27},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":28,"offset":27},"indent":[]},"data":{"id":"gatsby-plugin-lunr-search","htmlAttributes":{"id":"gatsby-plugin-lunr-search"},"hProperties":{"id":"gatsby-plugin-lunr-search"}}},{"type":"paragraph","children":[{"type":"text","value":"A plugin for Gatsby to generate a search index that you can use with ","position":{"start":{"line":3,"column":1,"offset":29},"end":{"line":3,"column":70,"offset":98},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/olivernn/lunr.js","children":[{"type":"text","value":"Lunr","position":{"start":{"line":3,"column":71,"offset":99},"end":{"line":3,"column":75,"offset":103},"indent":[]}}],"position":{"start":{"line":3,"column":70,"offset":98},"end":{"line":3,"column":113,"offset":141},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3,"column":113,"offset":141},"end":{"line":3,"column":114,"offset":142},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":29},"end":{"line":3,"column":114,"offset":142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inspired by ","position":{"start":{"line":5,"column":1,"offset":144},"end":{"line":5,"column":13,"offset":156},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/andrew-codes/gatsby-plugin-elasticlunr-search","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-plugin-elasticlunr-search</code>","position":{"start":{"line":5,"column":14,"offset":157},"end":{"line":5,"column":48,"offset":191},"indent":[]}}],"position":{"start":{"line":5,"column":13,"offset":156},"end":{"line":5,"column":115,"offset":258},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":5,"column":115,"offset":258},"end":{"line":5,"column":116,"offset":259},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":144},"end":{"line":5,"column":116,"offset":259},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#getting-started","title":null,"data":{"hProperties":{"aria-label":"getting started permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Getting started","position":{"start":{"line":7,"column":4,"offset":264},"end":{"line":7,"column":19,"offset":279},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":261},"end":{"line":7,"column":19,"offset":279},"indent":[]},"data":{"id":"getting-started","htmlAttributes":{"id":"getting-started"},"hProperties":{"id":"getting-started"}}},{"type":"html","lang":"bash","value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">yarn add --dev lunr gatsby-plugin-lunr-search</code></pre></div>","position":{"start":{"line":9,"column":1,"offset":281},"end":{"line":11,"column":4,"offset":338},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#usage","title":null,"data":{"hProperties":{"aria-label":"usage permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Usage","position":{"start":{"line":13,"column":5,"offset":344},"end":{"line":13,"column":10,"offset":349},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":340},"end":{"line":13,"column":10,"offset":349},"indent":[]},"data":{"id":"usage","htmlAttributes":{"id":"usage"},"hProperties":{"id":"usage"}}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gatsby-config.js</span>\nplugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-plugin-lunr-search'</span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Lunr reference</span>\n      ref<span class=\"token punctuation\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span>\n      \n      <span class=\"token comment\">// Fields to be indexed</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      \n      <span class=\"token comment\">// Nodes to be indexed</span>\n      resolvers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token comment\">// Index all `MarkdownRemark` nodes</span>\n        MarkdownRemark<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          id<span class=\"token punctuation\">:</span> node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n          title<span class=\"token punctuation\">:</span> node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n          description<span class=\"token punctuation\">:</span> node <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>description\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":351},"end":{"line":40,"column":4,"offset":874},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then you can query for the search index in your pages and components. The search index is a JSON string, so you have to parse the JSON.","position":{"start":{"line":42,"column":1,"offset":876},"end":{"line":42,"column":136,"offset":1011},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":876},"end":{"line":42,"column":136,"offset":1011},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Index <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lunr'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    results<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">componentDidMount</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> Index<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>searchIndex<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      results<span class=\"token punctuation\">:</span> index<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">render</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> results <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> \n        <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>ref<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Found <span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>ref<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Could not find any results<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query SearchIndex {\n    searchIndex {\n      index\n    }\n  }\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":1012},"end":{"line":80,"column":4,"offset":1747},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":81,"column":1,"offset":1748}}}}