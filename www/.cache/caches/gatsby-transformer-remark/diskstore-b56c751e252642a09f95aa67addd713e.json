{"expireTime":9007200804686347000,"key":"transformer-remark-markdown-html-3bd90f59eb23ef56fe99d3b5e274f043-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h2 id=\"overview\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<p>In this guide we’ll be setting up a CMS powered Gatsby site that uses <a href=\"https://buttercms.com/\">ButterCMS</a> as its content management system.</p>\n<p>To complete this tutorial, you’ll need your own ButterCMS auth token which you can <a href=\"https://buttercms.com/#signup\">get yours free here</a>.</p>\n<p>ButterCMS is a headless CMS that lets you manage content using their dashboard and integrate it into your tech stack of choice with their content APIs. You can use ButterCMS for new projects as well as add it to existing codebases.</p>\n<p>ButterCMS provides a user-friendly UI for managing marketing sites, blogging, and custom content scenarios. We can be used for SEO landing pages, customer case studies, company news &#x26; updates, events + webinar pages, education center, location pages, knowledgebases, and more.</p>\n<p>ButterCMS is different from a traditional CMS like Drupal or Wordpress in that they’re not a large piece of software you need to download, host, customize, and maintain. Instead they provide easy to consume, performant content API’s that you add to your application.</p>\n<p>For example, if you wanted to enable a non-technical person to be able to add customer case study pages to your marketing site, you might create a Case Study Page Type to represent these pages. The non-technical person would be able to manage these pages from their dashboard and the JSON API output would look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;data&quot;: {\n    &quot;slug&quot;: &quot;acme-co-case-study&quot;,\n    &quot;fields&quot;: {\n      &quot;seo_title&quot;: &quot;Acme Co Customer Case Study&quot;,\n      &quot;seo_description&quot;: &quot;Acme Co saved 200% on Anvil costs with ButterCMS&quot;,\n      &quot;title&quot;: &quot;Acme Co loves ButterCMS&quot;,\n      &quot;body&quot;: &quot;&lt;p&gt;We&#39;ve been able to make anvils faster than ever before! - Chief Anvil Maker&lt;/p&gt;&quot;\n    }\n  }\n}</code></pre></div>\n<h1 id=\"setup\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h1>\n<h2 id=\"create-a-new-gatsby-site-with-the-default-starter\"><a href=\"#create-a-new-gatsby-site-with-the-default-starter\" aria-label=\"create a new gatsby site with the default starter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a new Gatsby site with the <a href=\"https://github.com/gatsbyjs/gatsby-starter-default\">default starter</a></h2>\n<p>Run this in your terminal:</p>\n<p><code class=\"language-text\">npx gatsby new butter-site</code></p>\n<h2 id=\"install-the-source-plugin\"><a href=\"#install-the-source-plugin\" aria-label=\"install the source plugin permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install the source plugin</h2>\n<p><code class=\"language-text\">npm install gatsby-source-buttercms</code></p>\n<h2 id=\"adding-configuration\"><a href=\"#adding-configuration\" aria-label=\"adding configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Configuration</h2>\n<p>Here you’ll specify the config that will be needed to pull down data from butter.\nmake sure to add your <strong>API_TOKEN</strong> from your dashboard, in this guide we would be creating <code class=\"language-text\">faq_items</code>, <code class=\"language-text\">faq_headline</code>, <code class=\"language-text\">homepage</code> , <code class=\"language-text\">customer_case_study</code> as stated in the config below. Do well to change it if you named it something differently.</p>\n<p><code class=\"language-text\">gatsby-config.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-buttercms`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        authToken<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`your_auth_token`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Optional. Returns values for the supplied content field keys.</span>\n        contentFields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          keys<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token string\">`faq_items`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`faq_headline`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Optional. Set to 1 to enable test mode for viewing draft content.</span>\n          test<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Optional. Array of page slugs.</span>\n        pages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token string\">`homepage`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Optional. Array of page types.</span>\n        pageTypes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token string\">`customer_case_study`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>More details <a href=\"https://github.com/buttercms/gatsby-source-buttercms\">here</a></p>\n<h2 id=\"buttercms-starter-template\"><a href=\"#buttercms-starter-template\" aria-label=\"buttercms starter template permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ButterCMS Starter Template</h2>\n<p>To see a fully complete Gatsby+ButterCMS project check out this <a href=\"https://github.com/ButterCMS/gatsby-starter-buttercms\">Gatsby ButterCMS Starter Project</a>. It contains real world examples of how to use Pages, Posts, and ContentFields.</p>\n<h1 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h1>\n<h2 id=\"webhooks\"><a href=\"#webhooks\" aria-label=\"webhooks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webhooks</h2>\n<p>Webhooks are a powerful feature that allow you to notify your internal systems whenever content in ButterCMS has changed.\nYour host platform need to be notified so that gatsby can create fresh pages from the new data. You can learn more about Webhooks in this <a href=\"https://buttercms.com/blog/webhook-vs-api-whats-the-difference\">blog post</a>. Checkout your host platform form incoming webhooks so we can hit it anytime your content changes. Netlify lets you generate a build hook that will be triggered by butter on certain event e.g when we create or update a blog post more details here <a href=\"https://buttercms.com/docs/api/#webhooks\">here</a></p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/OverviewWebhooks.caade716f770.png\" alt=\"Webhook\" title=\"Webhook\"></p>\n<h2 id=\"image-transformation\"><a href=\"#image-transformation\" aria-label=\"image transformation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Transformation</h2>\n<p>ButterCMS has integrated with a rich image transformation API called Filestack. This allows you to modify your uploaded images in dozens of ways. Everything from resizing, cropping, effects, filters, applying watermarks and more. Check out Filestack full documentation for more detail.</p>\n<p>After you upload an image to ButterCMS, it’s stored on our CDN. To create a thumbnail, here’s an example:</p>\n<p>Original URL = <a href=\"https://cdn.buttercms.com/zjypya5tRny63LqhHQrv\">https://cdn.buttercms.com/zjypya5tRny63LqhHQrv</a></p>\n<p>Thumbnail URL = <a href=\"https://fs.buttercms.com/resize=width:200,height:200/zjypya5tRny63LqhHQrv\">https://fs.buttercms.com/resize=width:200,height:200/zjypya5tRny63LqhHQrv</a></p>\n<p>Resizing is just one of the many different transformations you can do to your images. Refer to the <a href=\"https://www.filestack.com/docs/\">Filestack docs</a> for full details.</p>\n<h2 id=\"localization\"><a href=\"#localization\" aria-label=\"localization permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Localization</h2>\n<p>ButterCMS has full support for localization of your content. Locale names and keys are completely customizable and there’s no limit to the number of locales you can have. View their <a href=\"https://buttercms.com/docs/api/\">API Reference</a> to learn how to query by locale.</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/Localization.54a005530001.png\" alt=\"locales\"></p>\n<h1 id=\"creating-pages\"><a href=\"#creating-pages\" aria-label=\"creating pages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating pages</h1>\n<h3 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h3>\n<p>Quickly launch a new marketing site or add CMS-powered pages to your existing site using our Pages.</p>\n<h2 id=\"creating-a-single-pagehome-page\"><a href=\"#creating-a-single-pagehome-page\" aria-label=\"creating a single pagehome page permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a Single page(Home Page)</h2>\n<h3 id=\"introduction-1\"><a href=\"#introduction-1\" aria-label=\"introduction 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h3>\n<p>Quickly launch a new marketing site or add <a href=\"https://buttercms.com/gatsbyjs-cms/\">CMS-powered pages</a> to your existing site using our Pages.</p>\n<h3 id=\"create-a-single-page\"><a href=\"#create-a-single-page\" aria-label=\"create a single page permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Single Page</h3>\n<p>Adding a CMS-powered page to your app involves three easy steps:</p>\n<ol>\n<li>Create the Page structure</li>\n<li>Populate the content</li>\n<li>Integrate into your application</li>\n</ol>\n<p>If you need help after reading this, contact us via email or livechat.</p>\n<h4 id=\"create-the-page-structure\"><a href=\"#create-the-page-structure\" aria-label=\"create the page structure permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create the Page structure</h4>\n<p>Create a new Page and define it’s structure using our Page Builder. Let’s create an example homepage.</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/PagesNewSinglePage.d6038e2b75a0.png\" alt=\"image\"></p>\n<h4 id=\"populate-the-content\"><a href=\"#populate-the-content\" aria-label=\"populate the content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Populate the Content</h4>\n<p>Then populate our new page with content. In the next step, we’ll call the ButterCMS API to retrieve this content from our app.</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/PagesNewSinglePageContent.c582e2451f7f.png\" alt=\"image\"></p>\n<h3 id=\"integrate-into-your-application\"><a href=\"#integrate-into-your-application\" aria-label=\"integrate into your application permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integrate into your application</h3>\n<p>With your homepage defined, the ButterCMS our graphql query will return some data that looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;data&quot;: {\n    &quot;slug&quot;: &quot;homepage&quot;,\n    &quot;fields&quot;: {\n      &quot;seo_title&quot;: &quot;Anvils and Dynamite | Acme Co&quot;,\n      &quot;headline&quot;: &quot;Acme Co provides supplies to your favorite cartoon heroes.&quot;,\n      &quot;hero_image&quot;: &quot;https://cdn.buttercms.com/c8oSTGcwQDC5I58km5WV&quot;,\n      &quot;call_to_action&quot;: &quot;Buy Now&quot;,\n      &quot;customer_logos&quot;: [\n        {\n          &quot;logo_image&quot;: &quot;https://cdn.buttercms.com/c8oSTGcwQDC5I58km5WV&quot;\n        },\n        {\n          &quot;logo_image&quot;: &quot;https://cdn.buttercms.com/c8oSTGcwQDC5I58km5WV&quot;\n        }\n      ]\n    }\n  }\n}</code></pre></div>\n<p>Now lets create the home page <code class=\"language-text\">src/pages/index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { graphql, Link } from &#39;gatsby&#39;\nimport Layout from &#39;../components/layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\nconst IndexPage = ({ data }) =&gt; {\n  const home = data.home.edges[0].node\n\n  return (\n    &lt;Layout&gt;\n      &lt;SEO\n        title={home.seo_title}\n        keywords={[`gatsby`, `application`, `react`]}\n      /&gt;\n      &lt;div\n        style={{\n          height: `50%`,\n          display: `flex`,\n          padding: `1rem`,\n          alignItems: `center`,\n          justifyContent: `center`,\n          flexDirection: `column`,\n          background: `linear-gradient(-45deg, rgb(29, 64, 86) 0%, rgb(60, 24, 78) 100%)`,\n        }}\n      &gt;\n        &lt;h1\n          style={{\n            textAlign: `center`,\n            color: `white`,\n            fontSize: `2.5rem`,\n            fontWeight: `100`,\n            maxWidth: `960px`,\n          }}\n        &gt;\n          {home.headline}\n        &lt;/h1&gt;\n        &lt;button\n          style={{\n            padding: `0.75rem`,\n            backgroundColor: `white`,\n            border: `none`,\n            fontSize: `1.5rem`,\n            borderRadius: `10px`,\n          }}\n        &gt;\n          {home.call_to_action}\n        &lt;/button&gt;\n      &lt;/div&gt;\n\n      {/* &lt;h1&gt; {page.hero_image}&lt;/h1&gt; */}\n\n      &lt;h1 style={{ fontWeight: `100`, textAlign: `center` }}&gt;Our Customers&lt;/h1&gt;\n      &lt;div\n        style={{\n          display: `flex`,\n          flexDirection: `column`,\n          alignItems: `center`,\n          justifyContent: `center`,\n        }}\n      &gt;\n        {home.customer_logos.map(({ logo_image }) =&gt; (\n          &lt;img\n            key={logo_image}\n            style={{ width: `200px`, borderRadius: `10px` }}\n            src={logo_image}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/Layout&gt;\n  )\n}\n\n//GraphQl query to fetch homepage data\nexport const query = graphql`\n  {\n    home: allButterPage(filter: { slug: { eq: &quot;homepage&quot; } }) {\n      edges {\n        node {\n          slug\n          headline\n          seo_title\n          customer_logos {\n            logo_image\n          }\n          hero_image\n          call_to_action\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage</code></pre></div>\n<p>in your terminal, run</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; gatsby develop</code></pre></div>\n<p>Now open up <a href=\"http://localhost:8000/home\">localhost:8000/home</a> to see the home page populated with the content you created on butter.</p>\n<h2 id=\"create-multiple-pages-using-page-types\"><a href=\"#create-multiple-pages-using-page-types\" aria-label=\"create multiple pages using page types permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create multiple pages using Page Types</h2>\n<p>Let’s say you want to add a set of customer case study pages to your marketing site. They all have the same structure but the content is different. Page Types are perfect for this scenario and involves three easy steps:</p>\n<ol>\n<li>Create the Page Type structure</li>\n<li>Populate the content</li>\n<li>Integrate into your application</li>\n</ol>\n<p>If you need help after reading this, contact us via email or livechat.</p>\n<h2 id=\"create-the-page-type-structure\"><a href=\"#create-the-page-type-structure\" aria-label=\"create the page type structure permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create the Page Type structure</h2>\n<p>Create a Page Type to represent your Customer Case Study pages:\n<img src=\"https://buttercms.com/static/images/docs/guides/PagesNewPageType1.18834db5cf0b.png\" alt=\"page structure\"></p>\n<p>After saving, return to the configuration page by clicking the gear icon:\n<img src=\"https://buttercms.com/static/images/docs/guides/PagesNewPageType2.6fa0dea4872c.png\" alt=\"image\"></p>\n<p>Then click on Create Page Type and name it “Customer Case Study”. This will allow us to reuse this field configuration across multiple customer case study pages:</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/PagesNewPageType3.70f0c287ae91.png\" alt=\"saving\"></p>\n<h2 id=\"populate-the-content-1\"><a href=\"#populate-the-content-1\" aria-label=\"populate the content 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Populate the Content</h2>\n<p>Then populate our new page with content. In the next step, we’ll call the ButterCMS API to retrieve this content from our app.</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/PagesNewPageTypeCreateContent.6164c9b9cf19.png\"></p>\n<p>To Pull down content into gatsby run:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; gatsby develop</code></pre></div>\n<h3 id=\"testing-with-grapiql\"><a href=\"#testing-with-grapiql\" aria-label=\"testing with grapiql permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Testing with GrapiQl</h3>\n<p>You can test out your Graphql queries with GrahiQl( A graphql debugger) fire up Graphiql on <a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a></p>\n<p>Once graphiql is opened paste the query below :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allButterPage(filter: {page_type: {eq: &quot;customer_case_study&quot;}}) {\n    edges {\n      node {\n        id\n        facebook_open_graph_title\n        seo_title\n        headline\n        customer_logo\n        testimonial\n      }\n    }\n  }\n}</code></pre></div>\n<h2 id=\"integrate-into-your-application-1\"><a href=\"#integrate-into-your-application-1\" aria-label=\"integrate into your application 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integrate into your application</h2>\n<p>Now lets refactor our home page to display link(s) to each customer case study page</p>\n<p><code class=\"language-text\">src/pages/index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { graphql, Link } from &#39;gatsby&#39;\nimport Layout from &#39;../components/layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\nconst IndexPage = ({ data }) =&gt; {\n  console.log(data)\n  const home = data.home.edges[0].node\n  const case_studies = data.case_studies.edges\n\n  return (\n    &lt;Layout&gt;\n      &lt;SEO\n        title={home.seo_title}\n        keywords={[`gatsby`, `application`, `react`]}\n      /&gt;\n      &lt;div\n        style={{\n          height: `50%`,\n          display: `flex`,\n          padding: `1rem`,\n          alignItems: `center`,\n          justifyContent: `center`,\n          flexDirection: `column`,\n          background: `linear-gradient(-45deg, rgb(29, 64, 86) 0%, rgb(60, 24, 78) 100%)`,\n        }}\n      &gt;\n        &lt;h1\n          style={{\n            textAlign: `center`,\n            color: `white`,\n            fontSize: `2.5rem`,\n            fontWeight: `100`,\n            maxWidth: `960px`,\n          }}\n        &gt;\n          {home.headline}\n        &lt;/h1&gt;\n        &lt;button\n          style={{\n            padding: `0.75rem`,\n            backgroundColor: `white`,\n            border: `none`,\n            fontSize: `1.5rem`,\n            borderRadius: `10px`,\n          }}\n        &gt;\n          {home.call_to_action}\n        &lt;/button&gt;\n      &lt;/div&gt;\n\n      &lt;h1 style={{ fontWeight: `100`, textAlign: `center` }}&gt;Our Customers&lt;/h1&gt;\n      &lt;div\n        style={{\n          display: `flex`,\n          flexDirection: `column`,\n          alignItems: `center`,\n          justifyContent: `center`,\n        }}\n      &gt;\n        {home.customer_logos.map(({ logo_image }) =&gt; (\n          &lt;img\n            key={logo_image}\n            style={{ width: `200px`, borderRadius: `10px` }}\n            src={logo_image}\n          /&gt;\n        ))}\n\n        &lt;h1 style={{ fontWeight: `100` }}&gt;Case Studies&lt;/h1&gt;\n        {case_studies.map(({ node: { id, slug, headline } }) =&gt; (\n          &lt;div key={id}&gt;\n            &lt;Link to={`case-study/${slug}`}&gt;{headline}&lt;/Link&gt;\n          &lt;/div&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/Layout&gt;\n  )\n}\n\nexport const query = graphql`\n  {\n    home: allButterPage(filter: { slug: { eq: &quot;homepage&quot; } }) {\n      edges {\n        node {\n          slug\n          headline\n          seo_title\n          customer_logos {\n            logo_image\n          }\n          hero_image\n          call_to_action\n        }\n      }\n    }\n    case_studies: allButterPage(\n      filter: { page_type: { eq: &quot;customer_case_study&quot; } }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          facebook_open_graph_title\n          seo_title\n          headline\n          testimony\n          customer_logo\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage</code></pre></div>\n<p>Next we’ll refactor <code class=\"language-text\">gatsby-node-js</code> to programatically create customer case study pages with gatsby create pages API. First we need to define a customer case study template</p>\n<p><code class=\"language-text\">src/templates/customer-case-study.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { graphql } from &#39;gatsby&#39;\nimport Layout from &#39;../components/layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\n\nfunction CustomerCaseStudy({ data }) {\n  const page = data.allButterPage.edges[0].node\n\n  return (\n    &lt;Layout&gt;\n      &lt;SEO\n        title={page.facebook_open_graph_title}\n        description={page.headline}\n      /&gt;\n      &lt;div&gt;\n        &lt;h1&gt;{page.seo_title}&lt;/h1&gt;\n        &lt;p&gt;{page.headline}&lt;/p&gt;\n        &lt;img alt=&quot;customer_logo&quot; src={page.customer_logo} /&gt;\n        &lt;p&gt;{page.testimonial}&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/Layout&gt;\n  )\n}\n\nexport const pageQuery = graphql`\n  query CaseStudyPageBySlug($slug: String!) {\n    allButterPage(filter: { slug: { eq: $slug } }) {\n      edges {\n        node {\n          id\n          slug\n          facebook_open_graph_title\n          seo_title\n          headline\n          testimony\n          customer_logo\n        }\n      }\n    }\n  }\n`\n\nexport default CustomerCaseStudy</code></pre></div>\n<p>Now Let’s programatically Create customer case study pages based on the template we defined in <code class=\"language-text\">src/template/customer-case-study.js</code></p>\n<p><code class=\"language-text\">gatsby-node.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const path = require(`path`)\n\nexports.createPages = async ({ graphql, actions }) =&gt; {\n  const { createPage } = actions\n\n // Blog post template\n  const blogPost = path.resolve(`./src/templates/blog-post.js`)\n\n  //customer case study template\n  const customerCaseStudy = path.resolve(\n    `./src/templates/customer-case-study.js`\n  )\n\n  let posts\n  try {\n    posts = await graphql(`\n      {\n        allButterPost {\n          edges {\n            node {\n              id\n              seo_title\n              slug\n              categories {\n                name\n                slug\n              }\n              author {\n                first_name\n                last_name\n                email\n                slug\n                profile_image\n              }\n              body\n            }\n          }\n        }\n      }\n    `)\n  } catch (error) {\n    console.log(`Error Running Querying Posts`, error)\n  }\n\n  posts = posts.data.allButterPost.edges;\n\n  posts.forEach((post, index) =&gt; {\n    const previous = index === posts.length - 1 ? null : posts[index + 1].node\n    const next = index === 0 ? null : posts[index - 1].node\n\n    // Create blog posts pages.\n    createPage({\n      path: `/blog/${post.node.slug}`,\n      component: blogPost,\n      context: {\n        slug: post.node.slug,\n        previous,\n        next,\n      },\n    })\n  })\n\n  // Fetch Customer Case study pages\n  let pages\n  try {\n    pages = await graphql(`\n      {\n        allButterPage(filter: { page_type: { eq: &quot;customer_case_study&quot; } }) {\n          edges {\n            node {\n              id\n              slug\n              facebook_open_graph_title\n              seo_title\n              headline\n              testimony\n              customer_logo\n            }\n          }\n        }\n      }\n    `)\n  } catch (error) {\n    console.log(`Error Running Querying Pages`, error)\n  }\n\n  //Create Customer Case study pages\n  pages.data.allButterPage.edges.forEach(page =&gt; {\n    createPage({\n      path: `/case-study/${page.node.slug}`,\n      component: customerCaseStudy,\n      context: {\n        slug: page.node.slug,\n      },\n    })\n  })\n}</code></pre></div>\n<p>That’s it! now stop the server and run:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; gatsby develop</code></pre></div>\n<p>Now the home page should contain links to customer case study pages, Click around\nyou’ll notice that the template we defined in <code class=\"language-text\">src/template/customer_case_study.js</code>\nwas use by gatsby to create each case study page.</p>\n<h2 id=\"setup-content-fields\"><a href=\"#setup-content-fields\" aria-label=\"setup content fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup content fields</h2>\n<p>Let’s suppose we want to add a CMS to a static FAQ page with a title and a list of questions with answers. Most websites have a FAQ(Frequently Asked Question) Page. ButterCMS make it dead easy to create such content with Collections . Now we’ll create a collection named <code class=\"language-text\">FAQs</code>having a <code class=\"language-text\">question</code> and <code class=\"language-text\">answer</code> field.</p>\n<p>Making your content dynamic with Butter is a two-step process:</p>\n<ol>\n<li><strong>Setup custom content fields in Butter</strong></li>\n<li><strong>Integrate the fields into your application</strong></li>\n<li><strong>To setup custom content fields, first sign in to the Butter dashboard.</strong></li>\n</ol>\n<p>Create a new workspace or click on an existing one. Workspaces let you organize content fields in a friendly way for content editors and have no effect on development or the API. For example, a real-estate website might have a workspace called “Properties” and another called “About Page”.</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/FaqCreateWorkspace.png\" alt=\"create workspace\"></p>\n<p>Once you’re in a workspace click the button to create a new content field. Choose the “Object” type and name the field “FAQ Headline”:</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/FaqCreateHeadline.png\" alt=\"new contentfield\"></p>\n<p>After saving, add another field but this time choose the “Collection” type and name the field FAQ Items:</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/FaqCreateItems.png\" alt=\"Add items\"></p>\n<p>On the next screen setup two properties for items in the collection:</p>\n<p><img src=\"https://buttercms.com/static/images/docs/guides/FaqCollectionProperties.png\" alt=\"properties\"></p>\n<p>Now go back to your workspace and update your heading and FAQ items.</p>\n<p><a href=\"https://buttercms.com/static/images/docs/guides/FaqWorkspace.png\">workspace content</a></p>\n<h2 id=\"integrate-into-your-application-2\"><a href=\"#integrate-into-your-application-2\" aria-label=\"integrate into your application 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integrate into your application</h2>\n<p><code class=\"language-text\">/src/pages/faq.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { graphql } from &#39;gatsby&#39;\n\nimport Layout from &#39;../components/layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\nconst Faq = ({ data }) =&gt; {\n  const FAQs = data.allButterCollection.edges[0].node.value\n  const headline = data.allButterContentField.edges[0].node.value\n\n  return (\n    &lt;Layout&gt;\n      &lt;SEO title=&quot;FAQ - Frequently Asked Questions&quot; /&gt;\n      &lt;h1\n        style={{\n          height: `30%`,\n          color: `white`,\n          display: `flex`,\n          padding: `1rem`,\n          alignItems: `center`,\n          justifyContent: `center`,\n          flexDirection: `column`,\n          background: `linear-gradient(-45deg, rgb(29, 64, 86) 0%, rgb(60, 24, 78) 100%)`,\n        }}\n      &gt;\n        {headline}\n      &lt;/h1&gt;\n      &lt;div style={{ display: `flex`, padding: `10px` }}&gt;\n        {FAQs.map(faq =&gt; (\n          &lt;div\n            style={{\n              flexBasis: `50%`,\n              padding: `10px`,\n              background: `whitesmoke`,\n              borderRadius: `10px`,\n              margin: `5px`,\n            }}\n          &gt;\n            &lt;h2 style={{ color: `#213b55` }}&gt;{faq.question}&lt;/h2&gt;\n            &lt;p style={{ fontSize: `1.5rem`}}&gt;{faq.answer} &lt;/p&gt;\n          &lt;/div&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/Layout&gt;\n  )\n}\n\nexport const query = graphql`\n  {\n    allButterCollection(filter: { id: { eq: &quot;faq_items&quot; } }) {\n      edges {\n        node {\n          id\n          value {\n            question\n            answer\n          }\n        }\n      }\n    }\n\n    allButterContentField(filter: { id: { eq: &quot;faq_headline&quot; } }) {\n      edges {\n        node {\n          id\n          value\n        }\n      }\n    }\n  }\n`\nexport default Faq</code></pre></div>\n<h1 id=\"blog\"><a href=\"#blog\" aria-label=\"blog permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blog</h1>\n<h2 id=\"introduction-2\"><a href=\"#introduction-2\" aria-label=\"introduction 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Butter CMS is also a great feat if you want to spin up a blog, it’s pretty easy as they provide a <a href=\"https://buttercms.com/gatsbyjs-blog-engine/\">blog engine</a> that helps you manage content in one place. Gatsby then pulls down the data at build time and create static pages off that data.</p>\n<h1 id=\"blog-home-page\"><a href=\"#blog-home-page\" aria-label=\"blog home page permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blog Home Page</h1>\n<p>Now we would create a home page for our blog posts. It basically lists all blog posts.</p>\n<p><code class=\"language-text\">src/pages/blog.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { Link, graphql } from &#39;gatsby&#39;\nimport Layout from &#39;../components/Layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allButterPost.edges\n\n    return (\n      &lt;Layout location={this.props.location} title={siteTitle}&gt;\n        &lt;SEO\n          title=&quot;All posts&quot;\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        /&gt;\n\n        &lt;div\n          style={{\n            alignItems: `center`,\n            justifyContent: `center`,\n            margin: `20px 0px 20px 0px`,\n          }}\n        &gt;\n          &lt;div\n            style={{\n              maxWidth: `960px`,\n              padding: `30px`,\n            }}\n          &gt;\n            {posts.map(({ node }) =&gt; {\n              const title = node.seo_title || node.slug\n              return (\n                &lt;div\n                  key={node.slug}\n                  style={{ margin: `10px`, padding:`10px` }}\n                &gt;\n                  &lt;h3&gt;\n                    &lt;Link style={{ boxShadow: `none` }} to={`/blog/${node.slug}`}&gt;\n                      {title}\n                    &lt;/Link&gt;\n                  &lt;/h3&gt;\n                  &lt;small&gt;{node.date}&lt;/small&gt;\n                  &lt;p\n                    dangerouslySetInnerHTML={{ __html: node.meta_description }}\n                  /&gt;\n                &lt;/div&gt;\n              )\n            })}\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/Layout&gt;\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allButterPost {\n      edges {\n        node {\n          id\n          seo_title\n          meta_description\n          slug\n          categories {\n            name\n            slug\n          }\n          author {\n            first_name\n            last_name\n            email\n            slug\n            bio\n            title\n            linkedin_url\n            facebook_url\n            instagram_url\n            pinterest_url\n            twitter_handle\n            profile_image\n          }\n          body\n        }\n      }\n    }\n  }\n`</code></pre></div>\n<h2 id=\"creating-a-blog-template\"><a href=\"#creating-a-blog-template\" aria-label=\"creating a blog template permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a blog template</h2>\n<p>Now we’ve listed our blog posts in <code class=\"language-text\">src/pages/blog.js</code>, using gatsby <a href=\"https://www.gatsbyjs.org/docs/node-apis/#createPages\">createpages</a> API we would generate blog post pages using a template:</p>\n<p><code class=\"language-text\">src/pages/template/blog-post.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport { Link, graphql } from &#39;gatsby&#39;\n\nimport Bio from &#39;../components/Bio&#39;\nimport Layout from &#39;../components/Layout&#39;\nimport SEO from &#39;../components/seo&#39;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.allButterPost.edges[0].node\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      &lt;Layout location={this.props.location} title={siteTitle}&gt;\n        &lt;SEO title={post.seo_title} description={post.description} /&gt;\n        &lt;div\n          style={{\n            display: `flex`,\n            alignItems: `center`,\n            justifyContent: `center`,\n            margin: `20px 0px 20px 0px`,\n          }}\n        &gt;\n          &lt;div style={{ maxWidth: `960px`, padding: `30px` }}&gt;\n            &lt;h1&gt;{post.seo_title}&lt;/h1&gt; &lt;span&gt;{post.date}&lt;/span&gt; &amp;bull;\n            {post.categories.map(category =&gt; (\n              &lt;span&gt;{category.name}&lt;/span&gt;\n            ))}\n            &lt;hr /&gt;\n            &lt;div\n              style={{ paddingTop: `20px` }}\n              dangerouslySetInnerHTML={{ __html: post.body }}\n            /&gt;\n            &lt;hr /&gt;\n            &lt;Bio /&gt;\n            &lt;ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            &gt;\n              &lt;li&gt;\n                {previous &amp;&amp; (\n                  &lt;Link to={`/blog/${previous.slug}`} rel=&quot;prev&quot;&gt;\n                    ← {previous.seo_title}\n                  &lt;/Link&gt;\n                )}\n              &lt;/li&gt;\n              &lt;li&gt;\n                {next &amp;&amp; (\n                  &lt;Link to={`/blog/${next.slug}`} rel=&quot;next&quot;&gt;\n                    {next.seo_title} →\n                  &lt;/Link&gt;\n                )}\n              &lt;/li&gt;\n            &lt;/ul&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/Layout&gt;\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allButterPost(filter: { slug: { eq: $slug } }) {\n      edges {\n        node {\n          id\n          body\n          seo_title\n          date\n          categories {\n            name\n          }\n        }\n      }\n    }\n  }\n`</code></pre></div>\n<h2 id=\"generate-blog-pages\"><a href=\"#generate-blog-pages\" aria-label=\"generate blog pages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generate Blog Pages</h2>\n<p>Now we’ll use the blog template defined in <code class=\"language-text\">src/templates/blog-post.js</code> to generate blog pages.</p>\n<p><code class=\"language-text\">gatsby-node.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const path = require(`path`)\n\nexports.createPages = async ({ graphql, actions }) =&gt; {\n  const { createPage } = actions\n\n  const blogPost = path.resolve(`./src/templates/blog-post.js`)\n\n  let posts\n  try {\n    posts = await graphql(`\n      {\n        allButterPost {\n          edges {\n            node {\n              id\n              seo_title\n              slug\n              categories {\n                name\n                slug\n              }\n              author {\n                first_name\n                last_name\n                email\n                slug\n                profile_image\n              }\n              body\n            }\n          }\n        }\n      }\n    `)\n  } catch (error) {\n    console.log(`Error Running Querying Posts`, error)\n  }\n\n  posts = posts.data.allButterPost.edges;\n\n  posts.forEach((post, index) =&gt; {\n    const previous = index === posts.length - 1 ? null : posts[index + 1].node\n    const next = index === 0 ? null : posts[index - 1].node\n}</code></pre></div>\n<h2 id=\"categories-tags-and-authors\"><a href=\"#categories-tags-and-authors\" aria-label=\"categories tags and authors permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Categories, Tags, and Authors</h2>\n<p>Use Butter’s APIs for categories, tags, and authors to feature and filter content on your blog.\nSee their <a href=\"https://buttercms.com/docs/api/\">API reference</a> for more information about these objects:</p>\n<h2 id=\"easy-as-butter\"><a href=\"#easy-as-butter\" aria-label=\"easy as butter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Easy as Butter</h2>\n<p>This was an example meant to help you understand how ButterCMS works with Gatsby. You’re now able to:</p>\n<ul>\n<li>Create a ButterCMS repository and setting it up together with the Gatsby plugin</li>\n<li>Query data from ButterCMS for single pages, multiple pages, blog posts, and custom content fields</li>\n</ul>\n<p>If you got stuck, you can compare your code to the <a href=\"https://github.com/ButterCMS/gatsby-starter-buttercms\">gatsby-starter-buttercms</a>. To learn more about ButterCMS, check out their <a href=\"https://buttercms.com/blog/\">blog</a>. Their latest updates can be found <a href=\"https://buttercms.com/blog/category/new-to-butter/\">here</a>.</p>"}