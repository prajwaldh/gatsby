{"expireTime":9007200804686247000,"key":"transformer-remark-markdown-html-35caf3b370082dcf25a783ee87169a6a-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h1 id=\"gatsby-source-contentful\"><a href=\"#gatsby-source-contentful\" aria-label=\"gatsby source contentful permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-contentful</h1>\n<p>Source plugin for pulling content types, entries, and assets into Gatsby from\nContentful spaces. It creates links between entry types and asset so they can be\nqueried in Gatsby using GraphQL.</p>\n<p>An example site for using this plugin is at\n<a href=\"https://using-contentful.gatsbyjs.org/\">https://using-contentful.gatsbyjs.org/</a></p>\n<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-source-contentful</code></p>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>First, you need a way to pass environment variables to the build process, so secrets and other secured data aren’t committed to source control. We recommend using <a href=\"https://github.com/motdotla/dotenv\"><code class=\"language-text\">dotenv</code></a> which will then expose environment variables. <a href=\"https://gatsby.app/env-vars\">Read more about dotenv and using environment variables here</a>. Then we can <em>use</em> these environment variables and configure our plugin.</p>\n<h3 id=\"using-delivery-api\"><a href=\"#using-delivery-api\" aria-label=\"using delivery api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Delivery API</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-contentful`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        spaceId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`your_space_id`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Learn about environment variables: https://gatsby.app/env-vars</span>\n        accessToken<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENTFUL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"using-preview-api\"><a href=\"#using-preview-api\" aria-label=\"using preview api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Preview API</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-contentful`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        spaceId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`your_space_id`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Learn about environment variables: https://gatsby.app/env-vars</span>\n        accessToken<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENTFUL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n        host<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`preview.contentful.com`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"offline\"><a href=\"#offline\" aria-label=\"offline permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Offline</h3>\n<p>If you don’t have internet connection you can add <code class=\"language-text\">export GATSBY_CONTENTFUL_OFFLINE=true</code> to tell the plugin to fallback to the cached data, if there is any.</p>\n<h3 id=\"configuration-options\"><a href=\"#configuration-options\" aria-label=\"configuration options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration options</h3>\n<p><strong><code class=\"language-text\">spaceId</code></strong> [string][required]</p>\n<p>Contentful spaceId</p>\n<p><strong><code class=\"language-text\">accessToken</code></strong> [string][required]</p>\n<p>Contentful delivery api key, when using the Preview API use your Preview API key</p>\n<p><strong><code class=\"language-text\">host</code></strong> [string][optional] [default: <code class=\"language-text\">&#39;cdn.contentful.com&#39;</code>]</p>\n<p>The base host for all the API requests, by default it’s ‘cdn.contentful.com’, if you want to use the Preview API set it to <code class=\"language-text\">&#39;preview.contentful.com&#39;</code>. You can use your own host for debugging/testing purposes as long as you respect the same Contentful JSON structure.</p>\n<p><strong><code class=\"language-text\">environment</code></strong> [string][optional] [default: ‘master’]</p>\n<p>The environment to pull the content from, for more info on environments check out this <a href=\"https://www.contentful.com/developers/docs/concepts/multiple-environments/\">Guide</a>.</p>\n<p>You can pass in any other options available in the <a href=\"https://github.com/contentful/contentful.js#configuration\">contentful.js SDK</a>.</p>\n<h2 id=\"notes-on-contentful-content-models\"><a href=\"#notes-on-contentful-content-models\" aria-label=\"notes on contentful content models permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notes on Contentful Content Models</h2>\n<p>There are currently some things to keep in mind when building your content models at Contentful.</p>\n<ol>\n<li>\n<p>At the moment, fields that do not have at least one populated instance will not be created in the GraphQL schema.</p>\n</li>\n<li>\n<p>When using reference fields, be aware that this source plugin will automatically create the reverse reference. You do not need to create references on both content types. For simplicity, it is easier to put the reference field on the child in child/parent relationships.</p>\n</li>\n</ol>\n<h2 id=\"how-to-query-for-nodes\"><a href=\"#how-to-query-for-nodes\" aria-label=\"how to query for nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to query for nodes</h2>\n<p>Two standard node types are available from Contentful: <code class=\"language-text\">Asset</code> and <code class=\"language-text\">ContentType</code>.</p>\n<p><code class=\"language-text\">Asset</code> nodes will be created in your site’s GraphQL schema under <code class=\"language-text\">contentfulAsset</code> and <code class=\"language-text\">allContentfulAsset</code>.</p>\n<p><code class=\"language-text\">ContentType</code> nodes are a little different - their exact name depends on what you called them in your Contentful data models. The nodes will be created in your site’s GraphQL schema under <code class=\"language-text\">contentful${entryTypeName}</code> and <code class=\"language-text\">allContentful${entryTypeName}</code>.</p>\n<p>In all cases querying for nodes like <code class=\"language-text\">contentfulX</code> will return a single node, and nodes like <code class=\"language-text\">allContentfulX</code> will return all nodes of that type.</p>\n<h3 id=\"query-for-all-nodes\"><a href=\"#query-for-all-nodes\" aria-label=\"query for all nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for all nodes</h3>\n<p>You might query for <strong>all</strong> of a type of node:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulAsset <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        file <span class=\"token punctuation\">{</span>\n          url\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You might do this in your <code class=\"language-text\">gatsby-node.js</code> using Gatsby’s <a href=\"https://next.gatsbyjs.org/docs/node-apis/#createPages\"><code class=\"language-text\">createPages</code></a> Node API.</p>\n<h3 id=\"query-for-a-single-node\"><a href=\"#query-for-a-single-node\" aria-label=\"query for a single node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for a single node</h3>\n<p>To query for a single <code class=\"language-text\">image</code> asset with the title ‘foo’ and a width of 1600px:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const assetQuery = graphql`\n  {\n    contentfulAsset(filter: { title: { eq: &#39;foo&#39; } }) {\n      image {\n        resolutions(width: 1600) {\n          width\n          height\n          src\n          srcSet\n        }\n      }\n    }\n  }\n`</code></pre></div>\n<p>To query for a single <code class=\"language-text\">CaseStudy</code> node with the short text properties <code class=\"language-text\">title</code> and <code class=\"language-text\">subtitle</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">  <span class=\"token punctuation\">{</span>\n    contentfulCaseStudy<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> 'bar' <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n      title\n      subtitle\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Note the use of <a href=\"https://graphql.org/learn/queries/#arguments\">GraphQL arguments</a> on the <code class=\"language-text\">contentfulAsset</code> and <code class=\"language-text\">resolutions</code> fields. See <a href=\"https://www.gatsbyjs.org/docs/graphql-reference/\">Gatsby’s GraphQL reference docs for more info</a>.</p>\n</blockquote>\n<p>You might query for a <strong>single</strong> node inside a component in your <code class=\"language-text\">src/components</code> folder, using <a href=\"https://www.gatsbyjs.org/docs/static-query/\">Gatsby’s <code class=\"language-text\">StaticQuery</code> component</a>.</p>\n<h4 id=\"a-note-about-longtext-fields\"><a href=\"#a-note-about-longtext-fields\" aria-label=\"a note about longtext fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A note about LongText fields</h4>\n<p>If you include fields with a <code class=\"language-text\">LongText</code> type in your Contentful <code class=\"language-text\">ContentType</code>, their returned value will be <strong>an object not a string</strong>. This is because Contentful LongText fields are Markdown by default. In order to handle the Markdown content properly, this field type is created as a child node so Gatsby can transform it to HTML.</p>\n<p><code class=\"language-text\">ShortText</code> type fields will be returned as strings.</p>\n<p>Querying a <strong>single</strong> <code class=\"language-text\">CaseStudy</code> node with the ShortText properties <code class=\"language-text\">title</code> and <code class=\"language-text\">subtitle</code> and LongText property <code class=\"language-text\">body</code> requires formatting the LongText fields as an object with the <em>child node containing the exact same field name as the parent</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  contentfulCaseStudy <span class=\"token punctuation\">{</span>\n    title\n    subtitle\n    body <span class=\"token punctuation\">{</span>\n      body\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"duplicated-entries\"><a href=\"#duplicated-entries\" aria-label=\"duplicated entries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Duplicated entries</h4>\n<p>When Contentful pulls the data, all localizations will be pulled. Therefore, if you have a localization active, it will duplicate the entries. Narrow the search by filtering the query with <code class=\"language-text\">node_locale</code> filter:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulCaseStudy<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">node_locale</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"en-US\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        slug\n        title\n        subtitle\n        body <span class=\"token punctuation\">{</span>\n          body\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"query-for-assets-in-contenttype-nodes\"><a href=\"#query-for-assets-in-contenttype-nodes\" aria-label=\"query for assets in contenttype nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for Assets in ContentType nodes</h3>\n<p>More typically your <code class=\"language-text\">Asset</code> nodes will be mixed inside of your <code class=\"language-text\">ContentType</code> nodes, so you’ll query them together. All the same formatting rules for <code class=\"language-text\">Asset</code> and <code class=\"language-text\">ContentType</code> nodes apply.</p>\n<p>To get <strong>all</strong> the <code class=\"language-text\">CaseStudy</code> nodes with ShortText fields <code class=\"language-text\">id</code>, <code class=\"language-text\">slug</code>, <code class=\"language-text\">title</code>, <code class=\"language-text\">subtitle</code>, LongText field <code class=\"language-text\">body</code> and heroImage <code class=\"language-text\">Asset</code> field, we use <code class=\"language-text\">allContentful${entryTypeName}</code> to return all instances of that <code class=\"language-text\">ContentType</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulCaseStudy <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        slug\n        title\n        subtitle\n        body <span class=\"token punctuation\">{</span>\n          body\n        <span class=\"token punctuation\">}</span>\n        heroImage <span class=\"token punctuation\">{</span>\n          resolutions<span class=\"token punctuation\">(</span><span class=\"token attr-name\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1600</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            width\n            height\n            src\n            srcSet\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"more-on-queries-with-contentful-and-gatsby\"><a href=\"#more-on-queries-with-contentful-and-gatsby\" aria-label=\"more on queries with contentful and gatsby permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More on Queries with Contentful and Gatsby</h2>\n<p>It is strongly recommended that you take a look at how data flows in a real Contentful and Gatsby application to fully understand how the queries, Node.js functions and React components all come together. Check out the example site at\n<a href=\"https://using-contentful.gatsbyjs.org/\">using-contentful.gatsbyjs.org</a>.</p>\n<h2 id=\"beta-contentful-rich-text\"><a href=\"#beta-contentful-rich-text\" aria-label=\"beta contentful rich text permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Beta</strong> <a href=\"https://www.contentful.com/developers/docs/concepts/rich-text/\">Contentful Rich Text</a></h2>\n<p>Rich text feature is supported in this source plugin, if you want to serialize the field content to html you can add the plugin <code class=\"language-text\">@contentful/gatsby-transformer-contentful-richtext</code>.</p>\n<p>After adding the transformer plugin you can use the following query to get the html output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allContentfulBlogPost {\n    bodyRichText {\n      childContentfulRichText {\n        html\n      }\n    }\n  }\n}</code></pre></div>"}