{"expireTime":9007200804686398000,"key":"transformer-remark-markdown-html-fc7ca6d8b95b19af55484c1cc985c1a1-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p><a href=\"https://www.reactiflux.com/transcripts/gatsby-team/\">In a recent Reactiflux interview</a>, the Gatsby team was asked this question:</p>\n<blockquote>\n<p>Q: What is one thing that Gatsby is capable of doing that might surprise some people? — ctlee</p>\n</blockquote>\n<blockquote>\n<p>A: Gatsby can be used to build fully dynamic sites, which surprises some people because of it’s label as a “static site generator”. It’s fully equipped to be a powerful alternative to create-react-app and other similar solutions with the addition of easy pre-rendering and perf baked in. — biscarch</p>\n</blockquote>\n<p>Even though Dustin <a href=\"https://www.gatsbyjs.org/blog/2018-11-07-gatsby-for-apps/\">recently wrote about Gatsby for Apps</a> and open sourced his <a href=\"https://gatsby-mail.netlify.com/\">Gatsby Mail</a> demo, I do still find people constantly having to explain that Gatsby is “not just for sites”.</p>\n<p>Today I’d like to show you how you can incrementally add functionality to a Gatsby static site with Netlify Functions, and then add authentication with Netlify Identity to begin a proper Gatsby app.</p>\n<h2 id=\"static-dynamic-is-a-spectrum\"><a href=\"#static-dynamic-is-a-spectrum\" aria-label=\"static dynamic is a spectrum permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static-Dynamic is a spectrum</h2>\n<p>Why would you use something like Gatsby over Jekyll or Hugo or one of the <a href=\"https://www.staticgen.com/\">hundreds of Static Site Generators</a> out there? <a href=\"https://www.gatsbyjs.org/blog/2018-2-27-why-i-upgraded-my-website-to-gatsbyjs-from-jekyll/\">There are many reasons</a>, but one of the unique selling points is how Gatsby helps you build <a href=\"https://www.gatsbyjs.org/docs/progressive-web-app/#progressive-web-app\">“Static Progressive Web Apps”</a> with React.</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/production-app/#dom-hydration\">Gatsby’s ability to rehydrate</a> (what a delicious word!) the DOM means you can do incredibly dynamic things with Javascript and React that would be much harder with legacy SSG’s.</p>\n<p>Let’s say you have a typical static Gatsby site, like <a href=\"https://www.gatsbyjs.org/starters/gatsby-starter-default\">gatsby-starter-default</a>. You can <code class=\"language-text\">npm run build</code> it, and it spits out a bunch of HTML files. Great! I can host that for free!</p>\n<p>Now your client comes to you and asks you to add some custom logic that needs to be executed on the server:</p>\n<ul>\n<li>Maybe you have third party API secrets you don’t want to expose to your user.</li>\n<li>Maybe you need <a href=\"https://developer.yahoo.com/javascript/howto-proxy.html?guccounter=1\">a serverside proxy to get around CORS issues</a>.</li>\n<li>Maybe you need to ping a database to check your inventory.</li>\n</ul>\n<p><strong>Oh no! Now you have to rewrite everything and move to a Digital Ocean droplet!</strong></p>\n<p>I’m kidding. No, you don’t have to rewrite everything.</p>\n<p>The beauty of serverless functions is that it is incrementally adoptable - <strong>your site grows with your needs</strong> - and with Gatsby you can rerender entire sections of your site based on live API data. Of course, the more you do this, the more resource intensive (in terms of bandwidth and computation) it can be, so there is a performance tradeoff. <strong>Your site should be as dynamic as you need it to be, but no more.</strong> Gatsby is perfect for this.</p>\n<h2 id=\"5-steps-to-add-netlify-functions-to-gatsby\"><a href=\"#5-steps-to-add-netlify-functions-to-gatsby\" aria-label=\"5 steps to add netlify functions to gatsby permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5 Steps to add Netlify Functions to Gatsby</h2>\n<p>Netlify Functions are a great low configuration solution for adding serverless functionality to your Gatsby site. You get 125,000 free calls a month - that’s a function call every 20 seconds every day of the week, month, and year - and you can emulate them in local development with <a href=\"https://github.com/netlify/netlify-lambda\"><code class=\"language-text\">netlify-lambda</code></a>.</p>\n<p>Let’s walk through the steps:</p>\n<ol>\n<li><strong>Install dependencies</strong>: <code class=\"language-text\">npm install -D http-proxy-middleware netlify-lambda npm-run-all</code></li>\n<li><strong>Run function emulation alongside Gatsby</strong>: replace your <code class=\"language-text\">scripts</code> in <code class=\"language-text\">package.json</code>:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"develop\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby develop\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"run-p start:**\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start:app\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm run develop\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start:lambda\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"netlify-lambda serve src/lambda\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"run-p build:**\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build:app\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build:lambda\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"netlify-lambda build src/lambda\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ol start=\"3\">\n<li><strong>Configure your Netlify build</strong>: When serving your site on Netlify, <code class=\"language-text\">netlify-lambda</code> will now build each Javascript/Typescript file in your <code class=\"language-text\">src/lambda</code> folder as a standalone Netlify function (with a path corresponding to the filename). Make sure you have a Functions path in a <code class=\"language-text\">netlify.toml</code> file at root of your repository:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\">[build]\n  Command = &quot;npm run build&quot;\n  Functions = &quot;lambda&quot;\n  Publish = &quot;public&quot;</code></pre></div>\n<p>For more info or configuration options (e.g. in different branches and build environments), check <a href=\"https://www.netlify.com/docs/netlify-toml-reference/\">the Netlify.toml reference</a>.</p>\n<ol start=\"4\">\n<li><strong>Proxy the emulated functions for local development</strong>: Head to <code class=\"language-text\">gatsby-config.js</code> and add this to your <code class=\"language-text\">module.exports</code>:</li>\n</ol>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> proxy <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http-proxy-middleware\"</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// for avoiding CORS while developing Netlify Functions locally</span>\n  <span class=\"token comment\">// read more: https://www.gatsbyjs.org/docs/api-proxy/#advanced-proxying</span>\n  developMiddleware<span class=\"token punctuation\">:</span> app <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"/.netlify/functions/\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        target<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:9000\"</span><span class=\"token punctuation\">,</span>\n        pathRewrite<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">\"/.netlify/functions/\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"5\">\n<li><strong>Write your functions</strong>: Make a <code class=\"language-text\">src/lambda</code> folder and write as many functions as you need. The only requirement is that each function must export a <code class=\"language-text\">handler</code>, although <code class=\"language-text\">netlify-lambda</code> helps you use webpack to bundle modules or you can <a href=\"https://www.netlify.com/blog/2018/09/14/forms-and-functions/#optional-zip-the-function-to-manage-dependencies\">zip the functions yourself</a>. For example you can write <code class=\"language-text\">src/lambda/hello.js</code>:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// For more info, check https://www.netlify.com/docs/functions/#javascript-lambda-functions</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"queryStringParameters\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>queryStringParameters<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// return null to show no errors</span>\n    statusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// http status code</span>\n    body<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      msg<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello, World! \"</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now you are ready to access this API from anywhere in your Gatsby app! For example, in any event handler or lifecycle method, insert:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/.netlify/functions/hello\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>response <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span></code></pre></div>\n<p>and watch “Hello World!” pop up in your console. (I added a random number as well to show the endpoint is dynamic) If you are new to React, I highly recommend <a href=\"https://reactjs.org/docs/handling-events.html\">reading through the React docs</a> to understand where and how to insert event handlers so you can, for example, <a href=\"https://reactjs.org/docs/handling-events.html\">respond to a button click</a>.</p>\n<p>The local proxying we are doing is only for local emulation, eg it is actually running from <code class=\"language-text\">http://localhost:9000/hello</code> despite you hitting <code class=\"language-text\">/.netlify/functions/hello</code> in your Gatsby app. When you deploy your site to Netlify (either by <a href=\"http://app.netlify.com/\">hooking your site up through Git through our Web UI</a>, or our l33t new <a href=\"https://www.netlify.com/docs/cli/\">CLI</a>), that falls away, and your functions -are- hosted on the same URL and “just works”. Pretty neat!</p>\n<h2 id=\"thats-cool-but-its-not-an-app\"><a href=\"#thats-cool-but-its-not-an-app\" aria-label=\"thats cool but its not an app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>That’s cool, but its not an app</h2>\n<p>So, yes, your site can now be more dynamic than any static site. It can hit any database or API. It runs rings around CORS (by the way, you can also use <a href=\"https://www.netlify.com/docs/redirects/\">Netlify Redirects</a> for that). But its not an <em>app</em> app. Yet!</p>\n<p>The key thing about web apps (and, let’s face it, the key thing users really pay for) is they all have some concept of <code class=\"language-text\">user</code>, and that brings with it all manner of complication from security to state management to <a href=\"https://www.netlify.com/docs/visitor-access-control/#role-based-access-controls-with-jwt-tokens\">role-based access control</a>. Entire routes need to be guarded by authentication, and sensitive content shielded from Gatsby’s static generation. Sometimes there are things you -don’t- want Google’s spiders to see!</p>\n<p>It’s a different tier of concern, which makes it hard to write about in the same article as a typical Gatsby tutorial. But we’re here to make apps, so let’s bring it on!</p>\n<h2 id=\"5-steps-to-add-netlify-identity-and-authenticated-pages-to-gatsby\"><a href=\"#5-steps-to-add-netlify-identity-and-authenticated-pages-to-gatsby\" aria-label=\"5 steps to add netlify identity and authenticated pages to gatsby permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5 Steps to add Netlify Identity and Authenticated Pages to Gatsby</h2>\n<ol>\n<li><strong>Enable Netlify Identity</strong>: Netlify Identity doesn’t come enabled by default. You’ll have to head to your site admin (eg <code class=\"language-text\">https://app.netlify.com/sites/YOUR_AWESOME_SITE/identity</code>) to turn it on. <a href=\"https://www.netlify.com/docs/identity/\">Read the docs</a> for further info on what you can do, for example add Facebook or Google social sign-on!</li>\n<li><strong>Install dependencies</strong>: <code class=\"language-text\">npm install netlify-identity-widget gatsby-plugin-create-client-paths</code></li>\n<li><strong>Configure Gatsby</strong>: for dynamic-ness!</li>\n</ol>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-create-client-paths`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> prefixes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token string\">`/app/*`</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">(</span>including what you also wrote earlier<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li><strong>Write an authentication service</strong>: <code class=\"language-text\">netlify-identity-widget</code> is a framework-agnostic overlay that ships with a nice signup/login UI. This gets you up and running the fastest, however if you need a smaller solution you may want to use the underlying <a href=\"https://github.com/netlify/gotrue-js\">gotrue-js</a>, or <a href=\"https://github.com/sw-yx/react-netlify-identity\">react-netlify-identity</a> for a React Hooks solution.</li>\n</ol>\n<p>Here’s a usable example that stores your user in local storage:</p>\n<div class=\"gatsby-code-title\">service/auth.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> netlifyIdentity <span class=\"token keyword\">from</span> <span class=\"token string\">\"netlify-identity-widget\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isBrowser</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">initAuth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isBrowser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span>netlifyIdentity <span class=\"token operator\">=</span> netlifyIdentity\n    <span class=\"token comment\">// You must run this once before trying to interact with the widget</span>\n    netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUser</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">isBrowser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"netlifyUser\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"netlifyUser\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setUser</span> <span class=\"token operator\">=</span> user <span class=\"token operator\">=></span>\n  window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"netlifyUser\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleLogin</span> <span class=\"token operator\">=</span> callback <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> user <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isLoggedIn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isBrowser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">currentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>user\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">logout</span> <span class=\"token operator\">=</span> callback <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  netlifyIdentity<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logout\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"5\">\n<li><strong>Write your app</strong>: Now, any sub paths in <code class=\"language-text\">src/pages/app</code> will be exempt from Gatsby static generation. To keep the dividing line between app and site crystal clear, I like to have all my dynamic Gatsby code in a dedicated <code class=\"language-text\">app</code> folder. This means you can use <code class=\"language-text\">@reach/router</code> with <code class=\"language-text\">netlify-identity-widget</code> to write a standard dynamic React app. Here’s some sample code to give you an idea of how to hook them up:</li>\n</ol>\n<div class=\"gatsby-code-title\">app.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@reach/router\"</span> <span class=\"token comment\">// comes with gatsby v2</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/layout\"</span>\n<span class=\"token keyword\">import</span> NavBar <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/NavBar\"</span>\n<span class=\"token keyword\">import</span> Profile <span class=\"token keyword\">from</span> <span class=\"token string\">\"./profile\"</span>\n<span class=\"token keyword\">import</span> Main <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main\"</span> <span class=\"token comment\">// NOT SHOWN</span>\n<span class=\"token keyword\">import</span> PrivateRoute <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/PrivateRoute\"</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./login\"</span>\n\n<span class=\"token comment\">// remember everything in /app/* is dynamic now!</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NavBar</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Router</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PrivateRoute</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/app/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Profile<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PublicRoute</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PrivateRoute</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Main<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Login</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PublicRoute</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Router</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">PublicRoute</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<div class=\"gatsby-code-title\">components/NavBar.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link<span class=\"token punctuation\">,</span> navigate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUser<span class=\"token punctuation\">,</span> isLoggedIn<span class=\"token punctuation\">,</span> logout <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../services/auth\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> login<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    content<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>user_metadata <span class=\"token operator\">&amp;&amp;</span>\n      user<span class=\"token punctuation\">.</span>user_metadata<span class=\"token punctuation\">.</span>full_name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    content<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"You are not logged in\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        display<span class=\"token punctuation\">:</span> <span class=\"token string\">\"flex\"</span><span class=\"token punctuation\">,</span>\n        flex<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n        justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">\"space-between\"</span><span class=\"token punctuation\">,</span>\n        borderBottom<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1px solid #d1c1e0\"</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">\"aliceblue\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Navigate the app: </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/app/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Main</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Link</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">` `</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/app/profile<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Profile</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Link</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">` `</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n            <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/app/login`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            Logout\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/app/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Login</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Link</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">components/PrivateRoute.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isLoggedIn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../services/auth\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> navigate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PrivateRoute</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">componentDidMount</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> location <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token string\">`/app/login`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// If the user is not logged in, redirect to the login page.</span>\n      <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/app/login`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> component<span class=\"token punctuation\">:</span> Component<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n    <span class=\"token keyword\">return</span> <span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PrivateRoute</code></pre></div>\n<div class=\"gatsby-code-title\">login.js</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> navigate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> handleLogin<span class=\"token punctuation\">,</span> isLoggedIn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./services/auth\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Login</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">handleSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">handleLogin</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=></span> <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/app/profile`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Log in</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">log in</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Login</code></pre></div>\n<p>Phew that was a lot! but you should have a solid starting point for your app :)</p>\n<h2 id=\"bonus-points-authenticated-lambda-functions-for-your-gatsby-app\"><a href=\"#bonus-points-authenticated-lambda-functions-for-your-gatsby-app\" aria-label=\"bonus points authenticated lambda functions for your gatsby app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bonus points: Authenticated Lambda Functions for your Gatsby App</h2>\n<p>Just like <a href=\"https://en.wikipedia.org/wiki/The_Prestige_(film)\">every magic act has a pledge, a turn, and a prestige</a>, I have one last tidbit for you. <a href=\"https://stackoverflow.com/questions/50277192/react-security-concerns-restricted-pages-in-app\">Nothing on the client-side is safe</a>, and although you can send along Netlify Identity user id’s to your Netlify Function endpoints for authenticated access from your Gatsby App (for example in the body of a POST request), you’ll never be truly sure if that flow is secure either from malicious users or snooping.</p>\n<p>The best way to do authenticated actions inside serverless functions is to do it from inside the context of the function itself. Fortunately, <a href=\"https://www.netlify.com/docs/functions/#identity-and-functions\">Netlify Identity and Functions work seamlessly together</a>. All you have to do is to send along the user’s <a href=\"https://jwt.io/\">JWT</a> when hitting your endpoint:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// in your gatsby app</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/.netlify/functions/auth-hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    Accept<span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    Authorization<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bearer \"</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span>access_token<span class=\"token punctuation\">,</span> <span class=\"token comment\">// like this</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* etc */</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And then inside a Lambda function, you can now access the <code class=\"language-text\">user</code> object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// more info: https://www.netlify.com/docs/functions/#identity-and-functions</span>\n\n<span class=\"token comment\">// Note that `netlify-lambda` only locally emulates Netlify Functions, while `netlify-identity-widget` interacts with a real Netlify Identity instance. This means that `netlify-lambda` doesn't support Netlify Functions + Netlify Identity integration.</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>clientContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">,</span> <span class=\"token comment\">// actual user info you can use for your serverless functions</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>clientContext\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      statusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        msg<span class=\"token punctuation\">:</span> <span class=\"token string\">\"auth-hello: \"</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        user<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    Note that netlify-lambda only locally emulates Netlify Functions, \n    while netlify-identity-widget interacts with a real Netlify Identity instance. \n    This means that netlify-lambda doesn't support Netlify Functions + Netlify Identity integration.\n    `</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      statusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        msg<span class=\"token punctuation\">:</span>\n          <span class=\"token string\">\"auth-hello - no authentication detected. Note that netlify-lambda doesnt locally emulate Netlify Identity.\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"gatsby---perfect-for-your-next-hackathon\"><a href=\"#gatsby---perfect-for-your-next-hackathon\" aria-label=\"gatsby   perfect for your next hackathon permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby - Perfect for your next Hackathon</h2>\n<p>It’s 5 steps each to turn your static Gatsby sites into dynamic, authenticated, fully serverless apps with Netlify’s free tools. This makes Gatsby a perfect tool for your next app. If you’re at a hackathon, short on time, or just like to see a full working demo, check any of the following links.</p>\n<ul>\n<li><strong>Code:</strong> <a href=\"https://github.com/sw-yx/jamstack-hackathon-starter\">https://github.com/sw-yx/jamstack-hackathon-starter</a></li>\n<li><strong>Starter:</strong> <a href=\"https://www.gatsbyjs.org/starters/jamstack-hackathon-starter\">https://www.gatsbyjs.org/starters/jamstack-hackathon-starter</a></li>\n<li><strong>Live Demo:</strong> <a href=\"https://jamstack-hackathon-starter.netlify.com/\">https://jamstack-hackathon-starter.netlify.com/</a></li>\n</ul>"}