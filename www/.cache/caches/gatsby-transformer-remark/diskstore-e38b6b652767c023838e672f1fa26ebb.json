{"expireTime":9007200804686347000,"key":"transformer-remark-markdown-html-b31efcd82c22a77c093acc5d39d74d1d-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>In general, every website needs assets: images, stylesheets, scripts, etc. When using Gatsby, we recommend\n<a href=\"/docs/adding-images-fonts-files/\">Adding Images, Fonts, and Files</a> in JavaScript files,\nbecause of the benefits it provides:</p>\n<ul>\n<li>Scripts and stylesheets are minified and bundled together to avoid extra\nnetwork requests.</li>\n<li>Missing files cause compilation errors instead of 404 errors for your users.</li>\n<li>Result filenames include content hashes so you don’t need to worry about\nbrowsers caching their old versions.</li>\n</ul>\n<p>However, there is an <strong>escape hatch</strong> that you can use to add an asset outside of\nthe module system.</p>\n<h2 id=\"adding-assets-outside-of-the-module-system\"><a href=\"#adding-assets-outside-of-the-module-system\" aria-label=\"adding assets outside of the module system permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Assets Outside of the Module System</h2>\n<p>You can create a folder named <code class=\"language-text\">static</code> at the root of your project. Every file\nyou put into that folder will be copied into the <code class=\"language-text\">public</code> folder. E.g. if you\nadd a file named <code class=\"language-text\">sun.jpg</code> to the static folder, it’ll be copied to\n<code class=\"language-text\">public/sun.jpg</code></p>\n<h3 id=\"referencing-your-static-asset\"><a href=\"#referencing-your-static-asset\" aria-label=\"referencing your static asset permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Referencing your static asset</h3>\n<p>In order to reference assets from the <code class=\"language-text\">static</code> folder in your code, you’ll need to\n<a href=\"/docs/gatsby-link/#prefixed-paths-helper\">import the <code class=\"language-text\">withPrefix</code> helper function from <code class=\"language-text\">gatsby</code></a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPrefix <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Note: this is an escape hatch and should be used sparingly!</span>\n  <span class=\"token comment\">// Normally we recommend using `import` for getting asset URLs</span>\n  <span class=\"token comment\">// as described in the “Adding Images, Fonts, and Files” page.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/img/logo.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"Logo\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And make sure you\n<a href=\"/docs/path-prefix/\">set <code class=\"language-text\">pathPrefix</code> in your gatsby-config.js</a>:</p>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Note: it must *not* have a trailing slash.</span>\n  pathPrefix<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/img`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"downsides\"><a href=\"#downsides\" aria-label=\"downsides permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Downsides</h3>\n<p>Keep in mind the downsides of this approach:</p>\n<ul>\n<li>None of the files in <code class=\"language-text\">static</code> folder get post-processed or minified.</li>\n<li>Missing files will not be called at compilation time, and will cause 404\nerrors for your users.</li>\n<li>Result filenames won’t include content hashes so you’ll need to add query\narguments or rename them every time they change.</li>\n</ul>\n<h2 id=\"when-to-use-the-static-folder\"><a href=\"#when-to-use-the-static-folder\" aria-label=\"when to use the static folder permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>When to Use the <code class=\"language-text\">static</code> Folder</h2>\n<p>Normally we recommend importing <a href=\"/docs/adding-images-fonts-files/#adding-a-stylesheet\">stylesheets</a>,\n<a href=\"/docs/adding-images-fonts-files/#adding-images-and-fonts\">images, and fonts</a> from JavaScript. The <code class=\"language-text\">static</code>\nfolder is useful as a workaround for a number of less common cases:</p>\n<ul>\n<li>You need a file with a specific name in the build output, such as\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/Manifest\"><code class=\"language-text\">manifest.webmanifest</code></a>.</li>\n<li>You have thousands of images and need to dynamically reference their paths.</li>\n<li>You want to include a small script like\n<a href=\"http://github.hubspot.com/pace/docs/welcome/\"><code class=\"language-text\">pace.js</code></a> outside of the\nbundled code.</li>\n<li>Some libraries may be incompatible with Webpack and you have no other option but\nto include it as a <code class=\"language-text\">&lt;script&gt;</code> tag.</li>\n</ul>"}