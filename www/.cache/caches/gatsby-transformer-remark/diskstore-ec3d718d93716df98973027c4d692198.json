{"expireTime":9007200804686343000,"key":"transformer-remark-markdown-html-8084a3605ab1a4b2298dbc311013abea-gatsby-remark-graphvizgatsby-remark-code-titlesgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>Gatsby is a static site generator. It generates your site’s HTML pages, but also creates a JavaScript runtime that takes over in the browser once the initial HTML has loaded. This enables other pages to load instantaneously. Read on to find out how that runtime is generated.</p>\n<h2 id=\"webpack-config\"><a href=\"#webpack-config\" aria-label=\"webpack config permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack config</h2>\n<p>The <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/commands/build-javascript.js\">build-javascript.js</a> Gatsby file is the entrypoint to this section. It dynamically creates a webpack configuration by calling <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js\">webpack.config.js</a>. This can produce radically different configs depending on the stage. E.g <code class=\"language-text\">build-javascript</code>, <code class=\"language-text\">build-html</code>, <code class=\"language-text\">develop</code>, or <code class=\"language-text\">develop-html</code>. This section deals with the <code class=\"language-text\">build-javascript</code> stage.</p>\n<p>The config is quite large, but here are some of the important values in the final output.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">:</span> <span class=\"token string\">\".cache/production-app\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// e.g app-2e49587d85e03a033f58.js</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`[name]-[contenthash].js`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// e.g component---src-blog-2-js-cebc3ae7596cbb5b0951.js</span>\n    chunkFilename<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`[name]-[contenthash].js`</span></span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/public`</span></span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`web`</span></span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`production`</span></span><span class=\"token punctuation\">,</span>\n  node<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    ___filename<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  optimization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    runtimeChunk<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// e.g webpack-runtime-e402cdceeae5fad2aa61.js</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`webpack-runtime`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    splitChunks<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// A custom webpack plugin that implements logic to write out chunk-map.json and webpack.stats.json</span>\n    plugins<span class=\"token punctuation\">.</span><span class=\"token function\">extractStats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>There’s a lot going on here. And this is just a sample of the output that doesn’t include the loaders, rules, etc. We won’t go over everything here, but most of it is geared towards proper code splitting of your application.</p>\n<p>Once Webpack has finished compilation, it will have produced a few key types of bundles:</p>\n<h5 id=\"app-contenthashjs\"><a href=\"#app-contenthashjs\" aria-label=\"app contenthashjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>app-[contenthash].js</h5>\n<p>This is bundle produced from <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/production-app.js\">production-app.js</a> which we’ll mostly be discussing in this section. It is configured in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L130\">webpack entry</a></p>\n<h5 id=\"webpack-runtime-contenthashjs\"><a href=\"#webpack-runtime-contenthashjs\" aria-label=\"webpack runtime contenthashjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack-runtime-[contenthash].js</h5>\n<p>This contains the small <a href=\"https://webpack.js.org/concepts/manifest/#runtime\">webpack-runtime</a> as a separate bundle (configured in <code class=\"language-text\">optimization</code> section). In practice, the app and webpack-runtime are always needed together.</p>\n<h5 id=\"component---name-contenthashjs\"><a href=\"#component---name-contenthashjs\" aria-label=\"component   name contenthashjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>component---[name]-[contenthash].js</h5>\n<p>This is a separate bundle for each page. The mechanics for how these are split off from the main production app are covered in <a href=\"/docs/how-code-splitting-works/\">Code Splitting</a>.</p>\n<h2 id=\"production-appjs\"><a href=\"#production-appjs\" aria-label=\"production appjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>production-app.js</h2>\n<p>This is the entrypoint to webpack that outputs <code class=\"language-text\">app-[contenthash].js</code> bundle. It is responsible for navigation and page loading once the initial HTML has been loaded.</p>\n<h3 id=\"first-load\"><a href=\"#first-load\" aria-label=\"first load permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>First load</h3>\n<p>To show how <code class=\"language-text\">production-app</code> works, let’s imagine that we’ve just refreshed the browser on our site’s <code class=\"language-text\">/blog/2</code> page. The HTML loads immediately, painting our page quickly. It includes a CDATA section which injects page information into the <code class=\"language-text\">window</code> object so it’s available in our JavaScript code (inserted during <a href=\"/docs/html-generation/#6-inject-page-info-to-cdata\">Page HTML Generation</a>).</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">/*\n&lt;![\n  CDATA[ */\n    window.page={\n      \"path\": \"/blog/2.js\",\n      \"componentChunkName\": \"component---src-blog-2-js\",\n      jsonName\": \"blog-2-995\"\n    };\n    window.dataPath=\"621/path---blog-2-995-a74-dwfQIanOJGe2gi27a9CLKHjamc\";\n  */ ]\n]>\n*/</code></pre></div>\n<p>Then, the app, webpack-runtime, component, and data json bundles are loaded via <code class=\"language-text\">&lt;link&gt;</code> and <code class=\"language-text\">&lt;script&gt;</code> (see <a href=\"/docs/html-generation/#5-add-preload-link-and-script-tags\">HTML tag generation</a>). Now, our <code class=\"language-text\">production-app</code> code starts running.</p>\n<h3 id=\"oncliententry-api-runner-browser\"><a href=\"#oncliententry-api-runner-browser\" aria-label=\"oncliententry api runner browser permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onClientEntry (api-runner-browser)</h3>\n<p>The first thing our app does is run the <a href=\"/docs/browser-apis/#onClientEntry\">onClientEntry</a> browser API. This allows plugins to perform any operations before we hit the rest of the page loading logic. For example <a href=\"/packages/gatsby-plugin-glamor/\">gatsby-plugin-glamor</a> will call rehydrate.</p>\n<p>It’s worth noting that the browser API runner is completely different to <code class=\"language-text\">api-runner-node</code> which is explained in <a href=\"/docs/how-plugins-apis-are-run/\">How APIs/Plugins Are Run</a>. <code class=\"language-text\">api-runner-node</code> runs in Node.js and has to deal with complex server based execution paths. Whereas running APIs on the browser is simply a matter of iterating through the site’s registered browser plugins and running them one after the other (see <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/api-runner-browser.js#L9\">api-runner-browser.js</a>).</p>\n<p>One thing to note is that it gets the list of plugins from <code class=\"language-text\">./cache/api-runner-browser-plugins.js</code>, which is generated <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/bootstrap/index.js#L289\">early in bootstrap</a>.</p>\n<h3 id=\"dom-hydration\"><a href=\"#dom-hydration\" aria-label=\"dom hydration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM Hydration</h3>\n<p><a href=\"https://reactjs.org/docs/react-dom.html#hydrate\">hydrate()</a> is a <a href=\"https://reactjs.org/docs/react-dom.html\">ReactDOM</a> function which is the same as <code class=\"language-text\">render()</code>, except that instead of generating a new DOM tree and inserting it into the document, it expects that a React DOM already exists with exactly the same structure as the React Model. It therefore descends this tree and attaches the appropriate event listeners to it so that it becomes a live React DOM. Since our HTML was rendered with exactly the same code as we’re running in our browser, these will (and have to) match perfectly. The hydration occurs on the <code class=\"language-text\">&lt;div id=&quot;___gatsby&quot;&gt;...&lt;/div&gt;</code> element defined in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/default-html.js#L19\">default-html.js</a>.</p>\n<h3 id=\"page-rendering\"><a href=\"#page-rendering\" aria-label=\"page rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Rendering</h3>\n<p>The hydration requires a new React component to “replace” the existing DOM with. Gatsby uses <a href=\"https://github.com/reach/router\">reach router</a> for this. Within it, we provide a <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/production-app.js#L35\">RouteHandler</a> component that uses <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/page-renderer.js\">PageRenderer</a> to create the navigated to page.</p>\n<p>PageRenderer’s constructor <a href=\"/docs/production-app/#load-page-resources\">loads the page resources</a> for the path. On first load though, these will have already been requested from the server by <code class=\"language-text\">&lt;link rel=&quot;preload&quot; ... /&gt;</code> in the page’s original HTML (see <a href=\"/docs/how-code-splitting-works/#construct-link-and-script-tags-for-current-page\">Link Preloads</a> in HTML Generation Docs). The loaded page resources includes the imported component, with which we create the actual page component using <a href=\"https://reactjs.org/docs/react-api.html\">React.createElement()</a>. This element is returned to our RouteHandler which hands it off to Reach Router for rendering.</p>\n<h3 id=\"load-page-resources\"><a href=\"#load-page-resources\" aria-label=\"load page resources permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Load Page Resources</h3>\n<p>Before hydration occurs, we kick off the loading of resources in the background. As mentioned above, the current page’s resources will have already been requested by <code class=\"language-text\">link</code> tags in the HTML. So, technically, there’s nothing more required for this page load. But we can start loading resources required to navigate to other pages.</p>\n<p>This occurs in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js\">loader.js</a>. The main function here is <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L268\">getResourcesForPathname()</a>. Given a path, it will find its page, and import its component module json query results. But to do this, it needs access to that information. This is provided by <a href=\"/docs/write-pages/#async-requiresjs\">async-requires.js</a> which contains the list of all pages in the site, and all their dataPaths. <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L33\">fetchPageResourcesMap()</a> takes care of requesting that file, which occurs the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L292\">first time</a> <code class=\"language-text\">getResourcesForPathname()</code> is called.</p>\n<h3 id=\"window-variables\"><a href=\"#window-variables\" aria-label=\"window variables permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window variables</h3>\n<p>Gatsby attaches global state to the <code class=\"language-text\">window</code> object via <code class=\"language-text\">window.___somevar</code> variables so they can be used by plugins (though this is technically unsupported). Here are a few:</p>\n<h5 id=\"___loader\"><a href=\"#___loader\" aria-label=\"___loader permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">___loader</code></h5>\n<p>This is a reference to the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js\">loader.js</a> object that can be used for getting page resources and <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L188\">enqueueing prefetch</a> commands. It is used by <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-link/src/index.js#L60\">gatsby-link</a> to prefetch pages. And by <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-plugin-guess-js/src/gatsby-browser.js#L60\">gatsby-plugin-guess-js</a> to implement its own prefetching algorithm.</p>\n<h5 id=\"___emitter\"><a href=\"#___emitter\" aria-label=\"___emitter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">___emitter</code></h5>\n<p>Only used during <code class=\"language-text\">gatsby develop</code> lifecycle</p>\n<h5 id=\"___chunkmapping\"><a href=\"#___chunkmapping\" aria-label=\"___chunkmapping permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">___chunkMapping</code></h5>\n<p>Contents of <code class=\"language-text\">chunk-map.json</code>. See <a href=\"/docs/how-code-splitting-works/#chunk-mapjson\">Code Splitting</a> for more.</p>\n<h5 id=\"___push-___replace-and-___navigate\"><a href=\"#___push-___replace-and-___navigate\" aria-label=\"___push ___replace and ___navigate permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">___push</code>, <code class=\"language-text\">___replace</code> and <code class=\"language-text\">___navigate</code></h5>\n<p>These are set in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/navigation.js#L128\">init navigation</a>. Used by <code class=\"language-text\">gatsby-link</code> to override navigation behavior so that it <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-link/src/index.js#L185\">loads pages</a> before using reach to navigate.</p>"}