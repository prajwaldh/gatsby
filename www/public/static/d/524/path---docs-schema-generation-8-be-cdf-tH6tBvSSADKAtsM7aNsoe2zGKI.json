{"data":{"markdownRemark":{"html":"<p>Once the nodes have been sourced and transformed, the next step is to generate the GraphQL Schema. This is one of the more complex parts of the Gatsby code base. In fact, as of writing, it accounts for a third of the lines of code in core Gatsby. It involves inferring a GraphQL schema from all the nodes that have been sourced and transformed so far. Read on to find out how it’s done.</p>\n<h3 id=\"group-all-nodes-by-type\"><a href=\"#group-all-nodes-by-type\" aria-label=\"group all nodes by type permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Group all nodes by type</h3>\n<p>Each sourced or transformed node has a <code class=\"language-text\">node.internal.type</code>, which is set by the plugin that created it. E.g, the <code class=\"language-text\">source-filesystem</code> plugin <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/create-file-node.js#L46\">sets the type to File</a>. The <code class=\"language-text\">transformer-json</code> plugin creates a dynamic type <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-json/src/gatsby-node.js#L48\">based on the parent node</a>. E.g <code class=\"language-text\">PostsJson</code> for a <code class=\"language-text\">posts.json</code> file.</p>\n<p>During the schema generation phase, we must generate what’s called a <code class=\"language-text\">ProcessedNodeType</code> in Gatsby. This is a simple structure that builds on top of a <a href=\"https://graphql.org/graphql-js/type/#graphqlobjecttype\">graphql-js GraphQLObjectType</a>. Our goal in the below steps is to infer and construct this object for each unique node type in redux.</p>\n<p>The flow is summarized by the below graph. It shows the intermediate transformations or relevant parts of the user’s GraphQL query that are performed by code in the Gatsby <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby/src/schema\">schema folder</a>, finally resulting in the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js#L182\">ProcessedNodeType</a>. It uses the example of building a <code class=\"language-text\">File</code> GraphQL type.</p>\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: graphname Pages: 1 -->\n<svg width=\"499pt\" height=\"757pt\"\n viewBox=\"0.00 0.00 499.41 756.80\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 752.8)\">\n<title>graphname</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-752.8 495.4056,-752.8 495.4056,4 -4,4\"/>\n<!-- pluginFields -->\n<g id=\"node1\" class=\"node\">\n<title>pluginFields</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"226.4433,-526.6006 52.9049,-526.6006 52.9049,-383.7994 226.4433,-383.7994 226.4433,-526.6006\"/>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-509.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">custom plugin fields</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-493\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">{</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-476.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;publicURL: {</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-459.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;type: GraphQLString,</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-442.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;resolve(file, a, c) { ... }</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-425.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;}</text>\n<text text-anchor=\"start\" x=\"61.0396\" y=\"-409\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">}</text>\n<text text-anchor=\"middle\" x=\"139.6741\" y=\"-392.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- gqlType -->\n<g id=\"node5\" class=\"node\">\n<title>gqlType</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"363.3784,-347.9002 167.9698,-347.9002 167.9698,-239.2998 363.3784,-239.2998 363.3784,-347.9002\"/>\n<text text-anchor=\"start\" x=\"176.072\" y=\"-331.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gqlType (GraphQLObjectType)</text>\n<text text-anchor=\"start\" x=\"176.072\" y=\"-314.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">{</text>\n<text text-anchor=\"start\" x=\"176.072\" y=\"-297.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;fields,</text>\n<text text-anchor=\"start\" x=\"176.072\" y=\"-281\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;name: `File`</text>\n<text text-anchor=\"start\" x=\"176.072\" y=\"-264.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">}</text>\n<text text-anchor=\"middle\" x=\"265.6741\" y=\"-247.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- pluginFields&#45;&gt;gqlType -->\n<g id=\"edge2\" class=\"edge\">\n<title>pluginFields&#45;&gt;gqlType</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M195.3063,-383.8495C202.5467,-374.5633 209.9188,-365.1084 217.0328,-355.9843\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"219.8196,-358.1023 223.2084,-348.064 214.2993,-353.7981 219.8196,-358.1023\"/>\n</g>\n<!-- inputFilters -->\n<g id=\"node8\" class=\"node\">\n<title>inputFilters</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"296.1587,-203.0006 119.1895,-203.0006 119.1895,-77.7994 296.1587,-77.7994 296.1587,-203.0006\"/>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-186.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">InputFilters</text>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-169.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">file({</text>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-153\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;relativePath: {</text>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-136.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;eq: `blogs/my&#45;blog.md`</text>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-119.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;}</text>\n<text text-anchor=\"start\" x=\"127.1818\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">})</text>\n<text text-anchor=\"middle\" x=\"207.6741\" y=\"-85.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- pluginFields&#45;&gt;inputFilters -->\n<g id=\"edge1\" class=\"edge\">\n<title>pluginFields&#45;&gt;inputFilters</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M139.3255,-383.9693C140.7362,-341.2763 145.4289,-286.3117 158.6741,-239.2 161.1933,-230.2397 164.5226,-221.1196 168.2636,-212.2237\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"171.4759,-213.6135 172.2945,-203.0503 165.0673,-210.7975 171.4759,-213.6135\"/>\n</g>\n<!-- typeNodes -->\n<g id=\"node2\" class=\"node\">\n<title>typeNodes</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"426.0393,-748.6019 257.3089,-748.6019 257.3089,-707.3981 426.0393,-707.3981 426.0393,-748.6019\"/>\n<text text-anchor=\"start\" x=\"265.4917\" y=\"-732.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">all redux nodes of type</text>\n<text text-anchor=\"middle\" x=\"341.6741\" y=\"-715.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">e.g internal.type === `File`</text>\n</g>\n<!-- exampleValue -->\n<g id=\"node3\" class=\"node\">\n<title>exampleValue</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"451.8081,-671.1002 231.5401,-671.1002 231.5401,-562.4998 451.8081,-562.4998 451.8081,-671.1002\"/>\n<text text-anchor=\"start\" x=\"239.6071\" y=\"-654.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">exampleValue</text>\n<text text-anchor=\"start\" x=\"239.6071\" y=\"-637.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">{</text>\n<text text-anchor=\"start\" x=\"239.6071\" y=\"-621\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;relativePath: `blogs/my&#45;blog.md`,</text>\n<text text-anchor=\"start\" x=\"239.6071\" y=\"-604.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;accessTime: 8292387234</text>\n<text text-anchor=\"start\" x=\"239.6071\" y=\"-587.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">}</text>\n<text text-anchor=\"middle\" x=\"341.6741\" y=\"-570.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- typeNodes&#45;&gt;exampleValue -->\n<g id=\"edge6\" class=\"edge\">\n<title>typeNodes&#45;&gt;exampleValue</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M341.6741,-707.3447C341.6741,-699.7802 341.6741,-690.7643 341.6741,-681.3985\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"345.1742,-681.1504 341.6741,-671.1504 338.1742,-681.1505 345.1742,-681.1504\"/>\n</g>\n<!-- resolve -->\n<g id=\"node4\" class=\"node\">\n<title>resolve</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"400.9632,-41.4019 246.385,-41.4019 246.385,-.1981 400.9632,-.1981 400.9632,-41.4019\"/>\n<text text-anchor=\"start\" x=\"254.2796\" y=\"-25\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">ProcessedNodeType</text>\n<text text-anchor=\"middle\" x=\"323.6741\" y=\"-8.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> including final resolve()</text>\n</g>\n<!-- typeNodes&#45;&gt;resolve -->\n<g id=\"edge8\" class=\"edge\">\n<title>typeNodes&#45;&gt;resolve</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M414.8704,-707.3748C432.5371,-698.9563 449.5159,-687.2811 460.6741,-671.2 515.6129,-592.0227 479.6741,-551.5707 479.6741,-455.2 479.6741,-455.2 479.6741,-455.2 479.6741,-293.6 479.6741,-192.5637 398.0381,-94.9484 352.8771,-48.6777\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"355.2213,-46.071 345.6942,-41.4356 350.2512,-51.0004 355.2213,-46.071\"/>\n</g>\n<!-- parentChild -->\n<g id=\"node6\" class=\"node\">\n<title>parentChild</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"213.5226,-671.1002 -.1744,-671.1002 -.1744,-562.4998 213.5226,-562.4998 213.5226,-671.1002\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-654.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">Parent/Children fields</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-637.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">node {</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-621\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;childMarkdownRemark { html }</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-604.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;parent { id }</text>\n<text text-anchor=\"start\" x=\"8\" y=\"-587.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">}</text>\n<text text-anchor=\"middle\" x=\"106.6741\" y=\"-570.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- typeNodes&#45;&gt;parentChild -->\n<g id=\"edge7\" class=\"edge\">\n<title>typeNodes&#45;&gt;parentChild</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M298.0231,-707.3447C276.5574,-697.1873 249.5619,-684.4133 222.6712,-671.6889\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"224.1001,-668.493 213.564,-667.3794 221.106,-674.8204 224.1001,-668.493\"/>\n</g>\n<!-- objectFields -->\n<g id=\"node7\" class=\"node\">\n<title>objectFields</title>\n<polygon fill=\"none\" stroke=\"#000000\" points=\"400.8073,-509.5002 282.5409,-509.5002 282.5409,-400.8998 400.8073,-400.8998 400.8073,-509.5002\"/>\n<text text-anchor=\"start\" x=\"290.3578\" y=\"-493\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">Object node fields</text>\n<text text-anchor=\"start\" x=\"290.3578\" y=\"-476.2\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;node {</text>\n<text text-anchor=\"start\" x=\"290.3578\" y=\"-459.4\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;relativePath,</text>\n<text text-anchor=\"start\" x=\"290.3578\" y=\"-442.6\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> &#160;&#160;&#160;accessTime</text>\n<text text-anchor=\"start\" x=\"290.3578\" y=\"-425.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">}</text>\n<text text-anchor=\"middle\" x=\"341.6741\" y=\"-409\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\"> </text>\n</g>\n<!-- exampleValue&#45;&gt;objectFields -->\n<g id=\"edge9\" class=\"edge\">\n<title>exampleValue&#45;&gt;objectFields</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M341.6741,-562.0896C341.6741,-548.4586 341.6741,-533.7178 341.6741,-519.6649\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"345.1742,-519.5795 341.6741,-509.5796 338.1742,-519.5796 345.1742,-519.5795\"/>\n</g>\n<!-- gqlType&#45;&gt;resolve -->\n<g id=\"edge11\" class=\"edge\">\n<title>gqlType&#45;&gt;resolve</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M292.3334,-239.0837C297.1174,-227.4672 301.5633,-215.1071 304.6741,-203.2 318.298,-151.052 322.212,-88.1102 323.3004,-51.4544\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"326.8006,-51.4861 323.5468,-41.4033 319.8027,-51.3145 326.8006,-51.4861\"/>\n</g>\n<!-- gqlType&#45;&gt;inputFilters -->\n<g id=\"edge5\" class=\"edge\">\n<title>gqlType&#45;&gt;inputFilters</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M245.0622,-239.156C241.8102,-230.5664 238.4043,-221.57 235.0282,-212.6525\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"238.1992,-211.1429 231.3852,-203.03 231.6526,-213.6214 238.1992,-211.1429\"/>\n</g>\n<!-- parentChild&#45;&gt;gqlType -->\n<g id=\"edge4\" class=\"edge\">\n<title>parentChild&#45;&gt;gqlType</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M204.3977,-562.3038C216.548,-551.828 227.5375,-539.8561 235.6741,-526.4 266.2856,-475.7759 271.826,-407.703 270.886,-358.2512\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"274.3772,-357.8906 270.5937,-347.9944 267.3801,-358.09 274.3772,-357.8906\"/>\n</g>\n<!-- objectFields&#45;&gt;gqlType -->\n<g id=\"edge3\" class=\"edge\">\n<title>objectFields&#45;&gt;gqlType</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M315.944,-400.4896C309.4088,-386.5939 302.3313,-371.5449 295.6071,-357.2471\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"298.6717,-355.5392 291.2486,-347.9796 292.3373,-358.5183 298.6717,-355.5392\"/>\n</g>\n<!-- inputFilters&#45;&gt;resolve -->\n<g id=\"edge10\" class=\"edge\">\n<title>inputFilters&#45;&gt;resolve</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M268.392,-77.7978C278.2282,-67.6563 287.96,-57.6225 296.4524,-48.8666\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"299.118,-51.1454 303.5678,-41.5303 294.0931,-46.2718 299.118,-51.1454\"/>\n</g>\n</g>\n</svg>\n\n<h3 id=\"for-each-unique-type\"><a href=\"#for-each-unique-type\" aria-label=\"for each unique type permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>For each unique Type</h3>\n<p>The majority of schema generation code kicks off in <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js\">build-node-types.js</a>. The below steps will be executed for each unique type.</p>\n<h4 id=\"1-plugins-create-custom-fields\"><a href=\"#1-plugins-create-custom-fields\" aria-label=\"1 plugins create custom fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Plugins create custom fields</h4>\n<p>Gatsby infers GraphQL Types from the fields on the sourced and transformed nodes. But before that, we allow plugins to create their own custom fields. For example, <code class=\"language-text\">source-filesystem</code> creates a <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/extend-file-node.js#L11\">publicURL</a> field that when resolved, will copy the file into the <code class=\"language-text\">public/static</code> directory and return the new path.</p>\n<p>To declare custom fields, plugins implement the <a href=\"/docs/node-apis/#setFieldsOnGraphQLNodeType\">setFieldsOnGraphQLNodeType</a> API and apply the change only to types that they care about (e.g source-filesystem <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/extend-file-node.js#L6\">only proceeds if type.name = <code class=\"language-text\">File</code></a>. During schema generation, Gatsby will call this API, allowing the plugin to declare these custom fields, <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js#L151\">which are returned</a> to the main schema process.</p>\n<h4 id=\"2-create-a-gqltype\"><a href=\"#2-create-a-gqltype\" aria-label=\"2 create a gqltype permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Create a “GQLType”</h4>\n<p>This step is quite complex, but at its most basic, it infers GraphQL Fields by constructing an <code class=\"language-text\">exampleObject</code> that merges all fields of the type in Redux. It uses this to infer all possible fields and their types, and construct GraphQL versions of them. It does the same for fields created by plugins (like in step 1). This step is explained in detail in <a href=\"/docs/schema-gql-type\">GraphQL Node Types Creation</a>.</p>\n<h4 id=\"3-create-input-filters\"><a href=\"#3-create-input-filters\" aria-label=\"3 create input filters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Create Input filters</h4>\n<p>This step creates GraphQL input filters for each field so the objects can be queried by them. More details in <a href=\"/docs/schema-input-gql\">Building the Input Filters</a>.</p>\n<h4 id=\"4-processedtypenode-creation-with-resolve-implementation\"><a href=\"#4-processedtypenode-creation-with-resolve-implementation\" aria-label=\"4 processedtypenode creation with resolve implementation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. ProcessedTypeNode creation with resolve implementation</h4>\n<p>Finally, we have everything we need to construct our final Gatsby Type object (known as <code class=\"language-text\">ProcessedTypeNode</code>). This contains the input filters and gqlType created above, and implements a resolve function for it using sift. More detail in the <a href=\"/docs/schema-sift\">Querying with Sift</a> section.</p>\n<h4 id=\"5-create-connections-for-each-type\"><a href=\"#5-create-connections-for-each-type\" aria-label=\"5 create connections for each type permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Create Connections for each type</h4>\n<p>We’ve inferred all GraphQL Types, and the ability to query for a single node. But now we need to be able to query for collections of that type (e.g <code class=\"language-text\">allMarkdownRemark</code>). <a href=\"/docs/schema-connections/\">Schema Connections</a> takes care of that.</p>","excerpt":"Once the nodes have been sourced and transformed, the next step is to generate the GraphQL Schema. This is one of the more complex parts of…","timeToRead":4,"fields":{"slug":"/docs/schema-generation/","anchor":"schema-generation"},"frontmatter":{"title":"Schema Generation","overview":null,"issue":null},"parent":{"__typename":"File","relativePath":"docs/schema-generation.md"}}},"pageContext":{"slug":"/docs/schema-generation/"}}