{"data":{"markdownRemark":{"html":"<h1 id=\"using-gatsby-image-to-prevent-image-bloat\"><a href=\"#using-gatsby-image-to-prevent-image-bloat\" aria-label=\"using gatsby image to prevent image bloat permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using gatsby-image to prevent image bloat</h1>\n<p><code class=\"language-text\">gatsby-image</code> is a React component designed to work seamlessly with Gatsby’s GraphQL queries (<a href=\"/packages/gatsby-image/\"><code class=\"language-text\">gatsby-image</code> plugin READme</a>). It combines <a href=\"https://image-processing.gatsbyjs.org/\">Gatsby’s native image processing</a> capabilities with advanced image loading techniques to easily and completely optimize image loading for your sites. <code class=\"language-text\">gatsby-image</code> uses <a href=\"/packages/gatsby-plugin-sharp/\">gatsby-plugin-sharp</a> to power its image transformations.</p>\n<p><em>Warning: gatsby-image is <strong>not</strong> a drop-in replacement for <code class=\"language-text\">&lt;img /&gt;</code>. It’s optimized for fixed width/height images and images that stretch the full-width of a container. Some ways you can use <code class=\"language-text\">&lt;img /&gt;</code> won’t work with gatsby-image.</em></p>\n<p><a href=\"https://using-gatsby-image.gatsbyjs.org/\">Demo</a></p>\n<p><code class=\"language-text\">gatsby-image</code> includes the tricks you’d expect from a modern image component. It:</p>\n<ul>\n<li>uses the new <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\">IntersectionObserver API</a> to cheaply lazy load images</li>\n<li>holds an image’s position so your page doesn’t jump around as images load</li>\n<li>makes it easy to add a placeholder—either a gray background or a blurry version of the image.</li>\n</ul>\n<h2 id=\"problem\"><a href=\"#problem\" aria-label=\"problem permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem</h2>\n<p>Large, unoptimized images dramatically slow down your site.</p>\n<p>But creating optimized images for websites has long been a thorny problem. Ideally you would:</p>\n<ul>\n<li>Resize large images to the size needed by your design</li>\n<li>Generate multiple smaller images so smartphones and tablets don’t download desktop-sized images</li>\n<li>Strip all unnecessary metadata and optimize JPEG and PNG compression</li>\n<li>Efficiently lazy load images to speed initial page load and save bandwidth</li>\n<li>Use the “blur-up” technique or a ”traced placeholder” SVG to show a preview of the image while it loads</li>\n<li>Hold the image position so your page doesn’t jump while images load</li>\n</ul>\n<p>Doing this consistently across a site feels like sisyphean labor. You manually optimize your images and then… several images are swapped in at the last minute or a design-tweak shaves 100px of width off your images.</p>\n<p>Most solutions involve a lot of manual labor and bookkeeping to ensure every image is optimized.</p>\n<p>This isn’t ideal. Optimized images should be easy and the default.</p>\n<h2 id=\"solution\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<p>With Gatsby, we can make images way way better.</p>\n<p><code class=\"language-text\">gatsby-image</code> is designed to work seamlessly with Gatsby’s native image processing capabilities powered by GraphQL and Sharp. To produce perfect images, you only need to:</p>\n<ol>\n<li>Import gatsby-image and use it in place of the built-in img</li>\n<li>Write a GraphQL query using one of the included GraphQL “fragments” which specify the fields needed by <code class=\"language-text\">gatsby-image</code>.</li>\n</ol>\n<p>The GraphQL query creates multiple thumbnails with optimized JPEG and PNG compression. The <code class=\"language-text\">gatsby-image</code> component automatically sets up the “blur-up” effect as well as lazy loading of images further down the screen.</p>\n<p>Here’s what a really simple Gatsby page component using gatsby-image would look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> Img <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby-image\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello gatsby-image</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Img</span> <span class=\"token attr-name\">resolutions</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>childImageSharp<span class=\"token punctuation\">.</span>resolutions<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>So this is all very nice and it’s far better to be able to use this from NPM vs. implementing it yourself or cobbling together several standalone libraries.</p>\n<h3 id=\"references\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References:</h3>\n<ul>\n<li><a href=\"/packages/gatsby-image/\">Plugin READme file</a></li>\n<li><a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-gatsby-image\">Source code for an example site using gatsby-image</a></li>\n<li><a href=\"/blog/tags/gatsby-image/\">Blog articles about gatsby-image</a></li>\n<li><a href=\"/starters/?d=gatsby-image&#x26;v=2\">Starters that use gatsby-image</a></li>\n<li><a href=\"/plugins/?=image\">Other image plugins</a></li>\n<li><a href=\"https://medium.com/@kyle.robert.gill/ridiculously-easy-image-optimization-with-gatsby-js-59d48e15db6e\">“Ridiculously easy image optimization with gatsby-image” by Kyle Gill</a></li>\n</ul>","excerpt":"Using gatsby-image to prevent image bloat  is a React component designed to work seamlessly with Gatsby’s GraphQL queries (  plugin READme…","timeToRead":3,"fields":{"slug":"/docs/using-gatsby-image/","anchor":"using-gatsby-image"},"frontmatter":{"title":"","overview":null,"issue":null},"parent":{"__typename":"File","relativePath":"docs/using-gatsby-image.md"}}},"pageContext":{"slug":"/docs/using-gatsby-image/"}}