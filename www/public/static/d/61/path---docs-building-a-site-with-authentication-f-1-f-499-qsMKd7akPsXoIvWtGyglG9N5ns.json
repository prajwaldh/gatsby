{"data":{"markdownRemark":{"html":"<p>With Gatsby, you are able to create restricted areas in your app. For that, you\nmust use the concept of <a href=\"/docs/building-apps-with-gatsby/#client-only-routes\">client-only routes</a>.</p>\n<p>Using the <a href=\"https://reach.tech/router/\">@reach/router</a> library, which comes\ninstalled with Gatsby, you can control which component will be loaded when a\ncertain route is called, and check for the authentication state before serving\nthe content.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>You must know how to set up a basic Gatsby project. If you need to, check the\n<a href=\"/tutorial\">main tutorial</a>.</p>\n<h2 id=\"setting-the-authentication-workflow\"><a href=\"#setting-the-authentication-workflow\" aria-label=\"setting the authentication workflow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting the authentication workflow</h2>\n<p>To create a common authentication workflow, you can usually follow these steps:</p>\n<ul>\n<li><a href=\"/docs/authentication-tutorial/#creating-client-only-routes\">Create client-only routes</a>,\nto tell Gatsby which routes should be rendered on demand</li>\n<li><a href=\"/docs/authentication-tutorial/#controlling-private-routes\">Wrap private content in a PrivateRoute component</a>,\nto check if a user is authenticated or not, therefore rendering the content or\nredirecting to another page (usually, the login page)</li>\n</ul>\n<h2 id=\"real-world-example-gatsby-store\"><a href=\"#real-world-example-gatsby-store\" aria-label=\"real world example gatsby store permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Real-world example: Gatsby store</h2>\n<p>The <a href=\"https://github.com/gatsbyjs/store.gatsbyjs.org\">Gatsby store</a> uses this\napproach when handling a private route:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// import ...</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PrivateRoute</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> component<span class=\"token punctuation\">:</span> Component<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">!</span><span class=\"token function\">isAuthenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    isBrowser <span class=\"token operator\">&amp;&amp;</span>\n    window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token string\">`/login`</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If we’re not logged in, redirect to the home page.</span>\n    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/app/login`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Router</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Router</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"further-reading\"><a href=\"#further-reading\" aria-label=\"further reading permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Further reading</h2>\n<p>If you want more information about authenticated areas with Gatsby, this (non-exhaustive list) may help:</p>\n<ul>\n<li><a href=\"/docs/authentication-tutorial\">Making a site with user authentication</a>, a Gatsby advanced tutorial</li>\n<li><a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/simple-auth\">Gatsby repo simple auth example</a></li>\n<li><a href=\"https://github.com/DSchau/gatsby-mail\">A Gatsby email <em>application</em></a>, using React Context API to handle authentication</li>\n<li><a href=\"https://github.com/gatsbyjs/store.gatsbyjs.org\">The Gatsby store for swag and other Gatsby goodies</a></li>\n</ul>","excerpt":"With Gatsby, you are able to create restricted areas in your app. For that, you\nmust use the concept of  client-only routes . Using the…","timeToRead":2,"fields":{"slug":"/docs/building-a-site-with-authentication/","anchor":"building-a-site-with-authentication"},"frontmatter":{"title":"Building a site with authentication","overview":null,"issue":null},"parent":{"__typename":"File","relativePath":"docs/building-a-site-with-authentication.md"}}},"pageContext":{"slug":"/docs/building-a-site-with-authentication/"}}