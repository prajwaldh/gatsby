{"data":{"markdownRemark":{"html":"<p>Writing good documentation is important for your project maintainers (and for your future self!). A very nice documentation generator is <a href=\"https://www.docz.site\">Docz</a>. It allows you to easily write interactive docs for your React components.</p>\n<p>Docz leverages <code class=\"language-text\">mdx</code> files — short for Markdown with JSX— which brings <strong>React components</strong> to Markdown files. From your PropTypes, or Flow types or TypeScript types, it can generate <strong>property tables</strong> to document properly how to use your components. In addition, you can provide a <strong>coding playground</strong> for your components, so that anyone can see them in action, modify the code and see the changes live, or copy the snippet to use it somewhere else.</p>\n<p>If you’re starting your Gatsby project from scratch and would like to have great documentation, with Docz support out of the box, you can use the starter mentioned in <a href=\"#other-resources\">Other Resources</a> below.</p>\n<p>Alternatively, the following guide should help you to get Docz working within an existing Gatsby project.</p>\n<h2 id=\"setting-up-your-environment\"><a href=\"#setting-up-your-environment\" aria-label=\"setting up your environment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up your environment</h2>\n<p>First, if you do not have a Gatsby project set up yet, use the Gatsby CLI to create a new site:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx gatsby new my-gatsby-site-with-docz</code></pre></div>\n<p>To set up Docz you need to install dependencies and do some custom configuration. Make sure you are in the root directory of your Gatsby project:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">cd</span> my-gatsby-site-with-docz\ngatsby develop</code></pre></div>\n<p>and test that your Gatsby site is running by going to <a href=\"http://localhost:8000\">http://localhost:8000</a>.</p>\n<p>Going back to your terminal, install the necessary dev dependencies to get a Docz site up and running.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># run this from my-gatsby-site-with-docz/</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev docz docz-theme-default docz-plugin-css @babel/plugin-syntax-dynamic-import webpack-merge</code></pre></div>\n<p>Add the following scripts to your <code class=\"language-text\">package.json</code> file:</p>\n<div class=\"gatsby-code-title\">package.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        ...\n        <span class=\"token property\">\"docz:dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docz dev\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"docz:build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docz build\"</span><span class=\"token punctuation\">,</span>\n        ...\n    <span class=\"token punctuation\">}</span>\n    ...\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Create these two files:</p>\n<ul>\n<li><code class=\"language-text\">doczrc.js</code> to configure Docz,</li>\n<li><code class=\"language-text\">docz/wrapper.js</code> to inject some JavaScript in Docz pages, to ensure compatibility with Gatsby.</li>\n</ul>\n<p>Create a new folder <code class=\"language-text\">docz</code>, and inside that folder, a new file <code class=\"language-text\">wrapper.js</code>. Add the following code to <code class=\"language-text\">wrapper.js</code>:</p>\n<div class=\"gatsby-code-title\">docz/wrapper.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token comment\">// Gatsby's Link overrides:</span>\n<span class=\"token comment\">// Gatsby internal mocking to prevent unnecessary error in docz: __PATH_PREFIX__ is not defined</span>\nglobal<span class=\"token punctuation\">.</span>__PATH_PREFIX__ <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> children</code></pre></div>\n<blockquote>\n<p>You are essentially creating a dummy wrapper that does nothing else than making sure that <code class=\"language-text\">global.__PATH_PREFIX__</code> is defined on every page.</p>\n</blockquote>\n<p>Create a new file called <code class=\"language-text\">doczrc.js</code> in the root directory of your Gatsby project, and add the following content:</p>\n<div class=\"gatsby-code-title\">doczrc.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> merge <span class=\"token keyword\">from</span> <span class=\"token string\">\"webpack-merge\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"docz-plugin-css\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Docz with Gatsby\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Add CSS support in case you use them in your Gatsby project</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Wrapper used to inject some global variable mocks</span></span>  wrapper<span class=\"token punctuation\">:</span> <span class=\"token string\">\"docz/wrapper.js\"</span><span class=\"token punctuation\">,</span>\n  modifyBundlerConfig<span class=\"token punctuation\">:</span> config <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gatsbyNecessaryConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Transpile Gatsby module because Gatsby includes un-transpiled ES6 code.</span>\n            <span class=\"token comment\">// Ignore .json files because they fail to be parsed</span>\n            exclude<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token regex\">/node_modules\\/(?!(gatsby)\\/)/</span><span class=\"token punctuation\">,</span> <span class=\"token regex\">/\\.json$/</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// use installed babel-loader which is v8.0-beta (which is meant to work with @babel/core@7)</span>\n                loader<span class=\"token punctuation\">:</span> <span class=\"token string\">\"babel-loader\"</span><span class=\"token punctuation\">,</span>\n                options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token comment\">// use @babel/preset-react for JSX and env (instead of staged presets)</span>\n                  presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token comment\">// use @babel/plugin-proposal-class-properties for class arrow functions</span>\n                    <span class=\"token string\">\"@babel/plugin-proposal-class-properties\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token comment\">// use @babel/plugin-syntax-dynamic-import for dynamic import support</span>\n                    <span class=\"token string\">\"@babel/plugin-syntax-dynamic-import\"</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>gatsbyNecessaryConfig<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once you have this configured you should run Docz to ensure it can start up properly. You should see by default a <em>Page Not Found</em> page, this is fine as you haven’t created any <code class=\"language-text\">mdx</code> files yet. To run Docz:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> run docz:dev</code></pre></div>\n<p>If Docz builds successfully you should be able to navigate to <code class=\"language-text\">http://localhost:3000</code> and see the default <em>Page Not Found</em> page.</p>\n<h2 id=\"writing-documentation\"><a href=\"#writing-documentation\" aria-label=\"writing documentation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing documentation</h2>\n<p>Docz searches your directory for <code class=\"language-text\">mdx</code> files and renders them. Let’s add your first documentation page by creating a file <code class=\"language-text\">index.mdx</code> in the root directory of your Gatsby project.</p>\n<div class=\"gatsby-code-title\">index.mdx</div>\n<div class=\"gatsby-highlight\" data-language=\"mdx\"><pre class=\"language-mdx\"><code class=\"language-mdx\">---\nname: Getting started\nroute: /\n---\n\n# Getting Started\n\nThis is the start of an amazing Docz site</code></pre></div>\n<p>This is a very simple documentation page without much going on, but let’s spice things up by adding and rendering a Gatsby component. Assuming you have a header component in your components folder which does not rely on <code class=\"language-text\">StaticQuery</code> or <code class=\"language-text\">graphql</code>, you can add:</p>\n<div class=\"gatsby-code-title\">index.mdx</div>\n<div class=\"gatsby-highlight\" data-language=\"mdx\"><pre class=\"language-mdx\"><code class=\"language-mdx\">---\nname: Getting started\nroute: /\n---\n\n//highlight-next-line\nimport Header from &#39;./src/components/header&#39;\n\n# Getting Started\n\nThis is the start of an amazing Docz site\n\n//highlight-next-line\n\n&lt;Header siteTitle=&quot;Hello from Gatsby&quot; /&gt;</code></pre></div>\n<p>Restart the Docz server and voilà!</p>\n<blockquote>\n<p>Note: If your component relies on <code class=\"language-text\">StaticQuery</code> or <code class=\"language-text\">graphql</code>, consider splitting it into two smaller components:</p>\n<ul>\n<li>one React component dealing only with the <strong>UI layer</strong>, and</li>\n<li>another dealing with the <strong>data layer</strong>.</li>\n</ul>\n<p>You could showcase the UI layer React component in your <code class=\"language-text\">mdx</code> files and your data layer component could use it to render the data it fetched thanks to <code class=\"language-text\">StaticQuery</code> and <code class=\"language-text\">graphql</code>.</p>\n</blockquote>\n<h2 id=\"other-resources\"><a href=\"#other-resources\" aria-label=\"other resources permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other resources</h2>\n<ul>\n<li>For more information on Docz visit <a href=\"https://docz.site/\">the Docz site</a></li>\n<li>Get started with a <a href=\"https://github.com/RobinCsl/gatsby-starter-docz\">Docz starter</a></li>\n</ul>","excerpt":"Writing good documentation is important for your project maintainers (and for your future self!). A very nice documentation generator is…","timeToRead":4,"fields":{"slug":"/docs/writing-documentation-with-docz/","anchor":"writing-documentation-with-docz"},"frontmatter":{"title":"Writing documentation with Docz","overview":null,"issue":null},"parent":{"__typename":"File","relativePath":"docs/writing-documentation-with-docz.md"}}},"pageContext":{"slug":"/docs/writing-documentation-with-docz/"}}