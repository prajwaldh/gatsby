{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-source-sanity","description":"Gatsby source plugin for building websites using Sanity.io as a backend.","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin"],"lastPublisher":{"name":"rexxars","avatar":"https://gravatar.com/avatar/3e1447c9a6e5aed088af8ebc4297ffdb"},"repository":{"url":"https://github.com/sanity-io/gatsby-source-sanity"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-source-sanity\"><a href=\"#gatsby-source-sanity\" aria-label=\"gatsby source sanity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-sanity</h1>\n<p>Source plugin for pulling data from <a href=\"https://www.sanity.io/\">Sanity.io</a> into <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> websites.</p>\n<p><a href=\"https://www.youtube.com/watch?v=STtpXBvJmDA\"><img src=\"https://cdn.sanity.io/images/3do82whm/production/4f652e6d114e7010aa633b81cbcb97c335980fc8-1920x1080.png?w=500\" alt=\"Watch a video about the company website built with Gatsby using Sanity.io as a headless CMS\"></a></p>\n<h2 id=\"table-of-content\"><a href=\"#table-of-content\" aria-label=\"table of content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of content</h2>\n<ul>\n<li><a href=\"#known-issues\">Known issues</a></li>\n<li><a href=\"#basic-usage\">Basic Usage</a></li>\n<li><a href=\"#options\">Options</a></li>\n<li><a href=\"#missing-fields\">Missing fields</a></li>\n<li><a href=\"#using-images\">Using images</a></li>\n<li><a href=\"#overlaying-drafts\">Overlaying drafts</a></li>\n<li><a href=\"#watch-mode\">Watch mode</a></li>\n<li><a href=\"#generating-pages\">Generating pages</a></li>\n<li><a href=\"#raw-fields\">“Raw” fields</a></li>\n<li><a href=\"#portable-text--block-content\">Portable Text / Block Content</a></li>\n<li><a href=\"#using-env-variables\">Using environment variables</a></li>\n<li><a href=\"#credits\">Credits</a></li>\n</ul>\n<h2 id=\"known-issues\"><a href=\"#known-issues\" aria-label=\"known issues permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Known issues</h2>\n<p>This is a beta version, as such there are known problems that we are working on.</p>\n<ul>\n<li>Circular references in types break mocking of example values</li>\n<li>Weak references that point to non-existant documents might break the build</li>\n<li>Document references in annotations in Portable Text are not joined in the build</li>\n</ul>\n<h2 id=\"basic-usage\"><a href=\"#basic-usage\" aria-label=\"basic usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic usage</h2>\n<p><a href=\"https://www.youtube.com/watch?v=qU4lFYp3KiQ\">See the getting started video</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i gatsby-source-sanity --save</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// in your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-sanity'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        projectId<span class=\"token punctuation\">:</span> <span class=\"token string\">'abc123'</span><span class=\"token punctuation\">,</span>\n        dataset<span class=\"token punctuation\">:</span> <span class=\"token string\">'blog'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// a token with read permissions is required</span>\n        <span class=\"token comment\">// if you have a private dataset</span>\n        token<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MY_SANITY_TOKEN</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>At this point you can choose to (and probably should) <a href=\"https://www.sanity.io/help/graphql-beta\">set up a GraphQL API</a> for your Sanity dataset, if you have not done so already. This will help the plugin in knowing which types and fields exists, so you can query for them even without them being present in any current documents.</p>\n<p>Go through <a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> after running <code class=\"language-text\">gatsby develop</code> to understand the created data and create a new query and checking available collections and fields by typing <code class=\"language-text\">CTRL + SPACE</code>.</p>\n<h2 id=\"options\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<table>\n<thead>\n<tr>\n<th>Options</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>projectId</td>\n<td>string</td>\n<td></td>\n<td><strong>[required]</strong> Your Sanity project’s ID</td>\n</tr>\n<tr>\n<td>dataset</td>\n<td>string</td>\n<td></td>\n<td><strong>[required]</strong> The dataset to fetch from</td>\n</tr>\n<tr>\n<td>token</td>\n<td>string</td>\n<td></td>\n<td>Authentication token for fetching data from private datasets, or when using <code class=\"language-text\">overlayDrafts</code> <a href=\"https://www.sanity.io/docs/http-auth\">Learn more</a></td>\n</tr>\n<tr>\n<td>overlayDrafts</td>\n<td>boolean</td>\n<td><code class=\"language-text\">false</code></td>\n<td>Set to <code class=\"language-text\">true</code> in order for drafts to replace their published version. By default, drafts will be skipped.</td>\n</tr>\n<tr>\n<td>watchMode</td>\n<td>boolean</td>\n<td><code class=\"language-text\">false</code></td>\n<td>Set to <code class=\"language-text\">true</code> to keep a listener open and update with the latest changes in realtime.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"missing-fields\"><a href=\"#missing-fields\" aria-label=\"missing fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Missing fields</h2>\n<p>Getting errors such as these?</p>\n<blockquote>\n<p>Cannot query field “allSanityBlogPost”\nUnknown field <code class=\"language-text\">preamble</code> on type <code class=\"language-text\">BlogPost</code></p>\n</blockquote>\n<p>By <a href=\"https://www.sanity.io/help/graphql-beta\">deploying a GraphQL API</a> for your dataset, we are able to introspect and figure out which schema types and fields are available and make them available to prevent this problem. Once the API is deployed it will be transparently be applied. If you have deployed your API and are still seeing similar issues, remember that you have to redeploy the API if your schema changes.</p>\n<p>Some background for this problem:</p>\n<p>Gatsby cannot know about the types and fields without having documents of the given types that contain the fields you want to query. This is a <a href=\"https://github.com/gatsbyjs/gatsby/issues/3344\">known problem</a> with Gatsby - luckily there is ongoing work to solve this issue, which will lead to much clearer schemas and less boilerplate.</p>\n<h2 id=\"using-images\"><a href=\"#using-images\" aria-label=\"using images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using images</h2>\n<p>Image fields will have the image URL available under the <code class=\"language-text\">field.asset.url</code> key, but you can also use <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-image\">gatsby-image</a> for a smooth experience. It’s a React component that enables responsive images and advanced image loading techniques. It works great with this source plugin, without requiring any additional build steps.</p>\n<p>There are two types of responsive images supported; <em>fixed</em> and <em>fluid</em>. To decide between the two, ask yourself: “do I know the exact size this image will be?” If yes, you’ll want to use <em>fixed</em>. If no and its width and/or height need to vary depending on the size of the screen, then you’ll want to use <em>fluid</em>.</p>\n<h3 id=\"fluid\"><a href=\"#fluid\" aria-label=\"fluid permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fluid</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> Img <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-image'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Person</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>article<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>sanityPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Img fluid<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>sanityPerson<span class=\"token punctuation\">.</span>profileImage<span class=\"token punctuation\">.</span>asset<span class=\"token punctuation\">.</span>fluid<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Person\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query PersonQuery {\n    sanityPerson {\n      name\n      profileImage {\n        asset {\n          fluid(maxWidth: 700) {\n            ...GatsbySanityImageFluid\n          }\n        }\n      }\n    }\n  }\n`</span></span></code></pre></div>\n<h3 id=\"fixed\"><a href=\"#fixed\" aria-label=\"fixed permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixed</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> Img <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-image'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Person</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>article<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>sanityPerson<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Img fixed<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>sanityPerson<span class=\"token punctuation\">.</span>profileImage<span class=\"token punctuation\">.</span>asset<span class=\"token punctuation\">.</span>fixed<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Person\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query PersonQuery {\n    sanityPerson {\n      name\n      profileImage {\n        asset {\n          fixed(width: 400) {\n            ...GatsbySanityImageFixed\n          }\n        }\n      }\n    }\n  }\n`</span></span></code></pre></div>\n<h3 id=\"available-fragments\"><a href=\"#available-fragments\" aria-label=\"available fragments permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Available fragments</h3>\n<p>These are the fragments available on image assets, which allows easy lookup of the fields required by gatsby-image in various modes:</p>\n<ul>\n<li><code class=\"language-text\">GatsbySanityImageFixed</code></li>\n<li><code class=\"language-text\">GatsbySanityImageFixed_noBase64</code></li>\n<li><code class=\"language-text\">GatsbySanityImageFluid</code></li>\n<li><code class=\"language-text\">GatsbySanityImageFluid_noBase64</code></li>\n</ul>\n<h2 id=\"overlaying-drafts\"><a href=\"#overlaying-drafts\" aria-label=\"overlaying drafts permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overlaying drafts</h2>\n<p>Sometimes you might be working on some new content that is not yet published, which you want to make sure looks alright within your Gatsby site. By setting the <code class=\"language-text\">overlayDrafts</code> setting to <code class=\"language-text\">true</code>, the draft versions will as the option says “overlay” the regular document. In terms of Gatsby nodes, it will <em>replace</em> the published document with the draft.</p>\n<p>Keep in mind that drafts do not have to conform to any validation rules, so your frontend will usually want to double-check all nested properties before attempting to use them.</p>\n<h2 id=\"watch-mode\"><a href=\"#watch-mode\" aria-label=\"watch mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watch mode</h2>\n<p>While developing, it can often be beneficial to get updates without having to manually restart the build process. By setting <code class=\"language-text\">watchMode</code> to true, this plugin will set up a listener which watches for changes. When it detects a change, the document in question is updated in real-time and will be reflected immediately.</p>\n<p>When setting <code class=\"language-text\">overlayDrafts</code> to true, each small change to the draft will immediately be applied.</p>\n<h2 id=\"generating-pages\"><a href=\"#generating-pages\" aria-label=\"generating pages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generating pages</h2>\n<p>Sanity does not have any concept of a “page”, since it’s built to be totally agnostic to how you want to present your content and in which medium, but since you’re using Gatsby, you’ll probably want some pages!</p>\n<p>As with any Gatsby site, you’ll want to create a <code class=\"language-text\">gatsby-node.js</code> in the root of your Gatsby site repository (if it doesn’t already exist), and declare a <code class=\"language-text\">createPages</code> function. Within it, you’ll use GraphQL to query for the data you need to build the pages.</p>\n<p>For instance, if you have a <code class=\"language-text\">project</code> document type in Sanity that you want to generate pages for, you could do something along the lines of this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span>createPages <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>createPage<span class=\"token punctuation\">,</span> createPageDependency<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    {\n      allSanityProject(filter: {slug: {current: {ne: null}}}) {\n        edges {\n          node {\n            title\n            description\n            tags\n            launchDate(format: \"DD.MM.YYYY\")\n            slug {\n              current\n            }\n            image {\n              asset {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> result<span class=\"token punctuation\">.</span>errors\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> projects <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allSanityProject<span class=\"token punctuation\">.</span>edges <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  projects<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/project/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">.</span>current<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n\n    <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">,</span>\n      component<span class=\"token punctuation\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/project.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>slug<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">createPageDependency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">,</span> nodeId<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The above query will fetch all projects that have a <code class=\"language-text\">slug.current</code> field set, and generate pages for them, available as <code class=\"language-text\">/project/&lt;project-slug&gt;</code>. It will use the template defined in <code class=\"language-text\">src/templates/project.js</code> as the basis for these pages.</p>\n<p>Most <a href=\"https://www.gatsbyjs.org/starters/?v=2\">Gatsby starters</a> have some example of building pages, which you should be able to modify to your needs.</p>\n<p>Remember to use the GraphiQL interface to help write the queries you need - it’s usually running at <a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> while running <code class=\"language-text\">gatsby develop</code>.</p>\n<h2 id=\"raw-fields\"><a href=\"#raw-fields\" aria-label=\"raw fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“Raw” fields</h2>\n<p>Arrays and object types at the root of documents will get an additional “raw JSON” representation in a field called <code class=\"language-text\">_raw&lt;FieldName&gt;</code>. For instance, a field named <code class=\"language-text\">body</code> will be mapped to <code class=\"language-text\">_rawBody</code>. It’s important to note that this is only done for top-level nodes (documents).</p>\n<h2 id=\"portable-text--block-content\"><a href=\"#portable-text--block-content\" aria-label=\"portable text  block content permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Portable Text / Block Content</h2>\n<p>Rich text in Sanity is usually represented as <a href=\"https://www.portabletext.org/\">Portable Text</a> (previously known as “Block Content”).</p>\n<p>These data structures can be deep and a chore to query (specifying all the possible fields). As <a href=\"#raw-fields\">noted above</a>, there is a “raw” alternative available for these fields which is usually what you’ll want to use.</p>\n<p>You can install <a href=\"https://www.npmjs.com/package/@sanity/block-content-to-react\">block-content-to-react</a> from npm and use it in your Gatsby project to serialize Portable Text. It lets you use your own React components to override defaults and render custom content types. <a href=\"https://www.sanity.io/docs/content-studio/what-you-need-to-know-about-block-text\">Learn more about Portable Text in our documentation</a>.</p>\n<h2 id=\"using-env-variables\"><a href=\"#using-env-variables\" aria-label=\"using env variables permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using .env variables</h2>\n<p>If you don’t want to attach your Sanity project’s ID to the repo, you can easily store it in .env files by doing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// In your .env file</span>\n<span class=\"token constant\">SANITY_PROJECT_ID</span> <span class=\"token operator\">=</span> abc123\n<span class=\"token constant\">SANITY_DATASET</span> <span class=\"token operator\">=</span> production\n<span class=\"token constant\">SANITY_TOKEN</span> <span class=\"token operator\">=</span> my<span class=\"token operator\">-</span><span class=\"token keyword\">super</span><span class=\"token operator\">-</span>secret<span class=\"token operator\">-</span>token\n\n<span class=\"token comment\">// In your gatsby-config.js file</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`.env.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-sanity'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        projectId<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SANITY_PROJECT_ID</span><span class=\"token punctuation\">,</span>\n        dataset<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SANITY_DATASET</span><span class=\"token punctuation\">,</span>\n        token<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SANITY_TOKEN</span>\n        <span class=\"token comment\">// ...</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This example is based off <a href=\"https://www.gatsbyjs.org/docs/environment-variables/\">Gatsby Docs’ implementation</a>.</p>\n<h2 id=\"credits\"><a href=\"#credits\" aria-label=\"credits permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Credits</h2>\n<p>Huge thanks to <a href=\"https://github.com/hcavalieri\">Henrique Cavalieri</a> for doing the initial implementation of this plugin, and for donating it to the Sanity team. Mad props!</p>\n<p>Big thanks to the good people backing Gatsby for bringing such a joy to our developer days!</p>","timeToRead":8}}}},"pageContext":{"slug":"/packages/gatsby-source-sanity/","id":"1af927ca-344a-5eb5-bab2-16aba94ebb36","layout":"plugins"}}