{"data":{"markdownRemark":null,"npmPackage":{"name":"@mangoart/gatsby-source-cockpit","description":"This is a fork of @fika/gatsby-source-cockpit and you should probably use their implementation. This is a Gatsby version 2.x.x source plugin that feeds the GraphQL tree with Cockpit Headless CMS data. Actually, it supports querying raw texts (and any triv","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin","cockpit","headless-cms","productions"],"lastPublisher":{"name":"markusoehler","avatar":"https://gravatar.com/avatar/fd4342e7818e7d6ca2fd21f37b6e5213"},"repository":{"url":"https://github.com/mangoart/gatsby-source-cockpit"},"readme":{"childMarkdownRemark":{"html":"<p>This is a fork of @fika/gatsby-source-cockpit created to support some older Cockpit Features (e.g. Regions) and some custom AddOns created by MangoART for Cockpit.</p>\n<p>In most cases you should probably prefer to use the @fika release as it might be better supported but if you are interested in one of the changes listed below feel free to try your luck.</p>\n<p>Changes from @fika/gatsby-source:</p>\n<ul>\n<li>Support for Cockpit Regions (relying on some API changes to the Region module so that it also delivers data schema)</li>\n<li>Support for Cockpit Pages (custom Cockpit Extension created by MangoART - basically a Rebranded Region module to give customers an easy to understand “Pages” section)</li>\n<li>Removal of the unnecessary “type” &#x26; “value” nodes for each property</li>\n</ul>\n<p>Original release notes of @fika/gatsby-source-cockpit below.</p>\n<h1 id=\"fikagatsby-source-cockpit\"><a href=\"#fikagatsby-source-cockpit\" aria-label=\"fikagatsby source cockpit permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@fika/gatsby-source-cockpit</h1>\n<p>This is a Gatsby version 2.*.* source plugin that feeds the GraphQL tree with Cockpit Headless CMS collections data.</p>\n<p>Actually, it supports querying raw texts (and any trivial field types), Markdown, images, galleries, assets, sets, repeaters, linked collections and internationalization.</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save @fika/gatsby-source-cockpit</code></pre></div>\n<p>This project has <code class=\"language-text\">gatsby-source-filesystem</code> as a peer dependency, don’t forget to install it as well.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-source-filesystem</code></pre></div>\n<h2 id=\"contributing\"><a href=\"#contributing\" aria-label=\"contributing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contributing</h2>\n<ol>\n<li>Fork main project on github <a href=\"https://github.com/fikaproductions/fika-gatsby-source-cockpit\">here</a>.</li>\n<li>Clone your fork.</li>\n<li>Create a new branch on your local fork.</li>\n<li>Commit and push your changes on this branch.</li>\n<li>Create a pull request on the main project by going <a href=\"https://github.com/fikaproductions/fika-gatsby-source-cockpit/compare\">here</a>, click on “compare across forks” and select your own branch in the “head fork” section.</li>\n<li>Compare changes and submit pull request.</li>\n</ol>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>Add this to your project <code class=\"language-text\">gatsby-config.js</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins: [\n  {\n    resolve: &#39;gatsby-source-filesystem&#39;,\n    options: {\n      name: &#39;src&#39;,\n      path: `${__dirname}/src/`,\n    },\n  },\n  {\n    resolve: &#39;@fika/gatsby-source-cockpit&#39;,\n    options: {\n      token: &#39;YOUR_COCKPIT_API_TOKEN&#39;,\n      baseUrl:\n        &#39;YOUR_COCKPIT_API_BASE_URL&#39;, // (1)\n      locales: [&#39;EVERY_LANGUAGE_KEYS_DEFINED_IN_YOUR_COCKPIT_CONFIGURATION&#39;], // (2)\n      collections: [] // (3)\n    },\n  },\n]</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>E.g. <code class=\"language-text\">&#39;http://localhost:8080&#39;</code>.</li>\n<li>E.g. <code class=\"language-text\">[&#39;en&#39;, &#39;fr&#39;]</code>.</li>\n<li>The specific Cockpit collections you want to fetch. If empty or null all collections will be fetched. E.g. <code class=\"language-text\">[&#39;Products&#39;, &#39;Menu&#39;]</code></li>\n</ol>\n<p>Adding the <code class=\"language-text\">gatsby-source-filesystem</code> dependency to your project grants access to the <code class=\"language-text\">publicURL</code> field resolver attribute on the file nodes that this plugin generates by extending the GraphQL type of the file nodes. So, as you can guess, the path specified in the plugin options could be anything, we do not need it to load any local files, we are just taking advantage of its extension of the file node type.</p>\n<h2 id=\"how-to-query\"><a href=\"#how-to-query\" aria-label=\"how to query permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to query</h2>\n<p>Collections are converted into nodes. You can access many collection entries at once with this syntax:</p>\n<p>(The collection is named ‘team’ or ‘Team’ in Cockpit.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeam(filter: { spiritAnimal: { eq: &quot;tiger&quot; } }) { // (1)\n    edges {\n      node { // (2)\n        cockpitId // (3)\n        TeamMember1\n        TeamMember2\n        TeamMember3\n        children // (4)\n      }\n    }\n  }\n}</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>You can filter amongst them.</li>\n<li>Each node is a collection entry in an array.</li>\n<li>You can get the original Cockpit element’s id (aka the <code class=\"language-text\">_id</code>) that way.</li>\n<li>You can access descendant collection entries within that field if you have hierarchically structured your collection entries in Cockpit (<em>Custom sortable entries</em> turned on).</li>\n</ol>\n<p>Or you can access one entry at the time that way:</p>\n<p>(The collection is named ‘definition’ or ‘Definition’ in Cockpit.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query($locale: String) { // (1)\n    cockpitDefinition(cockpitId: { eq: &quot;5bc78a3679ef0740297b4u04&quot; }, lang: { eq: $locale }) { // (2)\n        Header {\n            type\n            value\n        }\n    }\n}</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>Using <code class=\"language-text\">query</code> with a name or not is optional in GraphQL. However, if you want to use variables from your page context, it is mandatory.</li>\n<li>You can get the appropriate language by filtering on the <code class=\"language-text\">lang</code> attribute.</li>\n</ol>\n<h3 id=\"special-types-of-cockpit-fields\"><a href=\"#special-types-of-cockpit-fields\" aria-label=\"special types of cockpit fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Special types of Cockpit fields</h3>\n<h4 id=\"collection-links\"><a href=\"#collection-links\" aria-label=\"collection links permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection-Links</h4>\n<p>Collection-Link fields will see their value attribute refering to another or many others collection(s) node(s) (GraphQL foreign key). One to many Collection-Links are only supported for multiple entries of a single collection. This an example with a TeamMember collection entry linked within a Team collection:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeam {\n    edges {\n      node {\n        Header {\n          type\n          value\n        }\n        TeamMember {\n          type // (1)\n          value { // (2)\n            id\n            Name {\n              value\n            }\n            Task {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>The type is <code class=\"language-text\">&#39;collectionlink&#39;</code> and it was originally refering to an entry of the TeamMember collection.</li>\n<li>The refered node is attached here. The language is preserved across these bindings.</li>\n</ol>\n<h4 id=\"images-and-gallery\"><a href=\"#images-and-gallery\" aria-label=\"images and gallery permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Images and gallery</h4>\n<p>Image and gallery fields nested within a collection will be downloaded and will get one or more file(s) node(s) attached under the <code class=\"language-text\">value</code> attribute like this:</p>\n<p>(You can then access the child(ren) node(s) a plugin like <code class=\"language-text\">gatsby-transformer-sharp</code> would create.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeamMember {\n    edges {\n      node {\n        Portrait {\n          value {\n            publicURL // (1)\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>You can use this field to access your images if their formats are not supported by <code class=\"language-text\">gatsby-transformer-sharp</code> which is the case for <code class=\"language-text\">svg</code> and <code class=\"language-text\">gif</code> files.</li>\n</ol>\n<h4 id=\"assets\"><a href=\"#assets\" aria-label=\"assets permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assets</h4>\n<p>Just like image fields, asset fields nested within a collection will be downloaded and will get a file node attached under the <code class=\"language-text\">value</code> attribute.</p>\n<p>You can access the file regardless of its type (document, video, etc.) using the <code class=\"language-text\">publicURL</code> field resolver attribute on the file node.</p>\n<h4 id=\"markdown\"><a href=\"#markdown\" aria-label=\"markdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Markdown</h4>\n<p>Markdown fields nested within a collection will get a custom Markdown node attached under the <code class=\"language-text\">value</code> attribute. It mimics a file node — even if there is no existing Markdown file — in order to allow plugins like <code class=\"language-text\">gatsby-transformer-remark</code> to process them. Moreover, images and assets embedded into the Markdown are downloaded and their paths are updated accordingly. Example:</p>\n<p>(You can then access the child node a plugin like <code class=\"language-text\">gatsby-transformer-remark</code> would create.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitDefinition {\n    edges {\n      node {\n        Text {\n          value {\n            childMarkdownRemark {\n              html\n            }\n            internal {\n              content // (1)\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<p>Notes:</p>\n<ol>\n<li>You can access the raw Markdown with this attribute.</li>\n</ol>\n<h4 id=\"set\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set</h4>\n<p>The set field type allows to logically group a number of other fields together.</p>\n<p>You can then access their values as an object in the <code class=\"language-text\">value</code> of the set field.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeamMember {\n    edges {\n      node {\n        ContactData { // field of type set\n          value {\n            telephone {\n              value\n            }\n            fax {\n              value\n            }\n            email {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<h4 id=\"repeater\"><a href=\"#repeater\" aria-label=\"repeater permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repeater</h4>\n<p>Repeater fields are one of the most powerful fields in Cockpit and allow support for two distinct use cases:</p>\n<ol>\n<li>Repeat any other field type (including the set type) an arbitrary number of times resulting in an array of fields with the same type (E.g. <code class=\"language-text\">[Image, Image, Image]</code>)</li>\n<li>Choose from a number of specified fields an arbitrary number of times resulting in an array where each entry might be of a different type (E.g <code class=\"language-text\">[Image, Text, Set]</code>)</li>\n</ol>\n<p>For the first case the values can be queried almost like a normal scalar field. The only difference is that two nested values are needed with the first one representing the array and the second one the value in the array.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeamMember {\n    edges {\n      node {\n        responsibilities { // field of type repeater\n          value { // value of repeater (array)\n            value // value of repeated field\n          }\n        }\n      }\n    }\n  }</code></pre></div>\n<p>The second case is a bit more complicated - in order to not cause any GraphQL Schema conflicts each array value must be of the same type. To achieve this the <code class=\"language-text\">gatsby-source-cockpit</code> plugin implicitely wraps the values in a set field, generating one field in the set for each <code class=\"language-text\">fields</code> option supplied in the repeater configuration.</p>\n<p>E.g. assuming the repeater field is configured with these options:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;fields&quot;: [\n    {\n      &quot;name&quot;: &quot;title&quot;,\n      &quot;type&quot;: &quot;text&quot;,\n      &quot;label&quot;: &quot;Some text&quot;,\n    },\n    {\n      &quot;name&quot;: &quot;photo&quot;,\n      &quot;type&quot;: &quot;image&quot;,\n      &quot;label&quot;: &quot;Funny Photo&quot;,\n    }\n  ]\n}</code></pre></div>\n<p>then the following query is necessary to get the data:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  allCockpitTeamMember {\n    edges {\n      node {\n        responsibilities { // field of type repeater\n          value { // value of repeater (array)\n            title {\n              value\n            }\n            photo {\n              value {\n                ...\n              }\n            }\n          }\n        }\n      }\n    }\n  }</code></pre></div>\n<p><strong>Note:</strong> For this to work the fields specified in the <code class=\"language-text\">field</code> option need to have a <code class=\"language-text\">name</code> attribute which is not required by Cockpit itself. If the name attribute is not set, the plugin will print a warning to the console and generate a <code class=\"language-text\">name</code> value out of the value of the <code class=\"language-text\">label</code> attribute but it is recommended to explicitely specify the <code class=\"language-text\">name</code> value.</p>\n<hr>\n<h2 id=\"powered-by-------a-hrefhttpswwwfikaproductionscomimg-aligncenter-width200-height200-srcsrcimageslogopnga\"><a href=\"#powered-by-------a-hrefhttpswwwfikaproductionscomimg-aligncenter-width200-height200-srcsrcimageslogopnga\" aria-label=\"powered by       a hrefhttpswwwfikaproductionscomimg aligncenter width200 height200 srcsrcimageslogopnga permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Powered by   —    <a href=\"https://www.fikaproductions.com\"><img align=\"center\" width=\"200\" height=\"200\" src=\"src/images/logo.png\"></a></h2>","timeToRead":7}}}},"pageContext":{"slug":"/packages/@mangoart/gatsby-source-cockpit/","id":"ec844e38-f89f-58e6-ad46-f765668f4883","layout":"plugins"}}