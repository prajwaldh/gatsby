{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-background-image","description":"Lazy-loading React background-image component with optional support for the blur-up effect.","keywords":["gatsby","gatsby-component","gatsby-image","backgroundImage","background","image","react-component"],"lastPublisher":{"name":"timhagn","avatar":"https://gravatar.com/avatar/098c7032fb30d750d205b4d23f518a37"},"repository":{"url":"https://github.com/timhagn/gatsby-background-image"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-background-image\"><a href=\"#gatsby-background-image\" aria-label=\"gatsby background image permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-background-image</h1>\n<p>Speedy, optimized <strong>background</strong>-images without the work.</p>\n<p><code class=\"language-text\">gatsby-background-image</code> is a React component based on Gatsby’s own <code class=\"language-text\">gatsby-image</code>\n(truthfully, I pilfered most of their excellent work and adapted it ; ).</p>\n<p>It has all the advantages of <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-image\">gatsby-image</a>,\nincluding the “blur-up” technique or<br>\na ”<a href=\"https://github.com/gatsbyjs/gatsby/issues/2435\">traced placeholder</a>”\nSVG to show a preview of the image while it loads,<br>\n<em>plus</em> being usable as a container (no more hacks with extra wrappers).</p>\n<p>All the glamour (and speed) of <code class=\"language-text\">gatsby-image</code> now for your Background Images!</p>\n<p><strong><em>And it’s even styleable with <code class=\"language-text\">styled-components</code> and the like!</em></strong><br>\n(planned are media-queries: see <a href=\"#todo\">TODO</a>)</p>\n<h2 id=\"example-repo\"><a href=\"#example-repo\" aria-label=\"example repo permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example Repo</h2>\n<p><code class=\"language-text\">gatsby-background-image</code> now has an example repository, where you can see\nit’s similarities &#x26; differences to <code class=\"language-text\">gatsby-image</code> side by side.<br>\nIt’s located at: <a href=\"https://github.com/timhagn/gbitest\">gbitest</a></p>\n<h2 id=\"procedure\"><a href=\"#procedure\" aria-label=\"procedure permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Procedure</h2>\n<p>As <code class=\"language-text\">gatsby-image</code> is designed to work seamlessly with Gatsby’s native image\nprocessing capabilities powered by GraphQL and Sharp, so is <code class=\"language-text\">gatsby-background-image</code>.\nTo produce perfect background-images, you need only:</p>\n<ol>\n<li>Import <code class=\"language-text\">gatsby-background-image</code> and use it in place of the built-in <code class=\"language-text\">div</code>\nor suchlike containers. </li>\n<li>Write a GraphQL query using one of the included GraphQL “fragments”\nwhich specify the fields needed by <code class=\"language-text\">gatsby-background-image</code>.</li>\n</ol>\n<p>The GraphQL query creates multiple thumbnails with optimized JPEG and PNG\ncompression. The <code class=\"language-text\">gatsby-background-image</code> component automatically sets up the\n“blur-up” effect as well as lazy loading of images further down the screen.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-background-image</code></p>\n<p>Depending on the gatsby starter you used, you may need to include <a href=\"/packages/gatsby-transformer-sharp/\">gatsby-transformer-sharp</a> and <a href=\"/packages/gatsby-plugin-sharp/\">gatsby-plugin-sharp</a> as well, and make sure they are installed and included in your gatsby-config.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-transformer-sharp gatsby-plugin-sharp</code></pre></div>\n<p>Then in your <code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-sharp`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-sharp`</span></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Also, make sure you have set up a source plugin, so your images are available in <code class=\"language-text\">graphql</code> queries. For example, if your images live in a project folder on the local filesystem, you would set up <code class=\"language-text\">gatsby-source-filesystem</code> in <code class=\"language-text\">gatsby-config.js</code> like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`path`</span></span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-filesystem`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`images`</span></span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`src`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`images`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-sharp`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-sharp`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>This is what a component using <code class=\"language-text\">gatsby-background-image</code> looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> StaticQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span>\n\n<span class=\"token keyword\">import</span> BackgroundImage <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-background-image'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BackgroundSection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> className <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>StaticQuery query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>graphql<span class=\"token template-string\"><span class=\"token string\">`\n      query {\n        desktop: file(relativePath: { eq: \"seamless-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `</span></span><span class=\"token punctuation\">}</span>\n     render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token comment\">// Set ImageData.</span>\n       <span class=\"token keyword\">const</span> imageData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>desktop<span class=\"token punctuation\">.</span>childImageSharp<span class=\"token punctuation\">.</span>fluid\n       <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BackgroundImage</span> <span class=\"token attr-name\">Tag</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span>\n                           <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span>\n                           <span class=\"token attr-name\">fluid</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>imageData<span class=\"token punctuation\">}</span></span>\n                           <span class=\"token attr-name\">backgroundColor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`#040e18`</span></span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello gatsby-background-image</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BackgroundImage</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> StyledBackgroundSection <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>BackgroundSection<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token string\">`\n  width: 100%;\n  background-repeat: repeat-y;\n`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> StyledBackgroundSection</code></pre></div>\n<h2 id=\"configuration--props\"><a href=\"#configuration--props\" aria-label=\"configuration  props permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration &#x26; props</h2>\n<p><code class=\"language-text\">gatsby-background-image</code> nearly works the same as <code class=\"language-text\">gatsby-image</code> so have a look\nat their <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-image#two-types-of-responsive-images\">options &#x26; props</a>\nto get started.</p>\n<p><code class=\"language-text\">gatsby-background-image</code> has an added classId (as we have to name\npseudo-elements and introduce a className for the returned container):</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">classId</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>classID of the container element, defaults to a random lower case string of seven chars</td>\n</tr>\n</tbody>\n</table>\n<p>Additionally, you are able to style your component with <code class=\"language-text\">styled-components</code> or\nyour CSS-in-JS “framework” of choice. It should work with CSS, too, you just\nhave to target the BackgroundImage-component’s class:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">.gatsby-background-image-[YOUR_ID]<span class=\"token comment\">/*(:before, :after)*/</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> repeat-y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"props-not-available\"><a href=\"#props-not-available\" aria-label=\"props not available permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>props not available</h2>\n<p>As <code class=\"language-text\">gatsby-background-image</code> doesn’t use placeholder-images, the following two\nprops from <code class=\"language-text\">gatsby-image</code> are of course not available (at the moment).</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Old Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">placeholderStyle</code></td>\n<td><code class=\"language-text\">object</code></td>\n<td>Spread into the default styles of the placeholder img element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">placeholderClassName</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>A class that is passed to the placeholder img element</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"todo\"><a href=\"#todo\" aria-label=\"todo permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO</h2>\n<ul>\n<li>add Media-Query support</li>\n</ul>","timeToRead":4}}}},"pageContext":{"slug":"/packages/gatsby-background-image/","id":"6bb20d61-f833-5f2e-9b1b-4fa3729dff69","layout":"plugins"}}