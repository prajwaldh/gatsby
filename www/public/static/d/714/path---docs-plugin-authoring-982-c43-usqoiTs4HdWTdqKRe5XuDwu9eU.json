{"data":{"markdownRemark":{"html":"<p>You may be looking to build a plugin that doesnâ€™t exist yet, or you may just be curious to know more about the anatomy of a Gatsby plugin. Weâ€™ll review:</p>\n<ol>\n<li>the core concepts of what a Gatsby plugin is</li>\n<li>naming conventions for the plugin title</li>\n<li>expected files in a plugin package</li>\n<li>defining a local (unpublished) plugin for your own use case</li>\n<li>how to publish your plugin to the library</li>\n</ol>\n<h2 id=\"core-concepts\"><a href=\"#core-concepts\" aria-label=\"core concepts permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core Concepts</h2>\n<ul>\n<li>Each Gatsby plugin can be created as an npm package or as a <a href=\"#local-plugins\">local plugin</a></li>\n<li>A <code class=\"language-text\">package.json</code> is required</li>\n<li>Plugins implement the Gatsby APIs for <a href=\"/docs/node-apis/\">Node</a>, <a href=\"/docs/ssr-apis/\">server-side rendering</a>, and the <a href=\"/docs/browser-apis/\">browser</a></li>\n</ul>\n<h2 id=\"plugin-naming-conventions\"><a href=\"#plugin-naming-conventions\" aria-label=\"plugin naming conventions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugin naming conventions</h2>\n<p>There are four standard plugin naming conventions for Gatsby:</p>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">gatsby-source-*</code></strong> â€” a source plugin loads data from a given source (e.g. WordPress, MongoDB, the file system). Use this plugin type if you are connecting a new source of data to Gatsby.</p>\n<ul>\n<li>Example: <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-contentful\"><code class=\"language-text\">gatsby-source-contentful</code></a></li>\n<li>Docs: <a href=\"/docs/create-source-plugin/\">create a source plugin</a></li>\n</ul>\n</li>\n<li>\n<p><strong><code class=\"language-text\">gatsby-transformer-*</code></strong> â€” a transformer plugin converts data from one format (e.g. CSV, YAML) to a JavaScript object. Use this naming convention if your plugin will be transforming data from one format to another.</p>\n<ul>\n<li>Example: <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-transformer-yaml\"><code class=\"language-text\">gatsby-transformer-yaml</code></a></li>\n</ul>\n</li>\n<li>\n<p><strong><code class=\"language-text\">gatsby-[plugin-name]-*</code></strong> â€” if a plugin is a plugin for another plugin ðŸ˜…, it should be prefixed with the name of the plugin it extends (e.g. if it adds emoji to the output of <code class=\"language-text\">gatsby-transformer-remark</code>, call it <code class=\"language-text\">gatsby-remark-add-emoji</code>). Use this naming convention whenever your plugin will be included as a plugin in the <code class=\"language-text\">options</code> object of another plugin.</p>\n<ul>\n<li>Example: <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-remark-images\"><code class=\"language-text\">gatsby-remark-images</code></a></li>\n</ul>\n</li>\n<li>\n<p><strong><code class=\"language-text\">gatsby-plugin-*</code></strong> â€” this is the most general plugin type. Use this naming convention if your plugin doesnâ€™t meet the requirements of any other plugin types.</p>\n<ul>\n<li>Example: <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp\"><code class=\"language-text\">gatsby-plugin-sharp</code></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"what-files-does-gatsby-look-for-in-a-plugin\"><a href=\"#what-files-does-gatsby-look-for-in-a-plugin\" aria-label=\"what files does gatsby look for in a plugin permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What files does Gatsby look for in a plugin?</h2>\n<p>All files are optional unless specifically marked as required.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">package.json</code> â€” [required] this can be an empty object (<code class=\"language-text\">{}</code>) for local plugins</p>\n<ul>\n<li><code class=\"language-text\">name</code> is used to identify the plugin when it mutates Gatsbyâ€™s GraphQL data structure</li>\n<li>if <code class=\"language-text\">name</code> isnâ€™t set, the folder name for the plugin is used</li>\n<li><code class=\"language-text\">version</code> is used to manage the cache â€” if it changes, the cache is cleared</li>\n<li>if <code class=\"language-text\">version</code> isnâ€™t set, an MD5 hash of the <code class=\"language-text\">gatsby-*</code> file contents is used to invalidate the cache</li>\n<li>omitting the <code class=\"language-text\">version</code> field is recommended for local plugins</li>\n<li><code class=\"language-text\">keywords</code> is used to make your plugin discoverable</li>\n<li>plugins published on the npm registry should have <code class=\"language-text\">gatsby</code> and <code class=\"language-text\">gatsby-plugin</code> in the <code class=\"language-text\">keywords</code> field to be added to the <a href=\"/packages/\">Plugin Library</a></li>\n</ul>\n</li>\n<li><code class=\"language-text\">gatsby-browser.js</code> â€” usage details are in the <a href=\"/docs/browser-apis/\">browser API reference</a></li>\n<li><code class=\"language-text\">gatsby-node.js</code> â€” usage details are in the <a href=\"/docs/node-apis/\">Node API reference</a></li>\n<li><code class=\"language-text\">gatsby-ssr.js</code> â€” usage details are in the <a href=\"/docs/ssr-apis/\">SSR API reference</a></li>\n</ul>\n<h2 id=\"local-plugins\"><a href=\"#local-plugins\" aria-label=\"local plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local plugins</h2>\n<p>If a plugin is only relevant to your specific use-case, or if youâ€™re developing a plugin and want a simpler workflow, a locally defined plugin is a convenient way to create and manage your plugin code.</p>\n<p>Place the code in the <code class=\"language-text\">plugins</code> folder in the root of your project like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins\nâ””â”€â”€ my-own-plugin\n    â””â”€â”€ package.json</code></pre></div>\n<p><strong>NOTE:</strong> You still need to add the plugin to your <code class=\"language-text\">gatsby-config.js</code>. There is no auto-detection of local plugins.</p>\n<p><strong>NOTE:</strong> For the plugin to be discovered, the pluginâ€™s root folder name is the value that needs to be referenced in order to load it (<em>not</em> its <em>name</em> in its package.json file). For example, in the above structure, the correct way to load the plugin is:</p>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"my-own-plugin\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Like all <code class=\"language-text\">gatsby-*</code> files, the code is not processed by Babel. If you want\nto use JavaScript syntax which isnâ€™t supported by your version of Node.js, you\ncan place the files in a <code class=\"language-text\">src</code> subfolder and build them to the plugin folder\nroot.</p>\n<h2 id=\"publishing-a-plugin-to-the-library\"><a href=\"#publishing-a-plugin-to-the-library\" aria-label=\"publishing a plugin to the library permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Publishing a plugin to the library</h2>\n<p>If youâ€™d like to publish your plugin to the Gatsby Plugin Library (please do!), <a href=\"/docs/submit-to-plugin-library/\">follow these steps</a>.</p>","excerpt":"You may be looking to build a plugin that doesnâ€™t exist yet, or you may just be curious to know more about the anatomy of a Gatsby pluginâ€¦","timeToRead":4,"fields":{"slug":"/docs/plugin-authoring/","anchor":"plugin-authoring"},"frontmatter":{"title":"Plugin authoring","overview":null,"issue":null},"parent":{"__typename":"File","relativePath":"docs/plugin-authoring.md"}}},"pageContext":{"slug":"/docs/plugin-authoring/"}}