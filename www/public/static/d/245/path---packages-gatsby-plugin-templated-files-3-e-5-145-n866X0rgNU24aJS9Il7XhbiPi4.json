{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-plugin-templated-files","description":"Gatsby plugin that converts a folder of files of any type into Gatsby pages via template components.","keywords":["gatsby","gatsby-plugin"],"lastPublisher":{"name":"dhoulb","avatar":"https://gravatar.com/avatar/85a02f27cb24b48ffa9d300afd469ef1"},"repository":{"url":"https://github.com/dhoulb/gatsby-plugin-templated-files"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-plugin-templated-files\"><a href=\"#gatsby-plugin-templated-files\" aria-label=\"gatsby plugin templated files permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin-templated-files</h1>\n<p><a href=\"https://travis-ci.com/dhoulb/gatsby-plugin-templated-files\"><img src=\"https://img.shields.io/travis/dhoulb/gatsby-plugin-templated-files.svg?style=flat\" alt=\"Travis-CI\"></a>\n<a href=\"https://github.com/semantic-release/semantic-release\"><img src=\"https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat\" alt=\"semantic-release\"></a>\n<a href=\"https://github.com/prettier/prettier\"><img src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat\" alt=\"code style: prettier\"></a>\n<a href=\"https://www.npmjs.com/package/gatsby-plugin-templated-files\"><img src=\"https://img.shields.io/npm/dm/gatsby-plugin-templated-files.svg\" alt=\"npm\"></a></p>\n<p>Allows directories of files to be turned into pages in GatsbyJS (v2) via a React template component. Effectively works like <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-page-creator/\"><code class=\"language-text\">gatsby-plugin-page-creator</code></a> but for files of any type.</p>\n<p>The primary use for this will be to crawl a directory of Markdown files and turn them into pages matching that folder heirarchy <em>but without</em> adding boilerplate page-creation code in <code class=\"language-text\">gatsby-node.js</code> file <em>and without</em> needing any <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\"><code class=\"language-text\">gatsby-source-filesystem</code></a> configuration.</p>\n<p>You <em>do</em> still need the <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark/\"><code class=\"language-text\">gatsby-transformer-remark</code></a> plugin to parse your files into Markdown. The example below shows a template using these two plugins together.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npm install gatsby-plugin-templated-files</code></pre></div>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>Configure in your <code class=\"language-text\">gatsby-config.js</code> file. Multiple instances can be included to crawl different paths or use different templates:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-plugin-templated-files\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"pages\"</span><span class=\"token punctuation\">,</span>\n        template<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Page.jsx\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-plugin-templated-files\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"./pastas\"</span><span class=\"token punctuation\">,</span>\n        template<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Pasta.jsx\"</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/pasta/:slug\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-plugin-templated-files\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Crawl the ./blog/ directory</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blog\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Use this template file (relative to src/templates or absolute)</span>\n        template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/othertemplates/Blog.jsx`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Set a format for the URL (defaults to \"/:slug\")</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/blog/{year}/{month}/{day}/{ref}\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// File globs to include (defaults to *.md and *.markdown)</span>\n        include<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"{year}-{month}-{day}-{ref}.txt\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"{year}-{month}-{day}-{ref}.md\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"{year}-{month}-{day}-{ref}.html\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">// File globs to ignore</span>\n        ignore<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"LICENSE.txt\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"LICENSE.md\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n        <span class=\"token comment\">// File globs to use as directory indexes (defaults to index.* and README.*)</span>\n        indexes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"README.md\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"sitepage.html\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"index.*\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"gatsby-plugin-remark\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"options\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<h3 id=\"optionspath-required\"><a href=\"#optionspath-required\" aria-label=\"optionspath required permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.path</code> (required)</h3>\n<p>String path to directory of files to create corresponding pages for, e.g. <code class=\"language-text\">src/blog/</code></p>\n<ul>\n<li>Paths are relative to the site root CWD (where your <code class=\"language-text\">gatsby-config.js</code> is!)</li>\n</ul>\n<h3 id=\"optionstemplate-required\"><a href=\"#optionstemplate-required\" aria-label=\"optionstemplate required permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.template</code> (required)</h3>\n<p>String path to the <code class=\"language-text\">*.js</code> or <code class=\"language-text\">*.jsx</code> template file the pages should use, e.g. <code class=\"language-text\">Blog.jsx</code></p>\n<ul>\n<li>Templates are (by convention) stored in the <code class=\"language-text\">src/templates</code> directory</li>\n<li>Relative paths are relative to the <code class=\"language-text\">src/templates</code>, e.g. <code class=\"language-text\">MyTemplate.jsx</code></li>\n<li>Use absolute paths to point to other directories, e.g. <code class=\"language-text\">${__dirname}/src/other/MyOtherTemplate.js</code></li>\n</ul>\n<h3 id=\"optionsurl-optional\"><a href=\"#optionsurl-optional\" aria-label=\"optionsurl optional permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.url</code> (optional)</h3>\n<p>Set the output URL format for pages. Defaults to <code class=\"language-text\">/:slug</code></p>\n<ul>\n<li>Use to append trailing slashes e.g. <code class=\"language-text\">/:slug/</code></li>\n<li>Use to prepend directories e.g. <code class=\"language-text\">/blog/:slug</code></li>\n<li>Leading slash is recommended but not required</li>\n<li><code class=\"language-text\">:slug</code> parameter is always available</li>\n<li>Parameters created in <code class=\"language-text\">options.include</code> can also be used (e.g. <code class=\"language-text\">:year</code>, see below)</li>\n<li>Parameters can be in <code class=\"language-text\">:express</code>, <code class=\"language-text\">{jsx}</code>, <code class=\"language-text\">${es6}</code>, or <code class=\"language-text\">{{handlebars}}</code> format</li>\n<li>Parameter values are ‘sluggified’, i.e. <code class=\"language-text\">My Page</code> becomes <code class=\"language-text\">my-page</code></li>\n</ul>\n<h3 id=\"optionsinclude-optional\"><a href=\"#optionsinclude-optional\" aria-label=\"optionsinclude optional permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.include</code> (optional)</h3>\n<p>String file glob (or array of globs) to include when crawling the <code class=\"language-text\">options.path</code> dir. If specified will replace the default list:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*.md\n*.markdown</code></pre></div>\n<p><code class=\"language-text\">options.include</code> can include <em>parameters</em> in <code class=\"language-text\">:express</code>, <code class=\"language-text\">{jsx}</code>, <code class=\"language-text\">${es6}</code>, and <code class=\"language-text\">{{handlebars}}</code> formats in order to extract additional information from the filename. These work like <code class=\"language-text\">*</code> wildcard matching <em>but</em> are available for querying in the GraphQL node (as <code class=\"language-text\">params</code>).</p>\n<p>For example if <code class=\"language-text\">options.include</code> was set to <code class=\"language-text\">&quot;:year-:month-:day - :title.md&quot;</code> then files matching the glob <code class=\"language-text\">*-*-* - *.md</code> will be included, and the matched parameters can be used in GraphQL queries:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$year</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  templated<span class=\"token punctuation\">(</span>params <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">year</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$year</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    params <span class=\"token punctuation\">{</span> \n      year\n      month\n      day\n      title\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"optionsignore-optional\"><a href=\"#optionsignore-optional\" aria-label=\"optionsignore optional permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.ignore</code> (optional)</h3>\n<p>String file glob (or array of globs) to ignore when crawling. If specified will <em>add to</em> the default list (dotfiles and npm files):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.*\nyarn.lock\npackage.json\npackage-lock.json\nnode_modules</code></pre></div>\n<h3 id=\"optionsindexes\"><a href=\"#optionsindexes\" aria-label=\"optionsindexes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.indexes</code></h3>\n<p>String file glob (or array of globs) to use as index files, e.g. if <code class=\"language-text\">listing.md</code> is an index then <code class=\"language-text\">a/b/c/listing.md</code> will have the <code class=\"language-text\">a/b/c</code> slug (with no <code class=\"language-text\">listing</code>). Defaults to:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">index.*\nREADME.*</code></pre></div>\n<h3 id=\"note-glob-patterns\"><a href=\"#note-glob-patterns\" aria-label=\"note glob patterns permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Note:</em> glob patterns</h3>\n<p><code class=\"language-text\">options.include</code>, <code class=\"language-text\">options.ignore</code>, and <code class=\"language-text\">options.indexes</code> can include <code class=\"language-text\">*</code> as a wildcard. They do not support other features of glob or RegExp and cannot include directories (only filename patterns like <code class=\"language-text\">*.md</code> and <code class=\"language-text\">README.*</code>).</p>\n<h3 id=\"note-example-configuration\"><a href=\"#note-example-configuration\" aria-label=\"note example configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Note:</em> example configuration</h3>\n<p><a href=\"https://github.com/dhoulb/gatsby-plugin-templated-files/tree/master/demo\">A full example configuration</a> is available to show an example of a basic heirarchical setup, and a setup using file format parameters to construct URLs (year/month/day etc). End-to-end tests are run against this demo so it should be correct!</p>\n<h2 id=\"templates\"><a href=\"#templates\" aria-label=\"templates permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Templates</h2>\n<p>To output your Markdown as HTML (via React) you’ll need to create a template file. These files are just normal GatsbyJS page components which have two requirements:</p>\n<ul>\n<li><code class=\"language-text\">default export</code> a React component</li>\n<li>export a GraphQL query as <code class=\"language-text\">query</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// src/templates/Pasta.jsx</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Component.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Pasta</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>templated<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> markdown <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>childMarkdownRemark<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>article<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>markdown<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title <span class=\"token operator\">||</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">.</span>html <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Query.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query($id: String!) {\n    templated(id: { eq: $id }) {\n      absolutePath       # '/usr/var/www/pastas/Ribbon Pasta/Tagliatelli.md'\n      relativePath       # 'Ribbon Pasta/Tagliatelli.md'\n      name               # 'Tagliatelli'\n      dirs               # ['Ribbon Pasta']\n      childMarkdownRemark { \n        html           # '...parsed Markdown content of Tagliatelli.md...'\n        frontmatter {\n          title      # '...title parsed from frontmatter of Tagliatelli.md...'\n        }\n      }\n    }\n  }\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"how-to-query\"><a href=\"#how-to-query\" aria-label=\"how to query permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to query</h2>\n<p>This GraphQL query retrieves a single <code class=\"language-text\">Templated</code> file node. <strong>All</strong> fields in the node (like <code class=\"language-text\">name</code>, <code class=\"language-text\">extension</code>, <code class=\"language-text\">size</code>, <code class=\"language-text\">dir</code>, <code class=\"language-text\">depth</code>) can be used for filtering and sorting, except for <code class=\"language-text\">content</code> which is lazy-loaded.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  templated<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    id               <span class=\"token comment\"># 'b82587df-f952-5201-85c5-bcb9df3a17ca'</span>\n    absolutePath     <span class=\"token comment\"># '/usr/var/www/pastas/Ribbon Pasta/Tagliatelli.md'</span>\n    relativePath     <span class=\"token comment\"># 'Ribbon Pasta/Tagliatelli.md'</span>\n    rootPath         <span class=\"token comment\"># 'pastas/Ribbon Pasta/Tagliatelli.md'</span>\n    templatePath     <span class=\"token comment\"># '/usr/var/www/src/templates/Pasta.jsx'</span>\n    index            <span class=\"token comment\"># false (would be true for e.g. index.md)</span>\n    base             <span class=\"token comment\"># 'Tagliatelli.md'</span>\n    name             <span class=\"token comment\"># 'Tagliatelli'</span>\n    extension        <span class=\"token comment\"># 'md'</span>\n    dir              <span class=\"token comment\"># 'Ribbon Pasta'</span>\n    dirs             <span class=\"token comment\"># ['Ribbon Pasta']</span>\n    slug             <span class=\"token comment\"># 'ribbon-pasta/tagliatelli'</span>\n    slugs            <span class=\"token comment\"># ['ribbon-pasta', 'tagliatelli']</span>\n    depth            <span class=\"token comment\"># 2</span>\n    url              <span class=\"token comment\"># '/pasta/ribbon-pasta/tagliatelli'</span>\n    size             <span class=\"token comment\"># 1048576</span>\n    prettySize       <span class=\"token comment\"># '1 MB'</span>\n    modifiedTime     <span class=\"token comment\"># 'Mon Oct 22 2018 01:01:33 GMT'</span>\n    accessedTime     <span class=\"token comment\"># 'Mon Oct 22 2018 01:01:33 GMT'</span>\n    changedTime      <span class=\"token comment\"># 'Mon Oct 22 2018 01:01:33 GMT'</span>\n    birthtime        <span class=\"token comment\"># 'Mon Oct 22 2018 01:01:33 GMT'</span>\n    content          <span class=\"token comment\"># '...entire raw contents of Tagliatelli.md...'</span>\n    params <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>        <span class=\"token comment\"># { ...any params extracted from options.include pattern }</span>\n    internal <span class=\"token punctuation\">{</span>\n      type           <span class=\"token comment\"># 'Templated'</span>\n      mediaType      <span class=\"token comment\"># 'text/markdown'</span>\n      contentDigest  <span class=\"token comment\"># '2b365824e5c9240509bc33ec15b05070'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you’re using <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark/\"><code class=\"language-text\">gatsby-transformer-remark</code></a> it’s recommended to query the <code class=\"language-text\">Templated</code> file node first, then add in the child <code class=\"language-text\">MarkdownRemark</code> node using <code class=\"language-text\">childMarkdownRemark</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  templated<span class=\"token punctuation\">(</span><span class=\"token attr-name\">rootPath</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$path</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    absolutePath  <span class=\"token comment\"># '/usr/var/www/pastas/Ribbon Pasta/Tagliatelli.md'</span>\n    rootPath      <span class=\"token comment\"># 'pastas/Ribbon Pasta/Tagliatelli.md'</span>\n    name          <span class=\"token comment\"># 'Tagliatelli'</span>\n    dirs          <span class=\"token comment\"># ['Ribbon Pasta']</span>\n    childMarkdownRemark <span class=\"token punctuation\">{</span> \n      html        <span class=\"token comment\"># '...parsed Markdown content of Tagliatelli.md...'</span>\n      frontmatter <span class=\"token punctuation\">{</span>\n        title     <span class=\"token comment\"># '...title parsed from frontmatter of Tagliatelli.md...'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Query for a list of files with an <code class=\"language-text\">allTemplated</code> query. Results can again be filtered and sorted using any of the <code class=\"language-text\">Templated</code> node’s fields.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allTemplated<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"abc\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">sort</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>rootPath<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">order</span><span class=\"token punctuation\">:</span> DESC <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        base          <span class=\"token comment\"># 'Tagliatelli.md'</span>\n        extension     <span class=\"token comment\"># 'md'</span>\n        dir           <span class=\"token comment\"># 'Ribbon Pasta'</span>\n        modifiedTime  <span class=\"token comment\"># 'Mon Oct 22 2018 01:01:33 GMT'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Query heirarchically nested children of the matched file with the following query. You can use this to output your entire tree of files (up to a required depth) e.g. to build navigation menus or sidebars. <em>You could make this neater with a fragment but we’ve made it explicit for the example.</em></p>\n<p>Heirarchy in this plugin constructs based on the final page URL (i.e. based on your <code class=\"language-text\">options.url</code> setting). So pages at <code class=\"language-text\">/a/x</code> and <code class=\"language-text\">/a/y</code> become children of the page at <code class=\"language-text\">/a</code>). </p>\n<p><em>If you’re receiving an error that <code class=\"language-text\">childrenTemplated</code> does not exist, use <code class=\"language-text\">childTemplated</code> instead. Gatsby creates these automatically based on whether <strong>any</strong> <code class=\"language-text\">Templated</code> nodes in your project have multiple children. This is annoying but there’s no easy workaround.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allTemplated<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">depth</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        depth         <span class=\"token comment\"># 0</span>\n        name          <span class=\"token comment\"># ''</span>\n        dirs          <span class=\"token comment\"># []</span>\n        relativePath  <span class=\"token comment\"># 'index.md'</span>\n        childMarkdownRemark <span class=\"token punctuation\">{</span>\n          frontmatter <span class=\"token punctuation\">{</span>\n            title     <span class=\"token comment\"># 'Pasta Database'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        childrenTemplated <span class=\"token punctuation\">{</span>\n          depth         <span class=\"token comment\"># 1</span>\n          name          <span class=\"token comment\"># 'Ribbon Pasta'</span>\n          dirs          <span class=\"token comment\"># []</span>\n          relativePath  <span class=\"token comment\"># 'Ribbon Pasta/index.md'</span>\n          childMarkdownRemark <span class=\"token punctuation\">{</span>\n            frontmatter <span class=\"token punctuation\">{</span>\n              title     <span class=\"token comment\"># 'Ribbon Pasta'</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          childrenTemplated <span class=\"token punctuation\">{</span>\n            depth         <span class=\"token comment\"># 2</span>\n            name          <span class=\"token comment\"># 'Tagliatelli'</span>\n            dirs          <span class=\"token comment\"># ['Ribbon Pasta']</span>\n            relativePath  <span class=\"token comment\"># 'Ribbon Pasta/Tagliatelli.md'</span>\n            childMarkdownRemark <span class=\"token punctuation\">{</span>\n              frontmatter <span class=\"token punctuation\">{</span>\n                title     <span class=\"token comment\"># 'Tagliatelli'</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"contributing\"><a href=\"#contributing\" aria-label=\"contributing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contributing</h2>\n<p>Useful PRs are welcomed! Code must pass <a href=\"https://eslint.org/\">ESLint</a> (with <a href=\"https://prettier.io/\">Prettier</a> via <a href=\"https://prettier.io/docs/en/eslint.html%5D\">eslint-prettier</a>, <a href=\"https://jestjs.io/\">Jest</a> unit tests, and <a href=\"https://www.cypress.io/\">Cypress</a> end-to-end tests. Run this locally with <code class=\"language-text\">yarn test</code> and wait for it to be confirmed by <a href=\"https://travis-ci.org/\">TravisCI</a>.</p>\n<p>All commits on the master branch are deployed automatically using <a href=\"https://github.com/semantic-release/semantic-release\">semantic-release</a> which bumps version numbers automatically based on commit messages, so Commits must follow <a href=\"https://www.conventionalcommits.org/\">Conventional Commits</a>. This is enforced by a <a href=\"https://github.com/typicode/husky\">Husky</a> precommit hook.</p>\n<h2 id=\"changelog\"><a href=\"#changelog\" aria-label=\"changelog permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changelog</h2>\n<p>See <a href=\"https://github.com/dhoulb/gatsby-plugin-templated-files/releases\">Releases</a></p>","timeToRead":8}}}},"pageContext":{"slug":"/packages/gatsby-plugin-templated-files/","id":"4b0b2144-5843-53d6-b890-139f987574b8","layout":"plugins"}}