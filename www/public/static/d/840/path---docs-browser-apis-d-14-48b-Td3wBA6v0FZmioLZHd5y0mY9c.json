{"data":{"file":{"childrenDocumentationJs":[{"name":"onClientEntry","description":{"childMarkdownRemark":{"html":"<p>Called when the Gatsby browser runtime first starts.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onClientEntry</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We've started!\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">callAnalyticsAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[]},{"name":"onInitialClientRender","description":{"childMarkdownRemark":{"html":"<p>Called when the initial (but not subsequent) render of Gatsby App is done on the client.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onInitialClientRender</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ReactDOM.render has executed\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[]},{"name":"onPreRouteUpdate","description":{"childMarkdownRemark":{"html":"<p>Called when changing location is started.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPreRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">,</span> prevLocation <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gatsby started to change location to\"</span><span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gatsby started to change location from\"</span><span class=\"token punctuation\">,</span> prevLocation <span class=\"token operator\">?</span> prevLocation<span class=\"token punctuation\">.</span>pathname <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"location","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>A location object</p>"}},"properties":null},{"name":"prevLocation","type":{"name":null},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The previous location object</p>"}},"properties":null}]}]},{"name":"onRouteUpdateDelayed","description":{"childMarkdownRemark":{"html":"<p>Called when changing location is longer than 1 second.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onRouteUpdateDelayed</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We can show loading indicator now\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"location","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>A location object</p>"}},"properties":null},{"name":"action","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The “action” that caused the route change</p>"}},"properties":null}]}]},{"name":"onRouteUpdate","description":{"childMarkdownRemark":{"html":"<p>Called when the user changes routes</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">,</span> prevLocation <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new pathname'</span><span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'old pathname'</span><span class=\"token punctuation\">,</span> prevLocation <span class=\"token operator\">?</span> prevLocation<span class=\"token punctuation\">.</span>pathname <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Track pageview with google analytics</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">ga</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token string\">`set`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token string\">`page`</span></span><span class=\"token punctuation\">,</span>\n    location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">+</span> location<span class=\"token punctuation\">.</span>search <span class=\"token operator\">+</span> location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">ga</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`send`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`pageview`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"location","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>A location object</p>"}},"properties":null},{"name":"prevLocation","type":{"name":null},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The previous location object</p>"}},"properties":null}]}]},{"name":"shouldUpdateScroll","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to decide if the scroll position should update or\nnot on a route change.</p>"}},"returns":[{"type":{"name":null,"type":"UnionType","elements":[{"name":"boolean","type":"NameExpression"},{"name":"string","type":"NameExpression"},{"name":"Array","type":"NameExpression"}]},"description":{"childMarkdownRemark":{"html":"<p>Should return either an [x, y] Array of\ncoordinates to scroll to, a string of the <code class=\"language-text\">id</code> or <code class=\"language-text\">name</code> of an element to\nscroll to, <code class=\"language-text\">false</code> to not update the scroll position, or <code class=\"language-text\">true</code> for the\ndefault behavior.</p>"}}}],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">shouldUpdateScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routerProps<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> location <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getSavedScrollPosition\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> currentPosition <span class=\"token operator\">=</span> <span class=\"token function\">getSavedScrollPosition</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> queriedPosition <span class=\"token operator\">=</span> <span class=\"token function\">getSavedScrollPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/random`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>currentPosition <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"prevRouterProps","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The previous state of the router before the route change.</p>"}},"properties":null},{"name":"routerProps","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The current state of the router.</p>"}},"properties":null},{"name":"pathname","type":{"name":"string"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The new pathname (for backwards compatibility with v1).</p>"}},"properties":null},{"name":"getSavedScrollPosition","type":{"name":"function"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>Takes a location and returns the\ncoordinates of the last scroll position for that location, or <code class=\"language-text\">null</code>. Gatsby\nsaves scroll positions for each route in <code class=\"language-text\">SessionStorage</code>, so they are\navailable after page reload.</p>"}},"properties":null}]}]},{"name":"registerServiceWorker","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to register a Service Worker. Should be a function that returns true.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">registerServiceWorker</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>"}],"params":[]},{"name":"replaceComponentRenderer","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to replace the page component renderer. This api runner can be used to\nimplement page transitions. See <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-page-transitions\">https://github.com/gatsbyjs/gatsby/tree/master/examples/using-page-transitions</a> for an example of this.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"props","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The props of the page.</p>"}},"properties":null},{"name":"loader","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The gatsby loader.</p>"}},"properties":null}]}]},{"name":"wrapPageElement","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to wrap the page element.</p>\n<p>This is useful for setting wrapper component around pages that won’t get\nunmounted on page change. For setting Provider components use <a href=\"#wrapRootElement\">wrapRootElement</a>.</p>\n<p><em>Note:</em> <a href=\"/docs/ssr-apis/#wrapPageElement\">There is equivalent hook in SSR API</a></p>"}},"returns":[],"examples":[{"highlighted":"<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"./src/components/layout\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">wrapPageElement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> element<span class=\"token punctuation\">,</span> props <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// props provide same data to Layout as Page element will get</span>\n  <span class=\"token comment\">// including location, data, etc - you don't need to pass it</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Layout <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>element<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"element","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The “Page” React Element built by Gatsby.</p>"}},"properties":null},{"name":"props","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>Props object used by page.</p>"}},"properties":null}]}]},{"name":"wrapRootElement","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to wrap the root element.</p>\n<p>This is useful to setup any Providers component that will wrap your application.\nFor setting persistent UI elements around pages use <a href=\"#wrapPageElement\">wrapPageElement</a>.</p>\n<p><em>Note:</em> <a href=\"/docs/ssr-apis/#wrapRootElement\">There is equivalent hook in SSR API</a></p>"}},"returns":[],"examples":[{"highlighted":"<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Provider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span>\n\n<span class=\"token keyword\">import</span> createStore <span class=\"token keyword\">from</span> <span class=\"token string\">\"./src/state/createStore\"</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">wrapRootElement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> element <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>element<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"}],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"element","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The “Root” React Element built by Gatsby.</p>"}},"properties":null}]}]},{"name":"onPrefetchPathname","description":{"childMarkdownRemark":{"html":"<p>Called when prefetching for a pathname is triggered. Allows\nfor plugins with custom prefetching logic.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"pathname","type":{"name":"string"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The pathname whose resources should now be prefetched</p>"}},"properties":null},{"name":"getResourcesForPathname","type":{"name":"function"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>Function for fetching resources related to pathname</p>"}},"properties":null}]}]},{"name":"onPostPrefetchPathname","description":{"childMarkdownRemark":{"html":"<p>Called when prefetching for a pathname is successful. Allows\nfor plugins with custom prefetching logic.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"pathname","type":{"name":"string"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The pathname whose resources have now been prefetched</p>"}},"properties":null},{"name":"getResourceURLsForPathname","type":{"name":"function"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>Function for fetching URLs for resources related to the pathname</p>"}},"properties":null}]}]},{"name":"disableCorePrefetching","description":{"childMarkdownRemark":{"html":"<p>Plugins can take over prefetching logic. If they do, they should call this\nto disable the now duplicate core prefetching logic.</p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">disableCorePrefetching</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span>"}],"params":[]},{"name":"replaceHydrateFunction","description":{"childMarkdownRemark":{"html":"<p>Allow a plugin to replace the ReactDOM.render function call by a custom renderer.\nThis method takes no param and should return a function with same signature as ReactDOM.render()\nNote it’s very important to call the callback after rendering, otherwise Gatsby will not be able to call <code class=\"language-text\">onInitialClientRender</code></p>"}},"returns":[],"examples":[{"highlighted":"exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">replaceHydrateFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rendering!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"}],"params":[]},{"name":"onServiceWorkerInstalled","description":{"childMarkdownRemark":{"html":"<p>Inform plugins when a service worker has been installed.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"serviceWorker","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The service worker instance.</p>"}},"properties":null}]}]},{"name":"onServiceWorkerUpdateFound","description":{"childMarkdownRemark":{"html":"<p>Inform plugins of when a service worker has an update available.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"serviceWorker","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The service worker instance.</p>"}},"properties":null}]}]},{"name":"onServiceWorkerUpdateReady","description":{"childMarkdownRemark":{"html":"<p>Inform plugins when a service worker has been updated in the background\nand the page is ready to reload to apply changes.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"serviceWorker","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The service worker instance.</p>"}},"properties":null}]}]},{"name":"onServiceWorkerActive","description":{"childMarkdownRemark":{"html":"<p>Inform plugins when a service worker has become active.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"serviceWorker","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The service worker instance.</p>"}},"properties":null}]}]},{"name":"onServiceWorkerRedundant","description":{"childMarkdownRemark":{"html":"<p>Inform plugins when a service worker is redundant.</p>"}},"returns":[],"examples":[],"params":[{"name":"$0","type":{"name":"object"},"description":null,"properties":[{"name":"serviceWorker","type":{"name":"object"},"default":null,"description":{"childMarkdownRemark":{"html":"<p>The service worker instance.</p>"}},"properties":null}]}]}]}},"pageContext":{}}